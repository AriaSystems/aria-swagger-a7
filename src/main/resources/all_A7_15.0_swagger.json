{
  "swagger" : "2.0",
  "info" : {
    "title" : "NGAPI core API",
    "description" : "core API for Aria billing",
    "version" : "15.0"
  },
  "host" : "api.future.stage.ariasystems.net",
  "basePath" : "/api/ws/api_ws_class_dispatcher.php",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "#GetAcctPreviewStatementM" : {
      "post" : {
        "summary" : "get_acct_preview_statement_m",
        "description" : "Generates account's preview statement based on provided master plan instance.\n",
        "operationId" : "GetAcctPreviewStatementM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctPreviewStatementMRequest"
          }
        } ],
        "tags" : [ "GetAcctPreviewStatementM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctPreviewStatementMResponse"
            }
          }
        }
      }
    },
    "#CalcCreditReferenceLineM" : {
      "post" : {
        "summary" : "calc_credit_reference_line_m",
        "description" : "Calculates credit reference over invoice line items in the past.\n",
        "operationId" : "CalcCreditReferenceLineM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CalcCreditReferenceLineMRequest"
          }
        } ],
        "tags" : [ "CalcCreditReferenceLineM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CalcCreditReferenceLineMResponse"
            }
          }
        }
      }
    },
    "#GetPaypalAvsStatusM" : {
      "post" : {
        "summary" : "get_paypal_avs_status_m",
        "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
        "operationId" : "GetPaypalAvsStatusM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetPaypalAvsStatusMRequest"
          }
        } ],
        "tags" : [ "GetPaypalAvsStatusM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetPaypalAvsStatusMResponse"
            }
          }
        }
      }
    },
    "#GetCmListM" : {
      "post" : {
        "summary" : "get_cm_list_m",
        "description" : "Returns information about the specified credit memo.\n",
        "operationId" : "GetCmListM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetCmListMRequest"
          }
        } ],
        "tags" : [ "GetCmListM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetCmListMResponse"
            }
          }
        }
      }
    },
    "#IssueRefundToAcctM" : {
      "post" : {
        "summary" : "issue_refund_to_acct_m",
        "description" : "Isues refunds of payment amounts and any invoice line items to be reversed for a specified account. <p> Note: If you use the NETS payment processor, \"Enable Refund for NETS Payment\" must be set to \"True\" in the UI before you use this API, or you receive the error message \"The payment processor does not support refunds\".\n",
        "operationId" : "IssueRefundToAcctM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/IssueRefundToAcctMRequest"
          }
        } ],
        "tags" : [ "IssueRefundToAcctM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/IssueRefundToAcctMResponse"
            }
          }
        }
      }
    },
    "#UnapplyCmM" : {
      "post" : {
        "summary" : "unapply_cm_m",
        "description" : "Unapplies credit memo line credits from invoice gross line.\n",
        "operationId" : "UnapplyCmM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UnapplyCmMRequest"
          }
        } ],
        "tags" : [ "UnapplyCmM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UnapplyCmMResponse"
            }
          }
        }
      }
    },
    "#GetParentForItemClassM" : {
      "post" : {
        "summary" : "get_parent_for_item_class_m",
        "description" : "returns the immediate parent classes for that client",
        "operationId" : "GetParentForItemClassM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetParentForItemClassMRequest"
          }
        } ],
        "tags" : [ "GetParentForItemClassM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetParentForItemClassMResponse"
            }
          }
        }
      }
    },
    "#GenRandomStringM" : {
      "post" : {
        "summary" : "gen_random_string_m",
        "description" : "Generates a random string of letters and/or numbers.\n",
        "operationId" : "GenRandomStringM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GenRandomStringMRequest"
          }
        } ],
        "tags" : [ "GenRandomStringM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GenRandomStringMResponse"
            }
          }
        }
      }
    },
    "#GetAcctCouponDetailsM" : {
      "post" : {
        "summary" : "get_acct_coupon_details_m",
        "description" : "This API provides detailed information including credit templates, discount rules, and discount bundles for coupons that are assigned to an account or a master plan instance.<br /><br /> For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_acct_coupon_details_m_Error_Messages\">get_acct_coupon_details_m error messages</a>.\n",
        "operationId" : "GetAcctCouponDetailsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctCouponDetailsMRequest"
          }
        } ],
        "tags" : [ "GetAcctCouponDetailsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctCouponDetailsMResponse"
            }
          }
        }
      }
    },
    "#GetClientItemsAllM" : {
      "post" : {
        "summary" : "get_client_items_all_m",
        "description" : "This API returns a list of inventory items associated with a client. The information returned includes prices, services, images, supplemental fields, and classes associated with the items.\n",
        "operationId" : "GetClientItemsAllM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetClientItemsAllMRequest"
          }
        } ],
        "tags" : [ "GetClientItemsAllM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetClientItemsAllMResponse"
            }
          }
        }
      }
    },
    "#GetCmDetailsM" : {
      "post" : {
        "summary" : "get_cm_details_m",
        "description" : "Returns information about the specified credit memo.\n",
        "operationId" : "GetCmDetailsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetCmDetailsMRequest"
          }
        } ],
        "tags" : [ "GetCmDetailsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetCmDetailsMResponse"
            }
          }
        }
      }
    },
    "#GetCashCreditsDetailsM" : {
      "post" : {
        "summary" : "get_cash_credits_details_m",
        "description" : "Provides information about cash credits.\n",
        "operationId" : "GetCashCreditsDetailsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetCashCreditsDetailsMRequest"
          }
        } ],
        "tags" : [ "GetCashCreditsDetailsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetCashCreditsDetailsMResponse"
            }
          }
        }
      }
    },
    "#CreateAdvancedServiceCreditM" : {
      "post" : {
        "summary" : "create_advanced_service_credit_m",
        "description" : "This API creates service credit in advance on an account or master plan instance. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/create_advanced_service_credit_m_Error_Messages\">create_advanced_service_credit_m error messages</a>.\n",
        "operationId" : "CreateAdvancedServiceCreditM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CreateAdvancedServiceCreditMRequest"
          }
        } ],
        "tags" : [ "CreateAdvancedServiceCreditM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CreateAdvancedServiceCreditMResponse"
            }
          }
        }
      }
    },
    "#AcctPlanInstallCompleteM" : {
      "post" : {
        "summary" : "acct_plan_install_complete_m",
        "description" : "For accounts with master plans in the pending installation status, marks the installation as failed or successful, causing the master plan to be either terminated or activated accordingly.\n",
        "operationId" : "AcctPlanInstallCompleteM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/AcctPlanInstallCompleteMRequest"
          }
        } ],
        "tags" : [ "AcctPlanInstallCompleteM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/AcctPlanInstallCompleteMResponse"
            }
          }
        }
      }
    },
    "#SendArcThresholdEmailM" : {
      "post" : {
        "summary" : "send_arc_threshold_email_m",
        "description" : "send account holder email message using client's configured template for class 'Z'\n",
        "operationId" : "SendArcThresholdEmailM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SendArcThresholdEmailMRequest"
          }
        } ],
        "tags" : [ "SendArcThresholdEmailM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SendArcThresholdEmailMResponse"
            }
          }
        }
      }
    },
    "#GetAcctUuidsM" : {
      "post" : {
        "summary" : "get_acct_uuids_m",
        "description" : "Returns the set of universally unique identifiers (UUIDs) for all credit card payment methods associated with an account.\n",
        "operationId" : "GetAcctUuidsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctUuidsMRequest"
          }
        } ],
        "tags" : [ "GetAcctUuidsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctUuidsMResponse"
            }
          }
        }
      }
    },
    "#GetAcctGroupsByAcctM" : {
      "post" : {
        "summary" : "get_acct_groups_by_acct_m",
        "description" : "Returns the list of account groups to which an account belongs.",
        "operationId" : "GetAcctGroupsByAcctM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctGroupsByAcctMRequest"
          }
        } ],
        "tags" : [ "GetAcctGroupsByAcctM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctGroupsByAcctMResponse"
            }
          }
        }
      }
    },
    "#GetUserIdFromAcctNoM" : {
      "post" : {
        "summary" : "get_user_id_from_acct_no_m",
        "description" : "Returns the user ID associated with a specified account number.",
        "operationId" : "GetUserIdFromAcctNoM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetUserIdFromAcctNoMRequest"
          }
        } ],
        "tags" : [ "GetUserIdFromAcctNoM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetUserIdFromAcctNoMResponse"
            }
          }
        }
      }
    },
    "#ReinstateTransactionM" : {
      "post" : {
        "summary" : "reinstate_transaction_m",
        "description" : "Creates a new transaction of the type \"Reinstated Charge Transaction\" or \"Reinstated Payment Transaction\". The new transaction corresponds to a previously voided transaction associated with a specified account number and transaction ID. Note that neither the original transaction nor the voided transaction are modified by this API.\n",
        "operationId" : "ReinstateTransactionM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ReinstateTransactionMRequest"
          }
        } ],
        "tags" : [ "ReinstateTransactionM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ReinstateTransactionMResponse"
            }
          }
        }
      }
    },
    "#SetRegUssConfigParamsM" : {
      "post" : {
        "summary" : "set_reg_uss_config_params_m",
        "description" : "Creates a configuration set that can be used to customize the global functionality of a registration or User Self Service application.\n",
        "operationId" : "SetRegUssConfigParamsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SetRegUssConfigParamsMRequest"
          }
        } ],
        "tags" : [ "SetRegUssConfigParamsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SetRegUssConfigParamsMResponse"
            }
          }
        }
      }
    },
    "#GetStatementContentSizeM" : {
      "post" : {
        "summary" : "get_statement_content_size_m",
        "description" : "Returns the number of characters in the given statement.",
        "operationId" : "GetStatementContentSizeM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetStatementContentSizeMRequest"
          }
        } ],
        "tags" : [ "GetStatementContentSizeM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetStatementContentSizeMResponse"
            }
          }
        }
      }
    },
    "#CompareAgainstCcBlacklistM" : {
      "post" : {
        "summary" : "compare_against_cc_blacklist_m",
        "description" : "Compares a card number provided against entries in the blacklist.\n",
        "operationId" : "CompareAgainstCcBlacklistM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CompareAgainstCcBlacklistMRequest"
          }
        } ],
        "tags" : [ "CompareAgainstCcBlacklistM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CompareAgainstCcBlacklistMResponse"
            }
          }
        }
      }
    },
    "#GetQueuedAcctPlansM" : {
      "post" : {
        "summary" : "get_queued_acct_plans_m",
        "description" : "Returns a list of plan changes scheduled to go into effect for a specified account.\n",
        "operationId" : "GetQueuedAcctPlansM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetQueuedAcctPlansMRequest"
          }
        } ],
        "tags" : [ "GetQueuedAcctPlansM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetQueuedAcctPlansMResponse"
            }
          }
        }
      }
    },
    "#TransferAccountBalanceM" : {
      "post" : {
        "summary" : "transfer_account_balance_m",
        "description" : "Transfers the balance from one account to another account.\n",
        "operationId" : "TransferAccountBalanceM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/TransferAccountBalanceMRequest"
          }
        } ],
        "tags" : [ "TransferAccountBalanceM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/TransferAccountBalanceMResponse"
            }
          }
        }
      }
    },
    "#CreateAcctBillingGroupM" : {
      "post" : {
        "summary" : "create_acct_billing_group_m",
        "description" : "Creates a new billing group, optionally a new payment method, and optionally assigns the new billing group to a plan instance.\n",
        "operationId" : "CreateAcctBillingGroupM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CreateAcctBillingGroupMRequest"
          }
        } ],
        "tags" : [ "CreateAcctBillingGroupM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CreateAcctBillingGroupMResponse"
            }
          }
        }
      }
    },
    "#GetInvoiceCmDetailsM" : {
      "post" : {
        "summary" : "get_invoice_cm_details_m",
        "description" : "Provides the allowable credit memo line values for a given invoice.\n",
        "operationId" : "GetInvoiceCmDetailsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetInvoiceCmDetailsMRequest"
          }
        } ],
        "tags" : [ "GetInvoiceCmDetailsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetInvoiceCmDetailsMResponse"
            }
          }
        }
      }
    },
    "#GetAcctPlanBalanceM" : {
      "post" : {
        "summary" : "get_acct_plan_balance_m",
        "description" : "Returns the balance for a specified master plan on a given account.\n",
        "operationId" : "GetAcctPlanBalanceM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctPlanBalanceMRequest"
          }
        } ],
        "tags" : [ "GetAcctPlanBalanceM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctPlanBalanceMResponse"
            }
          }
        }
      }
    },
    "#UpdateOrderM" : {
      "post" : {
        "summary" : "update_order_m",
        "description" : "Update an Order for one or more inventory items ordered by a specified account holder. This call also has the ability to collect a payment for the invoice by specifying \"true\" (1) in the bill_immediately field.\n",
        "operationId" : "UpdateOrderM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateOrderMRequest"
          }
        } ],
        "tags" : [ "UpdateOrderM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateOrderMResponse"
            }
          }
        }
      }
    },
    "#SetExternalObjectIdM" : {
      "post" : {
        "summary" : "set_external_object_id_m",
        "description" : "Sets an external system ID for an internal Aria data object",
        "operationId" : "SetExternalObjectIdM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SetExternalObjectIdMRequest"
          }
        } ],
        "tags" : [ "SetExternalObjectIdM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SetExternalObjectIdMResponse"
            }
          }
        }
      }
    },
    "#GetMasterPlansBySuppFieldM" : {
      "post" : {
        "summary" : "get_master_plans_by_supp_field_m",
        "description" : "Returns the master plans associated with a particular value for a supplemental object field.\n",
        "operationId" : "GetMasterPlansBySuppFieldM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetMasterPlansBySuppFieldMRequest"
          }
        } ],
        "tags" : [ "GetMasterPlansBySuppFieldM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetMasterPlansBySuppFieldMResponse"
            }
          }
        }
      }
    },
    "#SetSessionM" : {
      "post" : {
        "summary" : "set_session_m",
        "description" : "Starts an Aria session for a specified user ID.  Within an Aria session, you can perform functions such as securely processing payment transactions or securely retrieving account information in registration or User Self Service applications.<br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/set_session_m_Error_Messages\">set_session_m error messages</a>.\n",
        "operationId" : "SetSessionM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SetSessionMRequest"
          }
        } ],
        "tags" : [ "SetSessionM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SetSessionMResponse"
            }
          }
        }
      }
    },
    "#BulkRecordUsageM" : {
      "post" : {
        "summary" : "bulk_record_usage_m",
        "description" : "Creates bulk usage records for a specified client for inclusion in a future invoice. For performance reasons, this API should not be used unless there are more than 100 records being inserted. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/bulk_record_usage_m_Error_Messages\">bulk_record_usage_m error messages</a>.\n",
        "operationId" : "BulkRecordUsageM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/BulkRecordUsageMRequest"
          }
        } ],
        "tags" : [ "BulkRecordUsageM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/BulkRecordUsageMResponse"
            }
          }
        }
      }
    },
    "#AuthenticateCallerM" : {
      "post" : {
        "summary" : "authenticate_caller_m",
        "description" : "Verify a client number and auth key combination",
        "operationId" : "AuthenticateCallerM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/AuthenticateCallerMRequest"
          }
        } ],
        "tags" : [ "AuthenticateCallerM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/AuthenticateCallerMResponse"
            }
          }
        }
      }
    },
    "#GetOrderM" : {
      "post" : {
        "summary" : "get_order_m",
        "description" : "Returns information about the orders associated with a specified account.<br /><br /> For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_order_m_Error_Messages\">get_order_m error messages</a>. \n",
        "operationId" : "GetOrderM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetOrderMRequest"
          }
        } ],
        "tags" : [ "GetOrderM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetOrderMResponse"
            }
          }
        }
      }
    },
    "#GetClientItemPricesM" : {
      "post" : {
        "summary" : "get_client_item_prices_m",
        "description" : "Returns a list of prices for inventory item.",
        "operationId" : "GetClientItemPricesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetClientItemPricesMRequest"
          }
        } ],
        "tags" : [ "GetClientItemPricesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetClientItemPricesMResponse"
            }
          }
        }
      }
    },
    "#GetStatementContentM" : {
      "post" : {
        "summary" : "get_statement_content_m",
        "description" : "Returns the contents of a particular statement associated with a specified account.\n",
        "operationId" : "GetStatementContentM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetStatementContentMRequest"
          }
        } ],
        "tags" : [ "GetStatementContentM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetStatementContentMResponse"
            }
          }
        }
      }
    },
    "#GetClientCountriesM" : {
      "post" : {
        "summary" : "get_client_countries_m",
        "description" : "Returns a list of countries and corresponding currencies assigned to a client. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_client_countries_m_Error_Messages\">get_client_countries_m error messages</a>.\n",
        "operationId" : "GetClientCountriesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetClientCountriesMRequest"
          }
        } ],
        "tags" : [ "GetClientCountriesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetClientCountriesMResponse"
            }
          }
        }
      }
    },
    "#CreateInstanceContractM" : {
      "post" : {
        "summary" : "create_instance_contract_m",
        "description" : "Creates a multi-plan contract for a specified account holder and specified list of plans. The plans can be master plans or supplemental plans.\n",
        "operationId" : "CreateInstanceContractM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CreateInstanceContractMRequest"
          }
        } ],
        "tags" : [ "CreateInstanceContractM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CreateInstanceContractMResponse"
            }
          }
        }
      }
    },
    "#ApplyServiceCreditM" : {
      "post" : {
        "summary" : "apply_service_credit_m",
        "description" : "This API applies a service credit to a specified account or a master plan instance.",
        "operationId" : "ApplyServiceCreditM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ApplyServiceCreditMRequest"
          }
        } ],
        "tags" : [ "ApplyServiceCreditM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ApplyServiceCreditMResponse"
            }
          }
        }
      }
    },
    "#GenInvoiceM" : {
      "post" : {
        "summary" : "gen_invoice_m",
        "description" : "This API generates invoices for specified master plan instance, a specific billing group under an account, or for all the billing groups under the account. If a master plan instance has a pending invoice, no other invoice can be applied to the master plan instance until the current pending invoice is approved. An invoice does not generate if the master plan instance billing date is in the future.\n",
        "operationId" : "GenInvoiceM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GenInvoiceMRequest"
          }
        } ],
        "tags" : [ "GenInvoiceM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GenInvoiceMResponse"
            }
          }
        }
      }
    },
    "#GetAcctDetailsAllM" : {
      "post" : {
        "summary" : "get_acct_details_all_m",
        "description" : "This API returns a detailed set of information about an account. In addition to contact, demographic, and basic billing configuration information, you can optionally retrieve plan information, billing group information, and payment method information.\n",
        "operationId" : "GetAcctDetailsAllM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctDetailsAllMRequest"
          }
        } ],
        "tags" : [ "GetAcctDetailsAllM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctDetailsAllMResponse"
            }
          }
        }
      }
    },
    "#GetCurrentSystemVersionM" : {
      "post" : {
        "summary" : "get_current_system_version_m",
        "description" : "Returns the current version number of the Aria platform.\n",
        "operationId" : "GetCurrentSystemVersionM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetCurrentSystemVersionMRequest"
          }
        } ],
        "tags" : [ "GetCurrentSystemVersionM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetCurrentSystemVersionMResponse"
            }
          }
        }
      }
    },
    "#UpdateCcBlacklistM" : {
      "post" : {
        "summary" : "update_cc_blacklist_m",
        "description" : "Adds or removes a card number entry in the blacklist.\n",
        "operationId" : "UpdateCcBlacklistM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateCcBlacklistMRequest"
          }
        } ],
        "tags" : [ "UpdateCcBlacklistM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateCcBlacklistMResponse"
            }
          }
        }
      }
    },
    "#GetTopLevelItemClassM" : {
      "post" : {
        "summary" : "get_top_level_item_class_m",
        "description" : "returns all the parent classes for that client",
        "operationId" : "GetTopLevelItemClassM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetTopLevelItemClassMRequest"
          }
        } ],
        "tags" : [ "GetTopLevelItemClassM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetTopLevelItemClassMResponse"
            }
          }
        }
      }
    },
    "#CreateAcctCompleteM" : {
      "post" : {
        "summary" : "create_acct_complete_m",
        "description" : "This API creates multiple accounts within a parent-child account hierarchy and assigns multiple master plans and, optionally, multiple supplemental plans to each account in the parent-child account hierarchy for Aria clients. <p> All of the following information can be assigned to the account as it is created using this API. <ul> <li>User ID and related login information: User ID, password and secret question information for the account. <li>Contact information: Account, billing and statement contact information, including name, address, email and phone number. <li>Statement information: Specify the statement notification method and format, such as HTML or PDF, and the associated template used to generate a statement for this account. <li>Parent and child plan assignment: Specify which plans on this account are parent plans or child plans\n and the relationships between them. You can also assign standard and custom rate schedules to plans on the account.\n<li>Collection, dunning and  functional account group assignment: Specify the collection, dunning or functional account groups to which this account is assigned. <li>Payment method/term and taxation status: Specify if the account payment method is a credit card, direct debit, or a payment term, an whether the account is tax-exempt. <li>Invoicing/billing information: Specify proration policy and account or billing start/end dates. <li>Surcharges: Specify the type and amount of surcharges applied to the account. <li>Usage: Specify whether unbilled usage is invoiced and if usage pooling is enabled for the account, <li>Coupons and promotions: Specify coupons and promotions to be applied to the account. <li>Revenue recognition: Specify the revenue recognition profile assigned to this account. </ul> For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/create_acct_complete_m\">create_acct_complete_m error messages</a>.\n",
        "operationId" : "CreateAcctCompleteM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CreateAcctCompleteMRequest"
          }
        } ],
        "tags" : [ "CreateAcctCompleteM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CreateAcctCompleteMResponse"
            }
          }
        }
      }
    },
    "#ClientHasEventClassM" : {
      "post" : {
        "summary" : "client_has_event_class_m",
        "description" : "Indicates whether a client is subscribed to the specified event notification class.\n",
        "operationId" : "ClientHasEventClassM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ClientHasEventClassMRequest"
          }
        } ],
        "tags" : [ "ClientHasEventClassM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ClientHasEventClassMResponse"
            }
          }
        }
      }
    },
    "#GetChildForItemClassM" : {
      "post" : {
        "summary" : "get_child_for_item_class_m",
        "description" : "returns the immediate child classes for that client",
        "operationId" : "GetChildForItemClassM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetChildForItemClassMRequest"
          }
        } ],
        "tags" : [ "GetChildForItemClassM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetChildForItemClassMResponse"
            }
          }
        }
      }
    },
    "#GetPlansByPromoCodeM" : {
      "post" : {
        "summary" : "get_plans_by_promo_code_m",
        "description" : "Returns a summary list of plans associated with a specified promotion code.\n",
        "operationId" : "GetPlansByPromoCodeM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetPlansByPromoCodeMRequest"
          }
        } ],
        "tags" : [ "GetPlansByPromoCodeM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetPlansByPromoCodeMResponse"
            }
          }
        }
      }
    },
    "#GetAcctBalanceM" : {
      "post" : {
        "summary" : "get_acct_balance_m",
        "description" : "Return the current currency_cd and balance of account and master plan instances for the given acct_no.",
        "operationId" : "GetAcctBalanceM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctBalanceMRequest"
          }
        } ],
        "tags" : [ "GetAcctBalanceM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctBalanceMResponse"
            }
          }
        }
      }
    },
    "#PreCalcInvoiceM" : {
      "post" : {
        "summary" : "pre_calc_invoice_m",
        "description" : "Calculates a hypothetical invoice based on geographic data and hypothetical invoice line items and returns the taxes that would appear on that hypothetical invoice based on the taxation configuration rules currently set up for the client within Aria.\n",
        "operationId" : "PreCalcInvoiceM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/PreCalcInvoiceMRequest"
          }
        } ],
        "tags" : [ "PreCalcInvoiceM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/PreCalcInvoiceMResponse"
            }
          }
        }
      }
    },
    "#GetAcctPaymentMethodsAndTermsM" : {
      "post" : {
        "summary" : "get_acct_payment_methods_and_terms_m",
        "description" : "This API returns a list of payment methods and payment terms present on the account. It can be filtered to include only payment methods or payment terms by using the \"payments_returned\" input. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_acct_payment_methods_and_terms_m_Error_Messages\">get_acct_payment_methods_and_terms_m error messages</a>.\n",
        "operationId" : "GetAcctPaymentMethodsAndTermsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctPaymentMethodsAndTermsMRequest"
          }
        } ],
        "tags" : [ "GetAcctPaymentMethodsAndTermsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctPaymentMethodsAndTermsMResponse"
            }
          }
        }
      }
    },
    "#GetAcctServiceOutageCreditM" : {
      "post" : {
        "summary" : "get_acct_service_outage_credit_m",
        "description" : "This API retrieves the service outage for an account or master plan instance.\n",
        "operationId" : "GetAcctServiceOutageCreditM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctServiceOutageCreditMRequest"
          }
        } ],
        "tags" : [ "GetAcctServiceOutageCreditM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctServiceOutageCreditMResponse"
            }
          }
        }
      }
    },
    "#SetPaymentResponsibilityM" : {
      "post" : {
        "summary" : "set_payment_responsibility_m",
        "description" : "Specifies the master plan instance on a parent account that is responsible for paying the invoices associated with a master plan instance for a child account.\n",
        "operationId" : "SetPaymentResponsibilityM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SetPaymentResponsibilityMRequest"
          }
        } ],
        "tags" : [ "SetPaymentResponsibilityM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SetPaymentResponsibilityMResponse"
            }
          }
        }
      }
    },
    "#RecordExternalPaymentM" : {
      "post" : {
        "summary" : "record_external_payment_m",
        "description" : "Records a payment transaction for a payment collected from an account holder without using Aria.\n",
        "operationId" : "RecordExternalPaymentM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/RecordExternalPaymentMRequest"
          }
        } ],
        "tags" : [ "RecordExternalPaymentM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/RecordExternalPaymentMResponse"
            }
          }
        }
      }
    },
    "#WriteAcctCommentM" : {
      "post" : {
        "summary" : "write_acct_comment_m",
        "description" : "Adds comments to a specified account record.",
        "operationId" : "WriteAcctCommentM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/WriteAcctCommentMRequest"
          }
        } ],
        "tags" : [ "WriteAcctCommentM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/WriteAcctCommentMResponse"
            }
          }
        }
      }
    },
    "#SetUsgMtdPtdBalM" : {
      "post" : {
        "summary" : "set_usg_mtd_ptd_bal_m",
        "description" : "This API resets the client or master plan instance Billing-Period-To-Date or Month-To-Date unbilled usage balance to zero.\n",
        "operationId" : "SetUsgMtdPtdBalM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SetUsgMtdPtdBalMRequest"
          }
        } ],
        "tags" : [ "SetUsgMtdPtdBalM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SetUsgMtdPtdBalMResponse"
            }
          }
        }
      }
    },
    "#CreateCmM" : {
      "post" : {
        "summary" : "create_cm_m",
        "description" : "Creates a credit memo to adjust the line item charges on the specified invoice.\n",
        "operationId" : "CreateCmM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CreateCmMRequest"
          }
        } ],
        "tags" : [ "CreateCmM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CreateCmMResponse"
            }
          }
        }
      }
    },
    "#KillSessionM" : {
      "post" : {
        "summary" : "kill_session_m",
        "description" : "Ends a customer's session in a registration or User Self Service application. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/kill_session_m_Error_Messages\">kill_session_m error messages</a>.\n",
        "operationId" : "KillSessionM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/KillSessionMRequest"
          }
        } ],
        "tags" : [ "KillSessionM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/KillSessionMResponse"
            }
          }
        }
      }
    },
    "#GetInstanceContractM" : {
      "post" : {
        "summary" : "get_instance_contract_m",
        "description" : "It returns a multi-plan instance contract currently associated with a specified account.\n",
        "operationId" : "GetInstanceContractM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetInstanceContractMRequest"
          }
        } ],
        "tags" : [ "GetInstanceContractM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetInstanceContractMResponse"
            }
          }
        }
      }
    },
    "#GetAcctSurchargesM" : {
      "post" : {
        "summary" : "get_acct_surcharges_m",
        "description" : "Collects the surcharge for the specified account holder.\n",
        "operationId" : "GetAcctSurchargesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctSurchargesMRequest"
          }
        } ],
        "tags" : [ "GetAcctSurchargesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctSurchargesMResponse"
            }
          }
        }
      }
    },
    "#GetClientPlanServiceRatesM" : {
      "post" : {
        "summary" : "get_client_plan_service_rates_m",
        "description" : "Returns information about the rates for a particular service in a specified plan.\n",
        "operationId" : "GetClientPlanServiceRatesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetClientPlanServiceRatesMRequest"
          }
        } ],
        "tags" : [ "GetClientPlanServiceRatesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetClientPlanServiceRatesMResponse"
            }
          }
        }
      }
    },
    "#ReverseAuthorizedElectronicPaymentM" : {
      "post" : {
        "summary" : "reverse_authorized_electronic_payment_m",
        "description" : "Full authorization reversal  for a specified account.\n",
        "operationId" : "ReverseAuthorizedElectronicPaymentM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ReverseAuthorizedElectronicPaymentMRequest"
          }
        } ],
        "tags" : [ "ReverseAuthorizedElectronicPaymentM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ReverseAuthorizedElectronicPaymentMResponse"
            }
          }
        }
      }
    },
    "#GetAcctOpenChargesM" : {
      "post" : {
        "summary" : "get_acct_open_charges_m",
        "description" : "gets open charges for the given account\n",
        "operationId" : "GetAcctOpenChargesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctOpenChargesMRequest"
          }
        } ],
        "tags" : [ "GetAcctOpenChargesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctOpenChargesMResponse"
            }
          }
        }
      }
    },
    "#DeleteAcctCouponM" : {
      "post" : {
        "summary" : "delete_acct_coupon_m",
        "description" : "This API deletes the coupon from the account or master plan instance and cancels any unconsumed credits on the account or master plan instance associated with the coupon",
        "operationId" : "DeleteAcctCouponM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/DeleteAcctCouponMRequest"
          }
        } ],
        "tags" : [ "DeleteAcctCouponM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/DeleteAcctCouponMResponse"
            }
          }
        }
      }
    },
    "#DeleteRegUssParamsM" : {
      "post" : {
        "summary" : "delete_reg_uss_params_m",
        "description" : "Removes the parameter name-value pairs in a particular session.",
        "operationId" : "DeleteRegUssParamsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/DeleteRegUssParamsMRequest"
          }
        } ],
        "tags" : [ "DeleteRegUssParamsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/DeleteRegUssParamsMResponse"
            }
          }
        }
      }
    },
    "#GetRegUssConfigParamsM" : {
      "post" : {
        "summary" : "get_reg_uss_config_params_m",
        "description" : "Returns a configuration set that can be used to customize the global functionality of a registration or User Self Service application. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_reg_uss_config_params_m_Error_Messages\">get_reg_uss_config_params_m error messages</a>.\n",
        "operationId" : "GetRegUssConfigParamsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetRegUssConfigParamsMRequest"
          }
        } ],
        "tags" : [ "GetRegUssConfigParamsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetRegUssConfigParamsMResponse"
            }
          }
        }
      }
    },
    "#GetAvailPlansForAcctM" : {
      "post" : {
        "summary" : "get_avail_plans_for_acct_m",
        "description" : "Returns a list of all plans available for assignment on a particular account\n",
        "operationId" : "GetAvailPlansForAcctM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAvailPlansForAcctMRequest"
          }
        } ],
        "tags" : [ "GetAvailPlansForAcctM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAvailPlansForAcctMResponse"
            }
          }
        }
      }
    },
    "#UpdateAcctCompleteM" : {
      "post" : {
        "summary" : "update_acct_complete_m",
        "description" : "This API allows you to update a broad range of information associated with an account. This information includes: <ul> <li>User ID and related login information: Add or change user ID, password and secret question information for the account. <li>Contact information: Add or change account, billing and statement contact information, including name, address, email and phone number. <li>Statement information: Specify the statement notification method and format, such as HTML or PDF, and the associated template used to generate a statement for this account. <li>Parent and child plan assignment: Specify which plans on this account are parent plans or child plans\n and the relationships between them. You can also assign standard and custom rate schedules to plans on the account.\n<li>Collection, dunning and  functional account group assignment: Specify the collection, dunning or functional account groups to which this account is assigned. <li>Payment method/term and taxation status: Specify if the account payment method is a credit card, direct debit, or a payment term, an whether the account is tax-exempt. <li>Invoicing/billing information: Specify proration policy and account or billing start/end dates. <li>Surcharges: Specify the type and amount of surcharges applied to the account. <li>Usage: Specify whether unbilled usage is invoiced and if usage pooling is enabled for the account, <li>Coupons and promotions: Specify coupons and promotions to be applied to the account. <li>Revenue recognition: Specify the revenue recognition profile assigned to this account. </ul> <p>Any field on an account can be updated. You can clear the value in any field with a type of \"string\", provided that the field is nullable for an account, by entering a '~' in that field. <p>For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/update_acct_complete_m\">update_acct_complete_m error messages</a>.\n",
        "operationId" : "UpdateAcctCompleteM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateAcctCompleteMRequest"
          }
        } ],
        "tags" : [ "UpdateAcctCompleteM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateAcctCompleteMResponse"
            }
          }
        }
      }
    },
    "#UpdateAcctSuppFieldsM" : {
      "post" : {
        "summary" : "update_acct_supp_fields_m",
        "description" : "Changes the value of a particular supplemental field associated with a specified account.\n",
        "operationId" : "UpdateAcctSuppFieldsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateAcctSuppFieldsMRequest"
          }
        } ],
        "tags" : [ "UpdateAcctSuppFieldsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateAcctSuppFieldsMResponse"
            }
          }
        }
      }
    },
    "#GetAcctDunningGroupDetailsM" : {
      "post" : {
        "summary" : "get_acct_dunning_group_details_m",
        "description" : "Retreives the details for a specified dunning group, including the list of master plan instances associated with that dunning group. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_acct_dunning_group_details_m_Error_Messages\">get_acct_dunning_group_details_m error messages</a>.\n",
        "operationId" : "GetAcctDunningGroupDetailsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctDunningGroupDetailsMRequest"
          }
        } ],
        "tags" : [ "GetAcctDunningGroupDetailsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctDunningGroupDetailsMResponse"
            }
          }
        }
      }
    },
    "#UpdateAcctPlanStatusM" : {
      "post" : {
        "summary" : "update_acct_plan_status_m",
        "description" : "Sets the status of a master or supplemental plan for a given account and optionally indicates the number of days or date in the future on which the status change should go into effect. This call can also reset the billing dates on the status change date for master plans changing from a non-billable to a billable status.\n",
        "operationId" : "UpdateAcctPlanStatusM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateAcctPlanStatusMRequest"
          }
        } ],
        "tags" : [ "UpdateAcctPlanStatusM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateAcctPlanStatusMResponse"
            }
          }
        }
      }
    },
    "#GetAcctPaymentHistoryM" : {
      "post" : {
        "summary" : "get_acct_payment_history_m",
        "description" : "Returns a list of payments associated with an account. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_acct_payment_history_m_Error_Messages\">get_acct_payment_history_m error messages</a>.\n",
        "operationId" : "GetAcctPaymentHistoryM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctPaymentHistoryMRequest"
          }
        } ],
        "tags" : [ "GetAcctPaymentHistoryM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctPaymentHistoryMResponse"
            }
          }
        }
      }
    },
    "#CreateWriteoffOrDisputeM" : {
      "post" : {
        "summary" : "create_writeoff_or_dispute_m",
        "description" : "Creates writeoff or dispute-hold for a given invoice.\n",
        "operationId" : "CreateWriteoffOrDisputeM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CreateWriteoffOrDisputeMRequest"
          }
        } ],
        "tags" : [ "CreateWriteoffOrDisputeM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CreateWriteoffOrDisputeMResponse"
            }
          }
        }
      }
    },
    "#RemoveAcctPlanCustomRatesM" : {
      "post" : {
        "summary" : "remove_acct_plan_custom_rates_m",
        "description" : "Removes custom rates from the specified account and plan.\n",
        "operationId" : "RemoveAcctPlanCustomRatesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/RemoveAcctPlanCustomRatesMRequest"
          }
        } ],
        "tags" : [ "RemoveAcctPlanCustomRatesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/RemoveAcctPlanCustomRatesMResponse"
            }
          }
        }
      }
    },
    "#KeepAliveM" : {
      "post" : {
        "summary" : "keep_alive_m",
        "description" : "Increase the given valid session's expiry time by the number of minutes pre-defined for the client.\n",
        "operationId" : "KeepAliveM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/KeepAliveMRequest"
          }
        } ],
        "tags" : [ "KeepAliveM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/KeepAliveMResponse"
            }
          }
        }
      }
    },
    "#GenRbM" : {
      "post" : {
        "summary" : "gen_rb_m",
        "description" : "Executes the rebill process against the specified invoice. It creates a credit memo to offset the charges in the original invoice. Then it creates a new rebill invoice using the changes specified in the rb_line_items array.\n",
        "operationId" : "GenRbM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GenRbMRequest"
          }
        } ],
        "tags" : [ "GenRbM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GenRbMResponse"
            }
          }
        }
      }
    },
    "#SetAcctNotifyOverrideM" : {
      "post" : {
        "summary" : "set_acct_notify_override_m",
        "description" : "Assign or remove the alternate message template for the given template class.\n",
        "operationId" : "SetAcctNotifyOverrideM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SetAcctNotifyOverrideMRequest"
          }
        } ],
        "tags" : [ "SetAcctNotifyOverrideM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SetAcctNotifyOverrideMResponse"
            }
          }
        }
      }
    },
    "#RecordMandateApprovalM" : {
      "post" : {
        "summary" : "record_mandate_approval_m",
        "description" : "Electronically verifies that the end user (Aria account holder) has physically signed a SEPA Direct Debit mandate. Payments can only be made with SEPA Tokenized Direct Debit after the mandate has been approved with this API. It is the client's full responsibility to ensure that the end user signed a paper mandate that verifies that this electronic mandate is valid. Neither Aria or the payment gateway can intervene if the end user disputes signing the mandate later. The client must collect in the account's currency, which must be a currency supported by SEPA DD.\n",
        "operationId" : "RecordMandateApprovalM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/RecordMandateApprovalMRequest"
          }
        } ],
        "tags" : [ "RecordMandateApprovalM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/RecordMandateApprovalMResponse"
            }
          }
        }
      }
    },
    "#UpdateAcctDunningGroupM" : {
      "post" : {
        "summary" : "update_acct_dunning_group_m",
        "description" : "Updates information associated with a specified dunning group.\n",
        "operationId" : "UpdateAcctDunningGroupM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateAcctDunningGroupMRequest"
          }
        } ],
        "tags" : [ "UpdateAcctDunningGroupM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateAcctDunningGroupMResponse"
            }
          }
        }
      }
    },
    "#CreateAcctUniversalContractM" : {
      "post" : {
        "summary" : "create_acct_universal_contract_m",
        "description" : "Creates a universal contract for a specified account holder.\n",
        "operationId" : "CreateAcctUniversalContractM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CreateAcctUniversalContractMRequest"
          }
        } ],
        "tags" : [ "CreateAcctUniversalContractM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CreateAcctUniversalContractMResponse"
            }
          }
        }
      }
    },
    "#CreateOrderWithPlanM" : {
      "post" : {
        "summary" : "create_order_with_plan_m",
        "description" : "allows creation of order and plan changes on a single invoice",
        "operationId" : "CreateOrderWithPlanM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CreateOrderWithPlanMRequest"
          }
        } ],
        "tags" : [ "CreateOrderWithPlanM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CreateOrderWithPlanMResponse"
            }
          }
        }
      }
    },
    "#CollectFromAccountM" : {
      "post" : {
        "summary" : "collect_from_account_m",
        "description" : "Collects a specified amount from a specified account holder using the electronic method of payment on file.\n",
        "operationId" : "CollectFromAccountM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CollectFromAccountMRequest"
          }
        } ],
        "tags" : [ "CollectFromAccountM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CollectFromAccountMResponse"
            }
          }
        }
      }
    },
    "#SavePaypalBillAgreementM" : {
      "post" : {
        "summary" : "save_paypal_bill_agreement_m",
        "description" : "Confirms that a billing agreement has been accepted by the account user, and that PayPal is able to authorize a payment against that billing agreement. The token is a PayPal session token created by the init_paypal_bill_agreement call. If the billing agreement was accepted, then Aria saves the associated agreement identifier in the database to use for future transactions with this account.The merchant must have their PayPal Payment Receiving Preferences (under Profile on PayPal) set to block \"pay with eCheck\" (the box must be checked, and this does not prevent PayPal users from funding transactions with their bank account). If this is not done, any end user who needs to pay remaining balances (beyond the amount in their PayPal account) with a bank account will be unable to make payments. When the box is checked, such bank account funded payments will be secured by the user's credit card in case the bank account transfer fails. The merchant may also choose to have alternate currencies converted to their primary currency on that screen. Merchants who would like to collect in multiple currencies should either elect to convert there, or add additional Currency Balances in their PayPal Profile.\n",
        "operationId" : "SavePaypalBillAgreementM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SavePaypalBillAgreementMRequest"
          }
        } ],
        "tags" : [ "SavePaypalBillAgreementM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SavePaypalBillAgreementMResponse"
            }
          }
        }
      }
    },
    "#GetUnappliedServiceCreditsM" : {
      "post" : {
        "summary" : "get_unapplied_service_credits_m",
        "description" : "For a specified account or master plan instance, this call returns all service credits whose credit amounts have not yet been fully applied. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_unapplied_service_credits_m_Error_Messages\">get_unapplied_service_credits_m error messages</a>.\n",
        "operationId" : "GetUnappliedServiceCreditsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetUnappliedServiceCreditsMRequest"
          }
        } ],
        "tags" : [ "GetUnappliedServiceCreditsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetUnappliedServiceCreditsMResponse"
            }
          }
        }
      }
    },
    "#Authorize3dsecureM" : {
      "post" : {
        "summary" : "authorize_3dsecure_m",
        "description" : "Authorizes a credit card for a specified amount when 3DSecure is required. Please note: This API call does not collect a payment.\n",
        "operationId" : "Authorize3dsecureM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/Authorize3dsecureMRequest"
          }
        } ],
        "tags" : [ "Authorize3dsecureM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/Authorize3dsecureMResponse"
            }
          }
        }
      }
    },
    "#GetAvailPlansForAcctAllM" : {
      "post" : {
        "summary" : "get_avail_plans_for_acct_all_m",
        "description" : "Returns a list of all plans available for assignment on a particular account\n",
        "operationId" : "GetAvailPlansForAcctAllM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAvailPlansForAcctAllMRequest"
          }
        } ],
        "tags" : [ "GetAvailPlansForAcctAllM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAvailPlansForAcctAllMResponse"
            }
          }
        }
      }
    },
    "#GetAcctNsoInclusionListM" : {
      "post" : {
        "summary" : "get_acct_nso_inclusion_list_m",
        "description" : "This API provides all the Active NSOs that are eligible for purchase as one time order.",
        "operationId" : "GetAcctNsoInclusionListM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctNsoInclusionListMRequest"
          }
        } ],
        "tags" : [ "GetAcctNsoInclusionListM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctNsoInclusionListMResponse"
            }
          }
        }
      }
    },
    "#GetRegUssParamsM" : {
      "post" : {
        "summary" : "get_reg_uss_params_m",
        "description" : "Returns the parameter name-value pairs for a specified session ID.",
        "operationId" : "GetRegUssParamsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetRegUssParamsMRequest"
          }
        } ],
        "tags" : [ "GetRegUssParamsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetRegUssParamsMResponse"
            }
          }
        }
      }
    },
    "#UpdateAcctPlanM" : {
      "post" : {
        "summary" : "update_acct_plan_m",
        "description" : "This API updates in the context of an account's plan instance that plan's rates, number of units, associated coupons, status, plan instance description, plan instance fields, usage management tracking, and/or service location.\n",
        "operationId" : "UpdateAcctPlanM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateAcctPlanMRequest"
          }
        } ],
        "tags" : [ "UpdateAcctPlanM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateAcctPlanMResponse"
            }
          }
        }
      }
    },
    "#GetVirtualDatetimeM" : {
      "post" : {
        "summary" : "get_virtual_datetime_m",
        "description" : "Returns the current virtual date, and virtual time for the given client, plus actual system date and system time, and the number of offset hours between the virtual and system date/time. In Production systems these values will have no offset/delta between them as virtual time is only supported in non-production systems. <p> For a list of error messages generated by this API, see  <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_virtual_date_time_m_Error_Messages\">get_virtual_datetime_m error messages</a>.\n",
        "operationId" : "GetVirtualDatetimeM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetVirtualDatetimeMRequest"
          }
        } ],
        "tags" : [ "GetVirtualDatetimeM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetVirtualDatetimeMResponse"
            }
          }
        }
      }
    },
    "#GetInvoiceHistoryM" : {
      "post" : {
        "summary" : "get_invoice_history_m",
        "description" : "Returns the invoice history for a specified master plan instance. The call can return invoices for all billing dates or only invoices for a particular billing date range. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_invoice_history_m_Error_Messages\">get_invoice_history_m error messages</a>.\n",
        "operationId" : "GetInvoiceHistoryM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetInvoiceHistoryMRequest"
          }
        } ],
        "tags" : [ "GetInvoiceHistoryM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetInvoiceHistoryMResponse"
            }
          }
        }
      }
    },
    "#DiscardUsageM" : {
      "post" : {
        "summary" : "discard_usage_m",
        "description" : "If usage recorded in the Aria system was incorrect in some way, this API allows that usage to be discarded.  Records discarded with this API are retained within Aria, but are not billable and will return with excluded reason codes if those usage records are fetched.  Fetching usage from Aria prior to calling this API is not required, as it accepts either Aria-defined usage codes or client-defined usage codes. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/discard_usage_m_Error_Messages\">discard_usage_m error messages</a>.\n",
        "operationId" : "DiscardUsageM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/DiscardUsageMRequest"
          }
        } ],
        "tags" : [ "DiscardUsageM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/DiscardUsageMResponse"
            }
          }
        }
      }
    },
    "#GetClientPlansAllM" : {
      "post" : {
        "summary" : "get_client_plans_all_m",
        "description" : "Returns a detailed list of all plans associated with a client. If you do not filter the call by acct_no, the information returned includes the services and rate schedules associated with the plans. If you filter the call by acct_no, or enter a plan_no or a client_plan_id that is a supplemental plan number, the information returned does not include any master plan service or rate schedule details.\n",
        "operationId" : "GetClientPlansAllM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetClientPlansAllMRequest"
          }
        } ],
        "tags" : [ "GetClientPlansAllM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetClientPlansAllMResponse"
            }
          }
        }
      }
    },
    "#CancelUnappliedServiceCreditsM" : {
      "post" : {
        "summary" : "cancel_unapplied_service_credits_m",
        "description" : "This API cancels all the unapplied service credits and any partially usedrecurring credits on an account or master plan instance.",
        "operationId" : "CancelUnappliedServiceCreditsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CancelUnappliedServiceCreditsMRequest"
          }
        } ],
        "tags" : [ "CancelUnappliedServiceCreditsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CancelUnappliedServiceCreditsMResponse"
            }
          }
        }
      }
    },
    "#GetEmailTemplatesM" : {
      "post" : {
        "summary" : "get_email_templates_m",
        "description" : "Returns the list of email templates associated with a client.\n",
        "operationId" : "GetEmailTemplatesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetEmailTemplatesMRequest"
          }
        } ],
        "tags" : [ "GetEmailTemplatesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetEmailTemplatesMResponse"
            }
          }
        }
      }
    },
    "#GetReversibleInvsByPaymentM" : {
      "post" : {
        "summary" : "get_reversible_invs_by_payment_m",
        "description" : "Returns the list of invoice transactions that were fully or partially paid by a given payment.\n",
        "operationId" : "GetReversibleInvsByPaymentM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetReversibleInvsByPaymentMRequest"
          }
        } ],
        "tags" : [ "GetReversibleInvsByPaymentM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetReversibleInvsByPaymentMResponse"
            }
          }
        }
      }
    },
    "#GetDailyBatchStatusM" : {
      "post" : {
        "summary" : "get_daily_batch_status_m",
        "description" : "Returns a string representing the current status of the Net Terms/Statement Status Mgr batch job for the given client and date.\n",
        "operationId" : "GetDailyBatchStatusM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetDailyBatchStatusMRequest"
          }
        } ],
        "tags" : [ "GetDailyBatchStatusM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetDailyBatchStatusMResponse"
            }
          }
        }
      }
    },
    "#EditAcctPlanQueuedChangesM" : {
      "post" : {
        "summary" : "edit_acct_plan_queued_changes_m",
        "description" : "Modifies an existing queued plan change for a given plan instance. Supported actions include immediately executing a queued plan change, deleting a queued plan change, or modifying the effective date of a queued plan change.\n",
        "operationId" : "EditAcctPlanQueuedChangesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/EditAcctPlanQueuedChangesMRequest"
          }
        } ],
        "tags" : [ "EditAcctPlanQueuedChangesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/EditAcctPlanQueuedChangesMResponse"
            }
          }
        }
      }
    },
    "#BanAcctM" : {
      "post" : {
        "summary" : "ban_acct_m",
        "description" : "Sets an account's status to temporary ban and, optionally, specifies when the ban will be removed and the account returned to its previous status: either on a specific date (date_to_restore) or after a specified number of days (days_to_restore).\n",
        "operationId" : "BanAcctM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/BanAcctMRequest"
          }
        } ],
        "tags" : [ "BanAcctM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/BanAcctMResponse"
            }
          }
        }
      }
    },
    "#VoidTransactionM" : {
      "post" : {
        "summary" : "void_transaction_m",
        "description" : "Voids a particular transaction associated with a specified account.\n",
        "operationId" : "VoidTransactionM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/VoidTransactionMRequest"
          }
        } ],
        "tags" : [ "VoidTransactionM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/VoidTransactionMResponse"
            }
          }
        }
      }
    },
    "#GetRefundDetailsM" : {
      "post" : {
        "summary" : "get_refund_details_m",
        "description" : "Returns refund information, including invoice reversals, for a specified account.\n",
        "operationId" : "GetRefundDetailsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetRefundDetailsMRequest"
          }
        } ],
        "tags" : [ "GetRefundDetailsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetRefundDetailsMResponse"
            }
          }
        }
      }
    },
    "#UpdatePaymentMethodM" : {
      "post" : {
        "summary" : "update_payment_method_m",
        "description" : "This API allows you to update payment method-related information associated with an account. This information includes: <ul> <li>Billing Contact Information: Update, or completely replace, the billing contact associated with a payment method. You can either specify new contact information; or, replace the contact information with another contact already associated with the account, specified by a bill_contact_no.</li> <li>Payment Method: You can update or replace a payment method by specifying a pay_method_type, then supplying the new payment method information.</li> <li>Payment Method Name and Description: When updating or replacing a payment method as described above, you can also replace the Payment Method Name and/or Description.</li> </ul> <p>For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/update_payment_method_m_Error_Messages\">update_payment_method_m error messages</a></p>.\n",
        "operationId" : "UpdatePaymentMethodM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdatePaymentMethodMRequest"
          }
        } ],
        "tags" : [ "UpdatePaymentMethodM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdatePaymentMethodMResponse"
            }
          }
        }
      }
    },
    "#GetAcctCommentsM" : {
      "post" : {
        "summary" : "get_acct_comments_m",
        "description" : "Returns the comments associated with a particular account for a specified date range.\n",
        "operationId" : "GetAcctCommentsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctCommentsMRequest"
          }
        } ],
        "tags" : [ "GetAcctCommentsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctCommentsMResponse"
            }
          }
        }
      }
    },
    "#RemoveAcctFromGroupM" : {
      "post" : {
        "summary" : "remove_acct_from_group_m",
        "description" : "Removes a specific account from a specified account group.",
        "operationId" : "RemoveAcctFromGroupM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/RemoveAcctFromGroupMRequest"
          }
        } ],
        "tags" : [ "RemoveAcctFromGroupM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/RemoveAcctFromGroupMResponse"
            }
          }
        }
      }
    },
    "#GetWebReplacementValsM" : {
      "post" : {
        "summary" : "get_web_replacement_vals_m",
        "description" : "get an array of values for an array of input web replacement strings",
        "operationId" : "GetWebReplacementValsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetWebReplacementValsMRequest"
          }
        } ],
        "tags" : [ "GetWebReplacementValsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetWebReplacementValsMResponse"
            }
          }
        }
      }
    },
    "#SetProvEngineM" : {
      "post" : {
        "summary" : "set_prov_engine_m",
        "description" : "Specifies whether a client should receive event notification messages. If you disable event notification, this simply stops the transmission of the messages but does not prevent the event notification records from being created.  If event notification is  re-enabled, then the client will receive queued notification messages in the order in which they were created.\n",
        "operationId" : "SetProvEngineM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SetProvEngineMRequest"
          }
        } ],
        "tags" : [ "SetProvEngineM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SetProvEngineMResponse"
            }
          }
        }
      }
    },
    "#GetWriteoffDetailsM" : {
      "post" : {
        "summary" : "get_writeoff_details_m",
        "description" : "Returns the writeoff details of an account.",
        "operationId" : "GetWriteoffDetailsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetWriteoffDetailsMRequest"
          }
        } ],
        "tags" : [ "GetWriteoffDetailsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetWriteoffDetailsMResponse"
            }
          }
        }
      }
    },
    "#GetUseridHasOrderedSkuM" : {
      "post" : {
        "summary" : "get_userid_has_ordered_sku_m",
        "description" : "Inidicates whether a user ID has ever ordered or paid for a specified inventory item (SKU).\n",
        "operationId" : "GetUseridHasOrderedSkuM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetUseridHasOrderedSkuMRequest"
          }
        } ],
        "tags" : [ "GetUseridHasOrderedSkuM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetUseridHasOrderedSkuMResponse"
            }
          }
        }
      }
    },
    "#GetAcctPlansAllM" : {
      "post" : {
        "summary" : "get_acct_plans_all_m",
        "description" : "Returns the plan, service, and rate schedule data for all master and supplemental plans assigned to a specified account.\n",
        "operationId" : "GetAcctPlansAllM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctPlansAllMRequest"
          }
        } ],
        "tags" : [ "GetAcctPlansAllM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctPlansAllMResponse"
            }
          }
        }
      }
    },
    "#VoidCreditMemoM" : {
      "post" : {
        "summary" : "void_credit_memo_m",
        "description" : "Voids a previously created credit memo if the credit memo has not already been voided or it was not created due to an issue of a rebill on an invoice.\n",
        "operationId" : "VoidCreditMemoM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/VoidCreditMemoMRequest"
          }
        } ],
        "tags" : [ "VoidCreditMemoM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/VoidCreditMemoMResponse"
            }
          }
        }
      }
    },
    "#VoidInvoiceM" : {
      "post" : {
        "summary" : "void_invoice_m",
        "description" : "Voids a given invoice object and all its associated transactions. Voiding an invoice is permanent and cannot be undone. <p> For a list of error messages generated by this API, see  <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/void_invoice_m_Error_Messages\">void_invoice_m error messages</a>.\n",
        "operationId" : "VoidInvoiceM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/VoidInvoiceMRequest"
          }
        } ],
        "tags" : [ "VoidInvoiceM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/VoidInvoiceMResponse"
            }
          }
        }
      }
    },
    "#UpdateAcctCredentialsM" : {
      "post" : {
        "summary" : "update_acct_credentials_m",
        "description" : "Changes the password, secret question, secret answer, and/or personal identification number for a specified account.\n",
        "operationId" : "UpdateAcctCredentialsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateAcctCredentialsMRequest"
          }
        } ],
        "tags" : [ "UpdateAcctCredentialsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateAcctCredentialsMResponse"
            }
          }
        }
      }
    },
    "#UpdateAcctBillingGroupM" : {
      "post" : {
        "summary" : "update_acct_billing_group_m",
        "description" : "Updates information associated with a specified billing group. <p> For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/update_acct_billing_group_m_Error_Messages\">update_acct_billing_group_m error messages</a>.\n",
        "operationId" : "UpdateAcctBillingGroupM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateAcctBillingGroupMRequest"
          }
        } ],
        "tags" : [ "UpdateAcctBillingGroupM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateAcctBillingGroupMResponse"
            }
          }
        }
      }
    },
    "#GetClientItemSuppFieldsM" : {
      "post" : {
        "summary" : "get_client_item_supp_fields_m",
        "description" : "Returns a list of supplemental fields for inventory item.",
        "operationId" : "GetClientItemSuppFieldsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetClientItemSuppFieldsMRequest"
          }
        } ],
        "tags" : [ "GetClientItemSuppFieldsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetClientItemSuppFieldsMResponse"
            }
          }
        }
      }
    },
    "#GetAllAcctContractsM" : {
      "post" : {
        "summary" : "get_all_acct_contracts_m",
        "description" : "This API returns an array of contracts associated with the given account, as well as contract details. You can optionally filter by contract status.<br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_all_acct_contracts_m_Error_Messages\">get_all_acct_contracts_m error messages</a>.\n",
        "operationId" : "GetAllAcctContractsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAllAcctContractsMRequest"
          }
        } ],
        "tags" : [ "GetAllAcctContractsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAllAcctContractsMResponse"
            }
          }
        }
      }
    },
    "#GetAcctGroupsByClientM" : {
      "post" : {
        "summary" : "get_acct_groups_by_client_m",
        "description" : "Returns the list of account groups associated with a client.",
        "operationId" : "GetAcctGroupsByClientM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctGroupsByClientMRequest"
          }
        } ],
        "tags" : [ "GetAcctGroupsByClientM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctGroupsByClientMResponse"
            }
          }
        }
      }
    },
    "#GetAcctStatusHistoryM" : {
      "post" : {
        "summary" : "get_acct_status_history_m",
        "description" : "Returns the history of modifications to an account's status.\n",
        "operationId" : "GetAcctStatusHistoryM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctStatusHistoryMRequest"
          }
        } ],
        "tags" : [ "GetAcctStatusHistoryM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctStatusHistoryMResponse"
            }
          }
        }
      }
    },
    "#GenStatementM" : {
      "post" : {
        "summary" : "gen_statement_m",
        "description" : "Generates a statement based on a master plan instance on the account. This call can also send the statement to the statement contact's email address on the associated billing group and if statement contact is not specified or email address on the statement contact is not specified then to the associated billing group's primary payment method billing contact's email address. If email address for associated billing group's primary payment method is not specified then to the account contact's email address. Please note: If there are more than one invoices for a master plan instance that has not been included in an statement, an error will occur. If the send_email field is set to true and an email address either on statement contact or on billing contact associated with the primary payment on the associated billing group or on account contact is not found then an error will occur.\n",
        "operationId" : "GenStatementM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GenStatementMRequest"
          }
        } ],
        "tags" : [ "GenStatementM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GenStatementMResponse"
            }
          }
        }
      }
    },
    "#SubscribeEventsM" : {
      "post" : {
        "summary" : "subscribe_events_m",
        "description" : "Subscribes a client to a specified group of event notifications. Please note: In order for this call to work, the client must already be subscribed to the event class to which the specified events belong.\n",
        "operationId" : "SubscribeEventsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SubscribeEventsMRequest"
          }
        } ],
        "tags" : [ "SubscribeEventsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SubscribeEventsMResponse"
            }
          }
        }
      }
    },
    "#CreateOrderM" : {
      "post" : {
        "summary" : "create_order_m",
        "description" : "Creates an invoice for one or more inventory items ordered by a specified account holder. This call also has the ability to collect a payment for the invoice by specifying \"true\" (1) in the bill_immediately field.\n",
        "operationId" : "CreateOrderM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CreateOrderMRequest"
          }
        } ],
        "tags" : [ "CreateOrderM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CreateOrderMResponse"
            }
          }
        }
      }
    },
    "#UpdateAcctNotifyMethodM" : {
      "post" : {
        "summary" : "update_acct_notify_method_m",
        "description" : "Sets the method by which invoices are sent to a specified account.\n",
        "operationId" : "UpdateAcctNotifyMethodM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateAcctNotifyMethodMRequest"
          }
        } ],
        "tags" : [ "UpdateAcctNotifyMethodM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateAcctNotifyMethodMResponse"
            }
          }
        }
      }
    },
    "#SetSessionAuthM" : {
      "post" : {
        "summary" : "set_session_auth_m",
        "description" : "Authenticates a customer who logs into a User Self Service application with a user ID and password. Starts an Aria session for the customer that is logged in. Within the Aria session, you can perform functions such as securely processing payment transactions or securely retrieving account information.\n",
        "operationId" : "SetSessionAuthM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SetSessionAuthMRequest"
          }
        } ],
        "tags" : [ "SetSessionAuthM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SetSessionAuthMResponse"
            }
          }
        }
      }
    },
    "#AssignCustomAcctPlanRatesM" : {
      "post" : {
        "summary" : "assign_custom_acct_plan_rates_m",
        "description" : "Applies custom rates to a particular plan instance and service assigned to a specified account. Please note: Custom rates can be assigned to only recurring and usage-based services.\n",
        "operationId" : "AssignCustomAcctPlanRatesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/AssignCustomAcctPlanRatesMRequest"
          }
        } ],
        "tags" : [ "AssignCustomAcctPlanRatesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/AssignCustomAcctPlanRatesMResponse"
            }
          }
        }
      }
    },
    "#GetPaymentsOnInvoiceM" : {
      "post" : {
        "summary" : "get_payments_on_invoice_m",
        "description" : "Returns a list of payments that are applied against a given invoice. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_payments_on_invoice_m_Error_Messages\">get_payments_on_invoice_m error messages</a>.\n",
        "operationId" : "GetPaymentsOnInvoiceM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetPaymentsOnInvoiceMRequest"
          }
        } ],
        "tags" : [ "GetPaymentsOnInvoiceM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetPaymentsOnInvoiceMResponse"
            }
          }
        }
      }
    },
    "#SetUsgThresholdM" : {
      "post" : {
        "summary" : "set_usg_threshold_m",
        "description" : "This API sets the Billing-Period-To-Date or Month-To-Date unbilled usage threshold amount on the master plan instance for client level event notifications or master plan instance level event notifications. In addition, the API also allows setting threshold levels.\n",
        "operationId" : "SetUsgThresholdM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SetUsgThresholdMRequest"
          }
        } ],
        "tags" : [ "SetUsgThresholdM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SetUsgThresholdMResponse"
            }
          }
        }
      }
    },
    "#GetAcctNoFromUserIdM" : {
      "post" : {
        "summary" : "get_acct_no_from_user_id_m",
        "description" : "Returns the account number associated with a specified user ID.",
        "operationId" : "GetAcctNoFromUserIdM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctNoFromUserIdMRequest"
          }
        } ],
        "tags" : [ "GetAcctNoFromUserIdM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctNoFromUserIdMResponse"
            }
          }
        }
      }
    },
    "#GetAcctCreditsM" : {
      "post" : {
        "summary" : "get_acct_credits_m",
        "description" : "This API returns an array of all service and cash credits associated with the given account or all service credits associated with a master plan instance. In addition, this API also provides the option to limit number of records. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_acct_credits_m_Error_Messages\">get_acct_credits_m error messages</a>.\n",
        "operationId" : "GetAcctCreditsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctCreditsMRequest"
          }
        } ],
        "tags" : [ "GetAcctCreditsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctCreditsMResponse"
            }
          }
        }
      }
    },
    "#GetAllAcctReceiptIdsM" : {
      "post" : {
        "summary" : "get_all_acct_receipt_ids_m",
        "description" : "Returns a list of all client receipt IDs associated with a specified account.\n",
        "operationId" : "GetAllAcctReceiptIdsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAllAcctReceiptIdsMRequest"
          }
        } ],
        "tags" : [ "GetAllAcctReceiptIdsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAllAcctReceiptIdsMResponse"
            }
          }
        }
      }
    },
    "#GetCountryFromIpM" : {
      "post" : {
        "summary" : "get_country_from_ip_m",
        "description" : "Returns the county of origin for a specified IP address. <p> For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_country_from_ip_m_Error_Messages\">get_get_country_from_ip_m error messages</a>.\n",
        "operationId" : "GetCountryFromIpM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetCountryFromIpMRequest"
          }
        } ],
        "tags" : [ "GetCountryFromIpM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetCountryFromIpMResponse"
            }
          }
        }
      }
    },
    "#ApplyCouponToAcctM" : {
      "post" : {
        "summary" : "apply_coupon_to_acct_m",
        "description" : "This API assigns a coupon code to a specified account or master plan instance. The appropriate service credits will then be applied to the account or master plan instance based on the credit template associated with the coupon code. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/apply_coupon_to_acct_m_Error_Messages\">apply_coupon_to_acct_m error messages</a>.\n",
        "operationId" : "ApplyCouponToAcctM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ApplyCouponToAcctMRequest"
          }
        } ],
        "tags" : [ "ApplyCouponToAcctM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ApplyCouponToAcctMResponse"
            }
          }
        }
      }
    },
    "#CopyAcctPaymentMethodM" : {
      "post" : {
        "summary" : "copy_acct_payment_method_m",
        "description" : "This API copies one or more payment methods (and their associated billing contact information) from one customer account in Aria to a different customer account. Clients must validate that the account owner is the same for both the source and target accounts prior to calling this API. Note that payment methods copied to the target account are not by default  associated with a billing group. If no payment methods are specified, all non-disabled payment methods on the source account are copied to the target account. <p>This API must be enabled for use with your organization. Please contact Aria Support for additional information. <p> SPECIAL NOTICE: To provide both security and flexibility, you can copy payment information between accounts within an Aria client environment. Movement of payment data from a source account to a target account is not validated.  It is is the client's responsibility when using this API to ensure that the owner of the source account and the target account is the same. Aria is not responsible for any errors caused when using this API to move payment data.\n",
        "operationId" : "CopyAcctPaymentMethodM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CopyAcctPaymentMethodMRequest"
          }
        } ],
        "tags" : [ "CopyAcctPaymentMethodM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CopyAcctPaymentMethodMResponse"
            }
          }
        }
      }
    },
    "#GetCcVelocityInfoM" : {
      "post" : {
        "summary" : "get_cc_velocity_info_m",
        "description" : "For a card number provided, retrieves information related to collection attempts, authorizations, and primary / backup payment method updates to support velocity analysis. Velocity data can be requested for a specific date range.\n",
        "operationId" : "GetCcVelocityInfoM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetCcVelocityInfoMRequest"
          }
        } ],
        "tags" : [ "GetCcVelocityInfoM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetCcVelocityInfoMResponse"
            }
          }
        }
      }
    },
    "#GetAcctNotificationDetailsM" : {
      "post" : {
        "summary" : "get_acct_notification_details_m",
        "description" : "Retrieve notification template groups assigned at various levels on the account.\n",
        "operationId" : "GetAcctNotificationDetailsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctNotificationDetailsMRequest"
          }
        } ],
        "tags" : [ "GetAcctNotificationDetailsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctNotificationDetailsMResponse"
            }
          }
        }
      }
    },
    "#GetPendingInvoiceNoM" : {
      "post" : {
        "summary" : "get_pending_invoice_no_m",
        "description" : "Returns the invoice number of a pending invoice associated with a specified account or a specified master plan instance.\n",
        "operationId" : "GetPendingInvoiceNoM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetPendingInvoiceNoMRequest"
          }
        } ],
        "tags" : [ "GetPendingInvoiceNoM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetPendingInvoiceNoMResponse"
            }
          }
        }
      }
    },
    "#GetAcctTransHistoryM" : {
      "post" : {
        "summary" : "get_acct_trans_history_m",
        "description" : "Returns a list of financial transactions associated with an account. You can filter the transactions using criteria such as transaction type, date range, or statement number.\n",
        "operationId" : "GetAcctTransHistoryM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctTransHistoryMRequest"
          }
        } ],
        "tags" : [ "GetAcctTransHistoryM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctTransHistoryMResponse"
            }
          }
        }
      }
    },
    "#GetClientItemClassesM" : {
      "post" : {
        "summary" : "get_client_item_classes_m",
        "description" : "Returns a list of classes for inventory item.",
        "operationId" : "GetClientItemClassesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetClientItemClassesMRequest"
          }
        } ],
        "tags" : [ "GetClientItemClassesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetClientItemClassesMResponse"
            }
          }
        }
      }
    },
    "#UnsubscribeEventClassM" : {
      "post" : {
        "summary" : "unsubscribe_event_class_m",
        "description" : "Unsubscribes a client from a specified event class.\n",
        "operationId" : "UnsubscribeEventClassM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UnsubscribeEventClassMRequest"
          }
        } ],
        "tags" : [ "UnsubscribeEventClassM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UnsubscribeEventClassMResponse"
            }
          }
        }
      }
    },
    "#GetAcctTaxExemptStatusM" : {
      "post" : {
        "summary" : "get_acct_tax_exempt_status_m",
        "description" : "Returns an account's tax exemption level (none, federal, state, or both federal and state).\n",
        "operationId" : "GetAcctTaxExemptStatusM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctTaxExemptStatusMRequest"
          }
        } ],
        "tags" : [ "GetAcctTaxExemptStatusM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctTaxExemptStatusMResponse"
            }
          }
        }
      }
    },
    "#SubscribeEventClassM" : {
      "post" : {
        "summary" : "subscribe_event_class_m",
        "description" : "Subscribes a client to a specified event class.\n",
        "operationId" : "SubscribeEventClassM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SubscribeEventClassMRequest"
          }
        } ],
        "tags" : [ "SubscribeEventClassM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SubscribeEventClassMResponse"
            }
          }
        }
      }
    },
    "#GetAcctPlanQueuedChangesM" : {
      "post" : {
        "summary" : "get_acct_plan_queued_changes_m",
        "description" : "Retrieves all queued plan changes for a given plan instance including plan assignments, removals, replacements and rollovers, as well as changes to plan units, plan instance status, and rate schedules for both master plans and supplemental plans\n",
        "operationId" : "GetAcctPlanQueuedChangesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctPlanQueuedChangesMRequest"
          }
        } ],
        "tags" : [ "GetAcctPlanQueuedChangesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctPlanQueuedChangesMResponse"
            }
          }
        }
      }
    },
    "#AssignCollectionsAcctGroupM" : {
      "post" : {
        "summary" : "assign_collections_acct_group_m",
        "description" : "Assigns a specified account to a collections account group.  If the account's payment method is credit card, a $1 authorization will be performed on the credit card using the new group's payment processor before the group assignment is completed. Please note: If you attempt to use this API call to assign an account to a functional account group, you will encounter an error. You can use the assign_functional_acct_group call to assign an account to a functional account group.\n",
        "operationId" : "AssignCollectionsAcctGroupM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/AssignCollectionsAcctGroupMRequest"
          }
        } ],
        "tags" : [ "AssignCollectionsAcctGroupM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/AssignCollectionsAcctGroupMResponse"
            }
          }
        }
      }
    },
    "#CancelUnconsumedCreditM" : {
      "post" : {
        "summary" : "cancel_unconsumed_credit_m",
        "description" : "Deletes all unused credits associated with a particular coupon.",
        "operationId" : "CancelUnconsumedCreditM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CancelUnconsumedCreditMRequest"
          }
        } ],
        "tags" : [ "CancelUnconsumedCreditM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CancelUnconsumedCreditMResponse"
            }
          }
        }
      }
    },
    "#GetPaymentApplicationDtlsM" : {
      "post" : {
        "summary" : "get_payment_application_dtls_m",
        "description" : "Returns the list of invoices on which the payment has been applied. Also returns the invoice line item details related to the payment application.\n",
        "operationId" : "GetPaymentApplicationDtlsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetPaymentApplicationDtlsMRequest"
          }
        } ],
        "tags" : [ "GetPaymentApplicationDtlsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetPaymentApplicationDtlsMResponse"
            }
          }
        }
      }
    },
    "#ValidateAcctFraudScoringM" : {
      "post" : {
        "summary" : "validate_acct_fraud_scoring_m",
        "description" : "Retrieves the Fraud Scoring information to the given Account and credit card. Based on the Fraud scoring threshold configuration defined per the Payment Gateway and Collection group, the transaction can affect the MPI Status.\n",
        "operationId" : "ValidateAcctFraudScoringM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ValidateAcctFraudScoringMRequest"
          }
        } ],
        "tags" : [ "ValidateAcctFraudScoringM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ValidateAcctFraudScoringMResponse"
            }
          }
        }
      }
    },
    "#GetClientItemImagesM" : {
      "post" : {
        "summary" : "get_client_item_images_m",
        "description" : "Returns all images associated with a given inventory item",
        "operationId" : "GetClientItemImagesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetClientItemImagesMRequest"
          }
        } ],
        "tags" : [ "GetClientItemImagesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetClientItemImagesMResponse"
            }
          }
        }
      }
    },
    "#GetClientItemsBasicM" : {
      "post" : {
        "summary" : "get_client_items_basic_m",
        "description" : "Returns a list of inventory items associated with a client.",
        "operationId" : "GetClientItemsBasicM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetClientItemsBasicMRequest"
          }
        } ],
        "tags" : [ "GetClientItemsBasicM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetClientItemsBasicMResponse"
            }
          }
        }
      }
    },
    "#SettleAccountBalanceM" : {
      "post" : {
        "summary" : "settle_account_balance_m",
        "description" : "Collects the outstanding balance for a specific master plan instance OR account.\n",
        "operationId" : "SettleAccountBalanceM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SettleAccountBalanceMRequest"
          }
        } ],
        "tags" : [ "SettleAccountBalanceM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SettleAccountBalanceMResponse"
            }
          }
        }
      }
    },
    "#CreateAcctDunningGroupM" : {
      "post" : {
        "summary" : "create_acct_dunning_group_m",
        "description" : "Creates a new dunning group and optionally assigns the new dunning group to a plan instance. <p> For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/create_acct_dunning_group_m_Error_Messages\">create_acct_dunning_group_m error messages</a>.\n",
        "operationId" : "CreateAcctDunningGroupM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CreateAcctDunningGroupMRequest"
          }
        } ],
        "tags" : [ "CreateAcctDunningGroupM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CreateAcctDunningGroupMResponse"
            }
          }
        }
      }
    },
    "#GetSuppFieldValuesM" : {
      "post" : {
        "summary" : "get_supp_field_values_m",
        "description" : "Returns the values for a particular supplemental field associated with a specified account.\n",
        "operationId" : "GetSuppFieldValuesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetSuppFieldValuesMRequest"
          }
        } ],
        "tags" : [ "GetSuppFieldValuesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetSuppFieldValuesMResponse"
            }
          }
        }
      }
    },
    "#AdvanceVirtualDatetimeM" : {
      "post" : {
        "summary" : "advance_virtual_datetime_m",
        "description" : "Takes a number of hours by which to further advance virtual time for the given client, then returns the same output elements as \"get_virtual_datetime\", as well as the new/current offset hours value AFTER application of the input offset hours value.  Use of this method in production systems will return an \"operation not allowed\" error as virtual time is only supported in non-production systems.\n",
        "operationId" : "AdvanceVirtualDatetimeM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/AdvanceVirtualDatetimeMRequest"
          }
        } ],
        "tags" : [ "AdvanceVirtualDatetimeM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/AdvanceVirtualDatetimeMResponse"
            }
          }
        }
      }
    },
    "#GetCcUuidM" : {
      "post" : {
        "summary" : "get_cc_uuid_m",
        "description" : "Returns the universally unique identifier (UUID) for a credit card payment number.\n",
        "operationId" : "GetCcUuidM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetCcUuidMRequest"
          }
        } ],
        "tags" : [ "GetCcUuidM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetCcUuidMResponse"
            }
          }
        }
      }
    },
    "#GetPmtUuidM" : {
      "post" : {
        "summary" : "get_pmt_uuid_m",
        "description" : "Returns the universally unique identifier (UUID) for a credit card payment method.\n",
        "operationId" : "GetPmtUuidM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetPmtUuidMRequest"
          }
        } ],
        "tags" : [ "GetPmtUuidM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetPmtUuidMResponse"
            }
          }
        }
      }
    },
    "#SettleAccountBalanceBulkM" : {
      "post" : {
        "summary" : "settle_account_balance_bulk_m",
        "description" : "This API allows for the batch submission of multiple accounts to a payment processor for collection attempts on each account. Each submitted account must be assigned to a collection group before running this API, or the collection does not take place. The supplied accounts are added to a flat file that is submitted to the payment processor. Once they make the required collection attempts, a response file is sent back to Aria and the associated accounts are updated.\n",
        "operationId" : "SettleAccountBalanceBulkM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SettleAccountBalanceBulkMRequest"
          }
        } ],
        "tags" : [ "SettleAccountBalanceBulkM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SettleAccountBalanceBulkMResponse"
            }
          }
        }
      }
    },
    "#GetUsageSummaryByTypeM" : {
      "post" : {
        "summary" : "get_usage_summary_by_type_m",
        "description" : "Returns the usage records associated with a specified account for a particular date range.\n",
        "operationId" : "GetUsageSummaryByTypeM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetUsageSummaryByTypeMRequest"
          }
        } ],
        "tags" : [ "GetUsageSummaryByTypeM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetUsageSummaryByTypeMResponse"
            }
          }
        }
      }
    },
    "#ModifyInstanceContractM" : {
      "post" : {
        "summary" : "modify_instance_contract_m",
        "description" : "It modifies an existing multi plan instance contract for a specified account holder and one or more plan instances. <p>For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/modify_instance_contract_m_Error_Messages\">modify_instance_contract_m error messages</a>.\n",
        "operationId" : "ModifyInstanceContractM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ModifyInstanceContractMRequest"
          }
        } ],
        "tags" : [ "ModifyInstanceContractM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ModifyInstanceContractMResponse"
            }
          }
        }
      }
    },
    "#RefreshTokenFromPmtProcessorM" : {
      "post" : {
        "summary" : "refresh_token_from_pmt_processor_m",
        "description" : "Sends an already-tokenized credit card saved in Aria to the payment processor which generated that token to check for updated information .\n",
        "operationId" : "RefreshTokenFromPmtProcessorM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/RefreshTokenFromPmtProcessorMRequest"
          }
        } ],
        "tags" : [ "RefreshTokenFromPmtProcessorM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/RefreshTokenFromPmtProcessorMResponse"
            }
          }
        }
      }
    },
    "#SetRegUssParamsM" : {
      "post" : {
        "summary" : "set_reg_uss_params_m",
        "description" : "Creates a configuration set that can be used to customize the functionality within a specified session of a registration or User Self Service application.\n",
        "operationId" : "SetRegUssParamsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SetRegUssParamsMRequest"
          }
        } ],
        "tags" : [ "SetRegUssParamsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SetRegUssParamsMResponse"
            }
          }
        }
      }
    },
    "#UpdateAcctPlanUnitInstanceM" : {
      "post" : {
        "summary" : "update_acct_plan_unit_instance_m",
        "description" : "updates a specific plan unit instance.\n",
        "operationId" : "UpdateAcctPlanUnitInstanceM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateAcctPlanUnitInstanceMRequest"
          }
        } ],
        "tags" : [ "UpdateAcctPlanUnitInstanceM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateAcctPlanUnitInstanceMResponse"
            }
          }
        }
      }
    },
    "#CancelInstanceContractM" : {
      "post" : {
        "summary" : "cancel_instance_contract_m",
        "description" : "It cancels an existing multi plan instance contract for a specified account holder and one or more plan instances.\n",
        "operationId" : "CancelInstanceContractM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CancelInstanceContractMRequest"
          }
        } ],
        "tags" : [ "CancelInstanceContractM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CancelInstanceContractMResponse"
            }
          }
        }
      }
    },
    "#GetAcctsWithExistingPayMethodM" : {
      "post" : {
        "summary" : "get_accts_with_existing_pay_method_m",
        "description" : "For the given input specified electronic form of payment (credit card number, checking acct number, etc.) return list of acct_nos on file that already have that form of payment assigned to them.\n",
        "operationId" : "GetAcctsWithExistingPayMethodM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctsWithExistingPayMethodMRequest"
          }
        } ],
        "tags" : [ "GetAcctsWithExistingPayMethodM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctsWithExistingPayMethodMResponse"
            }
          }
        }
      }
    },
    "#ModifyAcctPlanUnitInstancesM" : {
      "post" : {
        "summary" : "modify_acct_plan_unit_instances_m",
        "description" : "Assigns a new Plan Unit Instance to the specified plan.\n",
        "operationId" : "ModifyAcctPlanUnitInstancesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ModifyAcctPlanUnitInstancesMRequest"
          }
        } ],
        "tags" : [ "ModifyAcctPlanUnitInstancesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ModifyAcctPlanUnitInstancesMResponse"
            }
          }
        }
      }
    },
    "#GetInvNoFromBalXferM" : {
      "post" : {
        "summary" : "get_inv_no_from_bal_xfer_m",
        "description" : "Returns the invoice number associated with a specified balance transfer and master plan instance.",
        "operationId" : "GetInvNoFromBalXferM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetInvNoFromBalXferMRequest"
          }
        } ],
        "tags" : [ "GetInvNoFromBalXferM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetInvNoFromBalXferMResponse"
            }
          }
        }
      }
    },
    "#GetStatementForInvSizeM" : {
      "post" : {
        "summary" : "get_statement_for_inv_size_m",
        "description" : "Returns the number of characters in a statement associated with a specified account and invoice. You can use this call to determine the size of a statement before trying to capture the statement in a variable.\n",
        "operationId" : "GetStatementForInvSizeM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetStatementForInvSizeMRequest"
          }
        } ],
        "tags" : [ "GetStatementForInvSizeM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetStatementForInvSizeMResponse"
            }
          }
        }
      }
    },
    "#ReplaceAcctPlanM" : {
      "post" : {
        "summary" : "replace_acct_plan_m",
        "description" : "Assigns a new master or supplemental plan to the specified account.\n",
        "operationId" : "ReplaceAcctPlanM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ReplaceAcctPlanMRequest"
          }
        } ],
        "tags" : [ "ReplaceAcctPlanM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ReplaceAcctPlanMResponse"
            }
          }
        }
      }
    },
    "#GetAcctSuppFieldsM" : {
      "post" : {
        "summary" : "get_acct_supp_fields_m",
        "description" : "Returns a list of supplemental field names and values associated with an account.\n",
        "operationId" : "GetAcctSuppFieldsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctSuppFieldsMRequest"
          }
        } ],
        "tags" : [ "GetAcctSuppFieldsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctSuppFieldsMResponse"
            }
          }
        }
      }
    },
    "#GetFamilyTransHistoryM" : {
      "post" : {
        "summary" : "get_family_trans_history_m",
        "description" : "Returns the transaction history of parent and child accounts",
        "operationId" : "GetFamilyTransHistoryM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetFamilyTransHistoryMRequest"
          }
        } ],
        "tags" : [ "GetFamilyTransHistoryM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetFamilyTransHistoryMResponse"
            }
          }
        }
      }
    },
    "#GetExtendedTransactionInfoM" : {
      "post" : {
        "summary" : "get_extended_transaction_info_m",
        "description" : "Returns the list of optional transaction qualifiers submitted for the given Transaction ID.\n",
        "operationId" : "GetExtendedTransactionInfoM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetExtendedTransactionInfoMRequest"
          }
        } ],
        "tags" : [ "GetExtendedTransactionInfoM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetExtendedTransactionInfoMResponse"
            }
          }
        }
      }
    },
    "#GetRateSchedulesForPlanM" : {
      "post" : {
        "summary" : "get_rate_schedules_for_plan_m",
        "description" : "Returns a list of rate schedules associated with a specified plan. The plan's default rate schedule will always be the first rate schedule returned and the remaining rate schedules will be sorted by schedule number. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_rate_schedules_for_plan_m_Error_Messages\">get_rate_schedules_for_plan_m error messages</a>.\n",
        "operationId" : "GetRateSchedulesForPlanM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetRateSchedulesForPlanMRequest"
          }
        } ],
        "tags" : [ "GetRateSchedulesForPlanM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetRateSchedulesForPlanMResponse"
            }
          }
        }
      }
    },
    "#GetAcctPlanHistoryM" : {
      "post" : {
        "summary" : "get_acct_plan_history_m",
        "description" : "Returns a list of plan changes (including assignments, replacements, status changes, etc.) for the specified account. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_acct_plan_history_m_Error_Messages\">get_acct_plan_history_m error messages</a>.",
        "operationId" : "GetAcctPlanHistoryM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctPlanHistoryMRequest"
          }
        } ],
        "tags" : [ "GetAcctPlanHistoryM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctPlanHistoryMResponse"
            }
          }
        }
      }
    },
    "#RecordUsageM" : {
      "post" : {
        "summary" : "record_usage_m",
        "description" : "Creates a usage record for for a specified account for inclusion in a future invoice. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/record_usage_m_Error_Messages\">record_usage_m error messages</a>.\n",
        "operationId" : "RecordUsageM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/RecordUsageMRequest"
          }
        } ],
        "tags" : [ "RecordUsageM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/RecordUsageMResponse"
            }
          }
        }
      }
    },
    "#ValidatePaymentInformationM" : {
      "post" : {
        "summary" : "validate_payment_information_m",
        "description" : "Determines the validity of a credit card by performing an authorization transaction.  The default authorization amount is 0 or 1 unit of currency (for example, 0 or $1 USD) depending on payment processor and card type.  Please note: In order to use this call, your payment processor must support credit card authorizations.\n",
        "operationId" : "ValidatePaymentInformationM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ValidatePaymentInformationMRequest"
          }
        } ],
        "tags" : [ "ValidatePaymentInformationM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ValidatePaymentInformationMResponse"
            }
          }
        }
      }
    },
    "#GetAcctStatementHistoryM" : {
      "post" : {
        "summary" : "get_acct_statement_history_m",
        "description" : "Returns the list of all statements in a given billing period on an account for all the master plan instances or on a specific master plan instance on the account.\n",
        "operationId" : "GetAcctStatementHistoryM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctStatementHistoryMRequest"
          }
        } ],
        "tags" : [ "GetAcctStatementHistoryM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctStatementHistoryMResponse"
            }
          }
        }
      }
    },
    "#ClearRegUssParamsM" : {
      "post" : {
        "summary" : "clear_reg_uss_params_m",
        "description" : "Removes all of the parameter name-value pairs associated with a particular session ID.\n",
        "operationId" : "ClearRegUssParamsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ClearRegUssParamsMRequest"
          }
        } ],
        "tags" : [ "ClearRegUssParamsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ClearRegUssParamsMResponse"
            }
          }
        }
      }
    },
    "#CancelRecurringCreditsM" : {
      "post" : {
        "summary" : "cancel_recurring_credits_m",
        "description" : "This API cancels any recurring credits that are assigned on an account or master plan instance.\n",
        "operationId" : "CancelRecurringCreditsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CancelRecurringCreditsMRequest"
          }
        } ],
        "tags" : [ "CancelRecurringCreditsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CancelRecurringCreditsMResponse"
            }
          }
        }
      }
    },
    "#AuthorizeElectronicPaymentM" : {
      "post" : {
        "summary" : "authorize_electronic_payment_m",
        "description" : "Authorizes a credit card for a specified amount. Please note: This API call does not collect a payment.\n",
        "operationId" : "AuthorizeElectronicPaymentM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/AuthorizeElectronicPaymentMRequest"
          }
        } ],
        "tags" : [ "AuthorizeElectronicPaymentM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/AuthorizeElectronicPaymentMResponse"
            }
          }
        }
      }
    },
    "#GetPlansByPromoCodeAllM" : {
      "post" : {
        "summary" : "get_plans_by_promo_code_all_m",
        "description" : "Returns a detailed list of plans associated with a specified promotion code. The information returned includes the services and rate schedules associated with the plans.\n",
        "operationId" : "GetPlansByPromoCodeAllM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetPlansByPromoCodeAllMRequest"
          }
        } ],
        "tags" : [ "GetPlansByPromoCodeAllM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetPlansByPromoCodeAllMResponse"
            }
          }
        }
      }
    },
    "#GetRefundablePaymentsM" : {
      "post" : {
        "summary" : "get_refundable_payments_m",
        "description" : "Returns an array of payment transactions for a a given acct_no or master plan instance that are considered refundable.\n",
        "operationId" : "GetRefundablePaymentsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetRefundablePaymentsMRequest"
          }
        } ],
        "tags" : [ "GetRefundablePaymentsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetRefundablePaymentsMResponse"
            }
          }
        }
      }
    },
    "#CancelAcctPlanM" : {
      "post" : {
        "summary" : "cancel_acct_plan_m",
        "description" : "Cancels a master or supplemental plan assigned to a specified account. Note that all child supplemental plans under the plan specified will also be removed. When all master plans on an account have a plan status of Cancelled, Terminated or Suspended, the account will be automatically deactivated based on the Days Before Deactivation configuration parameter.\n",
        "operationId" : "CancelAcctPlanM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CancelAcctPlanMRequest"
          }
        } ],
        "tags" : [ "CancelAcctPlanM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CancelAcctPlanMResponse"
            }
          }
        }
      }
    },
    "#GetUnappliedCreditsPaymentsM" : {
      "post" : {
        "summary" : "get_unapplied_credits_payments_m",
        "description" : "Retrieves the payments and cash credits that are unapplied for a given account.",
        "operationId" : "GetUnappliedCreditsPaymentsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetUnappliedCreditsPaymentsMRequest"
          }
        } ],
        "tags" : [ "GetUnappliedCreditsPaymentsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetUnappliedCreditsPaymentsMResponse"
            }
          }
        }
      }
    },
    "#UnsubscribeEventsM" : {
      "post" : {
        "summary" : "unsubscribe_events_m",
        "description" : "Unsubscribes a client from a group of specified event notifications.\n",
        "operationId" : "UnsubscribeEventsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UnsubscribeEventsMRequest"
          }
        } ],
        "tags" : [ "UnsubscribeEventsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UnsubscribeEventsMResponse"
            }
          }
        }
      }
    },
    "#GetAcctBillingGroupDetailsM" : {
      "post" : {
        "summary" : "get_acct_billing_group_details_m",
        "description" : "Retreives the details for a specified billing group, including the list of master plans associated with that billing group.<br /><br /> For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_acct_billing_group_details_m_Error_Messages\">get_acct_billing_group_details_m error messages</a>.\n",
        "operationId" : "GetAcctBillingGroupDetailsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctBillingGroupDetailsMRequest"
          }
        } ],
        "tags" : [ "GetAcctBillingGroupDetailsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctBillingGroupDetailsMResponse"
            }
          }
        }
      }
    },
    "#ReplaceRegUssParamsM" : {
      "post" : {
        "summary" : "replace_reg_uss_params_m",
        "description" : "Replaces the parameter name-value pairs in a particular configuration set with a specified set of new parameter name-value pairs.\n",
        "operationId" : "ReplaceRegUssParamsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ReplaceRegUssParamsMRequest"
          }
        } ],
        "tags" : [ "ReplaceRegUssParamsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ReplaceRegUssParamsMResponse"
            }
          }
        }
      }
    },
    "#AssignAcctPlanM" : {
      "post" : {
        "summary" : "assign_acct_plan_m",
        "description" : "Assigns a new master or supplemental plan to the specified account. <p> When you assign a new plan to an account, you can assign the following: <ul> <li>Billing group <li>Notification method and template <li>Payment methods <li>Contact information for billing, statements, and payment methods <li>Dunning information <li>Start date and proration options <li>Balance forward <li>Relationship to other plans (parent, child, etc.) <li>Rate schedules <li>Coupons, promotion codes and surcharges <li>NSO and SKU information </ul> <p> For a list of error messages generated by this API, see  <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/assign_acct_plan_m_Error_Messages\">assign_acct_plan_m error messages</a>.\n",
        "operationId" : "AssignAcctPlanM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/AssignAcctPlanMRequest"
          }
        } ],
        "tags" : [ "AssignAcctPlanM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/AssignAcctPlanMResponse"
            }
          }
        }
      }
    },
    "#CancelAcctUniversalContractM" : {
      "post" : {
        "summary" : "cancel_acct_universal_contract_m",
        "description" : "Cancels a universal contract assigned to a specified account holder.\n",
        "operationId" : "CancelAcctUniversalContractM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CancelAcctUniversalContractMRequest"
          }
        } ],
        "tags" : [ "CancelAcctUniversalContractM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CancelAcctUniversalContractMResponse"
            }
          }
        }
      }
    },
    "#UpdateAcctPlanMultiM" : {
      "post" : {
        "summary" : "update_acct_plan_multi_m",
        "description" : "Assigns, replaces, updates, and/or cancels multiple plans (both master and supplemental plans) for a specified account. <p> In addition to plan assignment, you can also make the following plan changes: <ul> <li>Assign  billing groups, dunning groups and collection groups <li>Assign a promotion code or a coupon <li>Change the number of plan unit instances assigned to an account <li>Assign services <li>Change the plan's fulfillment date <li>Assign standard and custom rate schedules <li>Assign surcharges <li>Assign a dunning state <li>Assign the responsibility level (parent, self-pay, etc.) <li>Assign proration and invoicing options <li>Reset billing dates <li>Enable usage pooling <li>Assign NSO items and their billing options <li>Assign payment terms or methods </ul> <p>You can assign, update, modify, and cancel multiple plans in a single API call. However, each plan instance can only be given one operation per call, i.e., you cannot update and cancel the same plan instance within the same call. <p>If you want to add new master plans to an existing account, and align the new plan's anniversary date with the existing plans, you can use the override_dates_mp_instance_no field. <p>When adding or replacing supplemental fields on an existing account, you can align the anniversary date to its master plan instance with the auto_offset_months field. <p>When adding, replacing and canceling a plan, you can use the alt_proration_start_date field to align the start dates of all the affected plans on the account. <p>Any field on a plan can be updated. You can clear the value in any field with a type of \"string\", provided that the field is nullable for a plan, by entering a '~' in that field. <p>For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/update_acct_plan_multi_m_Error_Messages\">update_acct_complete_m error messages</a>.                \n",
        "operationId" : "UpdateAcctPlanMultiM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateAcctPlanMultiMRequest"
          }
        } ],
        "tags" : [ "UpdateAcctPlanMultiM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateAcctPlanMultiMResponse"
            }
          }
        }
      }
    },
    "#GetClientCurrenciesM" : {
      "post" : {
        "summary" : "get_client_currencies_m",
        "description" : "Returns a list of currencies assigned to a client.",
        "operationId" : "GetClientCurrenciesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetClientCurrenciesMRequest"
          }
        } ],
        "tags" : [ "GetClientCurrenciesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetClientCurrenciesMResponse"
            }
          }
        }
      }
    },
    "#GetCreditDetailsM" : {
      "post" : {
        "summary" : "get_credit_details_m",
        "description" : "This API returns a particular service credit details for an account or master plan instance.\n",
        "operationId" : "GetCreditDetailsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetCreditDetailsMRequest"
          }
        } ],
        "tags" : [ "GetCreditDetailsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetCreditDetailsMResponse"
            }
          }
        }
      }
    },
    "#UpdateRefundCheckNoM" : {
      "post" : {
        "summary" : "update_refund_check_no_m",
        "description" : "Update the refund check number on a refund processed without a check number earlier.\n",
        "operationId" : "UpdateRefundCheckNoM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateRefundCheckNoMRequest"
          }
        } ],
        "tags" : [ "UpdateRefundCheckNoM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateRefundCheckNoMResponse"
            }
          }
        }
      }
    },
    "#ModifyAcctSuppFieldsM" : {
      "post" : {
        "summary" : "modify_acct_supp_fields_m",
        "description" : "Updates or deletes one or more supplemental fields and/or values associated with a specified account. This call honors any requirements for minimum and maximum number of values. In addition, this call does not delete required supplemental fields.\n",
        "operationId" : "ModifyAcctSuppFieldsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ModifyAcctSuppFieldsMRequest"
          }
        } ],
        "tags" : [ "ModifyAcctSuppFieldsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ModifyAcctSuppFieldsMResponse"
            }
          }
        }
      }
    },
    "#ManagePendingInvoiceM" : {
      "post" : {
        "summary" : "manage_pending_invoice_m",
        "description" : "Approves, discards, or regenerates a pending invoice. A pending invoice can be retrieved based on the invoice number or master plan instance ID. After a pending invoice is approved, this call can also collect a payment and send a statement. If the collection fails, the pending invoice will automatically be voided provided the system setting \"Auto Void Pending Invoice on Collection Failure\" is set to True.\n",
        "operationId" : "ManagePendingInvoiceM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ManagePendingInvoiceMRequest"
          }
        } ],
        "tags" : [ "ManagePendingInvoiceM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ManagePendingInvoiceMResponse"
            }
          }
        }
      }
    },
    "#GetUsageHistoryM" : {
      "post" : {
        "summary" : "get_usage_history_m",
        "description" : "This API returns usage records for an account, and can be filtered by date range, usage type, invoice, exclude status, and qualifiers. Using limit and offset inputs, results can be paginated. The fields \"locale_no\" and \"locale_name\" can be specified to translate  output fields for which translations have been assigned to Locales configured in Aria.<br /><br /> For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_usage_history_m_Error_Messages\">get_usage_history_m error messages</a>.\n",
        "operationId" : "GetUsageHistoryM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetUsageHistoryMRequest"
          }
        } ],
        "tags" : [ "GetUsageHistoryM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetUsageHistoryMResponse"
            }
          }
        }
      }
    },
    "#ApplyCashCreditM" : {
      "post" : {
        "summary" : "apply_cash_credit_m",
        "description" : "Apply a cash credit to an account, account-level charge, invoice, or invoice charge.\n",
        "operationId" : "ApplyCashCreditM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ApplyCashCreditMRequest"
          }
        } ],
        "tags" : [ "ApplyCashCreditM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ApplyCashCreditMResponse"
            }
          }
        }
      }
    },
    "#GetPaymentApplicationsM" : {
      "post" : {
        "summary" : "get_payment_applications_m",
        "description" : "Returns a list of charge transactions against which a particular credit transaction has been applied for a specified account.\n",
        "operationId" : "GetPaymentApplicationsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetPaymentApplicationsMRequest"
          }
        } ],
        "tags" : [ "GetPaymentApplicationsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetPaymentApplicationsMResponse"
            }
          }
        }
      }
    },
    "#GetSuppPlansBySuppFieldM" : {
      "post" : {
        "summary" : "get_supp_plans_by_supp_field_m",
        "description" : "Returns a list of supplemental plans associated with a specified value for a supplemental object field.\n",
        "operationId" : "GetSuppPlansBySuppFieldM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetSuppPlansBySuppFieldMRequest"
          }
        } ],
        "tags" : [ "GetSuppPlansBySuppFieldM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetSuppPlansBySuppFieldMResponse"
            }
          }
        }
      }
    },
    "#ClearRegUssConfigParamsM" : {
      "post" : {
        "summary" : "clear_reg_uss_config_params_m",
        "description" : "Removes all of the parameter name-value pairs in a specified configuration set created using the set_reg_uss_config_params API call.\n",
        "operationId" : "ClearRegUssConfigParamsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ClearRegUssConfigParamsMRequest"
          }
        } ],
        "tags" : [ "ClearRegUssConfigParamsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ClearRegUssConfigParamsMResponse"
            }
          }
        }
      }
    },
    "#GetAcctPlanNotifyMethodM" : {
      "post" : {
        "summary" : "get_acct_plan_notify_method_m",
        "description" : "Returns the method by which statements are sent to a specified plan for a given account.\n",
        "operationId" : "GetAcctPlanNotifyMethodM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctPlanNotifyMethodMRequest"
          }
        } ],
        "tags" : [ "GetAcctPlanNotifyMethodM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctPlanNotifyMethodMResponse"
            }
          }
        }
      }
    },
    "#GetAcctNotifyMethodM" : {
      "post" : {
        "summary" : "get_acct_notify_method_m",
        "description" : "Returns the method by which statements are sent to a specified account.\n",
        "operationId" : "GetAcctNotifyMethodM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctNotifyMethodMRequest"
          }
        } ],
        "tags" : [ "GetAcctNotifyMethodM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctNotifyMethodMResponse"
            }
          }
        }
      }
    },
    "#GetClientPlanServicesM" : {
      "post" : {
        "summary" : "get_client_plan_services_m",
        "description" : "Returns information for all services in a specified plan.\n",
        "operationId" : "GetClientPlanServicesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetClientPlanServicesMRequest"
          }
        } ],
        "tags" : [ "GetClientPlanServicesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetClientPlanServicesMResponse"
            }
          }
        }
      }
    },
    "#UpdateContactM" : {
      "post" : {
        "summary" : "update_contact_m",
        "description" : "Updates contact information for Aria accounts or Billing Groups. <p>\n For a list of error messages generated by this API, see\n <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/update_contact_m_Error_Messages\">update_contact_m Error Messages</a>.\n",
        "operationId" : "UpdateContactM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateContactMRequest"
          }
        } ],
        "tags" : [ "UpdateContactM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateContactMResponse"
            }
          }
        }
      }
    },
    "#GetOrderItemsM" : {
      "post" : {
        "summary" : "get_order_items_m",
        "description" : "Returns information about the items in a particular order associated with a specified account.\n",
        "operationId" : "GetOrderItemsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetOrderItemsMRequest"
          }
        } ],
        "tags" : [ "GetOrderItemsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetOrderItemsMResponse"
            }
          }
        }
      }
    },
    "#GetSuppPlansByPromoCodeAllM" : {
      "post" : {
        "summary" : "get_supp_plans_by_promo_code_all_m",
        "description" : "Returns a detailed list of supplemental plans associated with a specified promotion code. The information returned includes the services and rate schedules associated with the plans.\n",
        "operationId" : "GetSuppPlansByPromoCodeAllM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetSuppPlansByPromoCodeAllMRequest"
          }
        } ],
        "tags" : [ "GetSuppPlansByPromoCodeAllM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetSuppPlansByPromoCodeAllMResponse"
            }
          }
        }
      }
    },
    "#GetUnbilledUsageSummaryM" : {
      "post" : {
        "summary" : "get_unbilled_usage_summary_m",
        "description" : "Returns all information related to summary value of unbilled usage on the account.\n",
        "operationId" : "GetUnbilledUsageSummaryM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetUnbilledUsageSummaryMRequest"
          }
        } ],
        "tags" : [ "GetUnbilledUsageSummaryM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetUnbilledUsageSummaryMResponse"
            }
          }
        }
      }
    },
    "#InitPaypalBillAgreementM" : {
      "post" : {
        "summary" : "init_paypal_bill_agreement_m",
        "description" : "Creates a session with PayPal so that an account user can set up a billing agreement with an Aria client. The call returns a session token from PayPal, plus a client configured return_url (aka PayPal Agreement Confirmation URL) to instruct the USS/Reg software where it should direct the end user for the next step. PayPal will consider the token valid for 15 minutes. This API call does not store any information in the Aria database, but requires that the followup call to save_paypal_bill_agreement call is made while the token is valid.\n",
        "operationId" : "InitPaypalBillAgreementM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/InitPaypalBillAgreementMRequest"
          }
        } ],
        "tags" : [ "InitPaypalBillAgreementM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/InitPaypalBillAgreementMResponse"
            }
          }
        }
      }
    },
    "#GetItemsByClassM" : {
      "post" : {
        "summary" : "get_items_by_class_m",
        "description" : "returns the items for a given class",
        "operationId" : "GetItemsByClassM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetItemsByClassMRequest"
          }
        } ],
        "tags" : [ "GetItemsByClassM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetItemsByClassMResponse"
            }
          }
        }
      }
    },
    "#RecordAlternativePaymentM" : {
      "post" : {
        "summary" : "record_alternative_payment_m",
        "description" : "Records a payment transaction for a payment collected from an account holder without using Aria.\n",
        "operationId" : "RecordAlternativePaymentM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/RecordAlternativePaymentMRequest"
          }
        } ],
        "tags" : [ "RecordAlternativePaymentM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/RecordAlternativePaymentMResponse"
            }
          }
        }
      }
    },
    "#GetAcctMessageM" : {
      "post" : {
        "summary" : "get_acct_message_m",
        "description" : "Returns the body of a particular email message sent to a specified account holder.\n",
        "operationId" : "GetAcctMessageM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctMessageMRequest"
          }
        } ],
        "tags" : [ "GetAcctMessageM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctMessageMResponse"
            }
          }
        }
      }
    },
    "#GetInvoicesToWriteoffOrDisputeM" : {
      "post" : {
        "summary" : "get_invoices_to_writeoff_or_dispute_m",
        "description" : "Get the eligible invoices to write-off or dispute.\n",
        "operationId" : "GetInvoicesToWriteoffOrDisputeM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetInvoicesToWriteoffOrDisputeMRequest"
          }
        } ],
        "tags" : [ "GetInvoicesToWriteoffOrDisputeM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetInvoicesToWriteoffOrDisputeMResponse"
            }
          }
        }
      }
    },
    "#RemoveAcctPaymentMethodM" : {
      "post" : {
        "summary" : "remove_acct_payment_method_m",
        "description" : "Removes a form of payment from an account, either associated with a specified billing group, or not. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/remove_acct_payment_method_m_Error_Messages\">remove_acct_payment_method_m error messages</a>.\n",
        "operationId" : "RemoveAcctPaymentMethodM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/RemoveAcctPaymentMethodMRequest"
          }
        } ],
        "tags" : [ "RemoveAcctPaymentMethodM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/RemoveAcctPaymentMethodMResponse"
            }
          }
        }
      }
    },
    "#CancelOrderM" : {
      "post" : {
        "summary" : "cancel_order_m",
        "description" : "Cancels an account holder's order and stops all billing related to the order if the following are true: The order has not yet been billed and the order has not already been canceled.\n",
        "operationId" : "CancelOrderM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/CancelOrderMRequest"
          }
        } ],
        "tags" : [ "CancelOrderM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/CancelOrderMResponse"
            }
          }
        }
      }
    },
    "#UseridExistsM" : {
      "post" : {
        "summary" : "userid_exists_m",
        "description" : "Determines whether a specified user ID is already in use",
        "operationId" : "UseridExistsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UseridExistsMRequest"
          }
        } ],
        "tags" : [ "UseridExistsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UseridExistsMResponse"
            }
          }
        }
      }
    },
    "#GetReversibleAuthorizationsM" : {
      "post" : {
        "summary" : "get_reversible_authorizations_m",
        "description" : "To get a list of reversible authorizations for a account.\n",
        "operationId" : "GetReversibleAuthorizationsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetReversibleAuthorizationsMRequest"
          }
        } ],
        "tags" : [ "GetReversibleAuthorizationsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetReversibleAuthorizationsMResponse"
            }
          }
        }
      }
    },
    "#GetSuppPlansByPromoCodeM" : {
      "post" : {
        "summary" : "get_supp_plans_by_promo_code_m",
        "description" : "Returns a summary list of supplemental plans associated with a specified promotion code.\n",
        "operationId" : "GetSuppPlansByPromoCodeM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetSuppPlansByPromoCodeMRequest"
          }
        } ],
        "tags" : [ "GetSuppPlansByPromoCodeM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetSuppPlansByPromoCodeMResponse"
            }
          }
        }
      }
    },
    "#SetAcctTaxExemptStatusM" : {
      "post" : {
        "summary" : "set_acct_tax_exempt_status_m",
        "description" : "Sets the tax exemption level for a specified account.\n",
        "operationId" : "SetAcctTaxExemptStatusM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SetAcctTaxExemptStatusMRequest"
          }
        } ],
        "tags" : [ "SetAcctTaxExemptStatusM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SetAcctTaxExemptStatusMResponse"
            }
          }
        }
      }
    },
    "#AssignFunctionalAcctGroupM" : {
      "post" : {
        "summary" : "assign_functional_acct_group_m",
        "description" : "Assigns a specified account to a functional account group. Note: Using this API call to assign an account to a collections account group returns an error. Use the assign_collections_acct_group call to assign an account to a collections account group.\n",
        "operationId" : "AssignFunctionalAcctGroupM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/AssignFunctionalAcctGroupMRequest"
          }
        } ],
        "tags" : [ "AssignFunctionalAcctGroupM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/AssignFunctionalAcctGroupMResponse"
            }
          }
        }
      }
    },
    "#GetAcctWriteoffOrDisputesM" : {
      "post" : {
        "summary" : "get_acct_writeoff_or_disputes_m",
        "description" : "Retrieve the write-offs and disputes made on the account or master plan instance.\n",
        "operationId" : "GetAcctWriteoffOrDisputesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctWriteoffOrDisputesMRequest"
          }
        } ],
        "tags" : [ "GetAcctWriteoffOrDisputesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctWriteoffOrDisputesMResponse"
            }
          }
        }
      }
    },
    "#GetAcctPlanUnitInstanceAllM" : {
      "post" : {
        "summary" : "get_acct_plan_unit_instance_all_m",
        "description" : "Array of all Plan Unit Instances and related Plan Unit Instance fields for all the plans under the account.\n",
        "operationId" : "GetAcctPlanUnitInstanceAllM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctPlanUnitInstanceAllMRequest"
          }
        } ],
        "tags" : [ "GetAcctPlanUnitInstanceAllM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctPlanUnitInstanceAllMResponse"
            }
          }
        }
      }
    },
    "#GetCatalogHierarchyM" : {
      "post" : {
        "summary" : "get_catalog_hierarchy_m",
        "description" : "This API Gets the hierarchy of plans for a given client. It Provides the ability to filter the results to return the catalog hierarchy by promo code, parent plan number, client parent plan ID. Each filter can be used independently or in combination to provide control on reading the catalog. The intent of this API is to give a developer more control on reading the plan hierarchy.\n",
        "operationId" : "GetCatalogHierarchyM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetCatalogHierarchyMRequest"
          }
        } ],
        "tags" : [ "GetCatalogHierarchyM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetCatalogHierarchyMResponse"
            }
          }
        }
      }
    },
    "#SendAcctStatementEmailM" : {
      "post" : {
        "summary" : "send_acct_statement_email_m",
        "description" : "Ability to send a statement to a customer on an on-demand basis.\n",
        "operationId" : "SendAcctStatementEmailM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SendAcctStatementEmailMRequest"
          }
        } ],
        "tags" : [ "SendAcctStatementEmailM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SendAcctStatementEmailMResponse"
            }
          }
        }
      }
    },
    "#ValidateSessionM" : {
      "post" : {
        "summary" : "validate_session_m",
        "description" : "Determines the validity of a specified session and the user with which a session ID is associated.<br /><br /> For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/validate_session_m_Error_Messages\">validate_session_m error messages</a>.\n",
        "operationId" : "ValidateSessionM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ValidateSessionMRequest"
          }
        } ],
        "tags" : [ "ValidateSessionM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ValidateSessionMResponse"
            }
          }
        }
      }
    },
    "#GetAllClientReceiptIdsM" : {
      "post" : {
        "summary" : "get_all_client_receipt_ids_m",
        "description" : "Returns a list of all client receipt IDs entered as input parameters for any API call to Aria. If the client_receipt hash doesn't display an account number, it means that the receipt ID didn't have an account number in scope or was linked to a call that included multiple account IDs.\n",
        "operationId" : "GetAllClientReceiptIdsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAllClientReceiptIdsMRequest"
          }
        } ],
        "tags" : [ "GetAllClientReceiptIdsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAllClientReceiptIdsMResponse"
            }
          }
        }
      }
    },
    "#UseridIsAvailableM" : {
      "post" : {
        "summary" : "userid_is_available_m",
        "description" : "Determines whether a specified user ID is available for use.",
        "operationId" : "UseridIsAvailableM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UseridIsAvailableMRequest"
          }
        } ],
        "tags" : [ "UseridIsAvailableM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UseridIsAvailableMResponse"
            }
          }
        }
      }
    },
    "#SetAcctNotifyTmpltGrpM" : {
      "post" : {
        "summary" : "set_acct_notify_tmplt_grp_m",
        "description" : "Assign or de_assign notification template group at the account level.\n",
        "operationId" : "SetAcctNotifyTmpltGrpM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SetAcctNotifyTmpltGrpMRequest"
          }
        } ],
        "tags" : [ "SetAcctNotifyTmpltGrpM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SetAcctNotifyTmpltGrpMResponse"
            }
          }
        }
      }
    },
    "#GetRecurringCreditInfoM" : {
      "post" : {
        "summary" : "get_recurring_credit_info_m",
        "description" : "This API returns a list of recurring credits associated with a specified account or master plan instance.",
        "operationId" : "GetRecurringCreditInfoM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetRecurringCreditInfoMRequest"
          }
        } ],
        "tags" : [ "GetRecurringCreditInfoM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetRecurringCreditInfoMResponse"
            }
          }
        }
      }
    },
    "#AdjustAcctPlanBillingDatesM" : {
      "post" : {
        "summary" : "adjust_acct_plan_billing_dates_m",
        "description" : "Adjusts the billing date for a specified set of master plans under one or more accounts to date(s) in the future or in the past. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/adjust_acct_plan_billing_dates_m_Error_Messages\">adjust_acct_plan_billing_dates_m error messages</a>.\n",
        "operationId" : "AdjustAcctPlanBillingDatesM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/AdjustAcctPlanBillingDatesMRequest"
          }
        } ],
        "tags" : [ "AdjustAcctPlanBillingDatesM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/AdjustAcctPlanBillingDatesMResponse"
            }
          }
        }
      }
    },
    "#GetStatementForInvoiceM" : {
      "post" : {
        "summary" : "get_statement_for_invoice_m",
        "description" : "Returns a statement associated with a specified account and invoice.",
        "operationId" : "GetStatementForInvoiceM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetStatementForInvoiceMRequest"
          }
        } ],
        "tags" : [ "GetStatementForInvoiceM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetStatementForInvoiceMResponse"
            }
          }
        }
      }
    },
    "#ModifyAcctUniversalContractM" : {
      "post" : {
        "summary" : "modify_acct_universal_contract_m",
        "description" : "Modifies a universal contract assigned to a specified account.\n",
        "operationId" : "ModifyAcctUniversalContractM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ModifyAcctUniversalContractMRequest"
          }
        } ],
        "tags" : [ "ModifyAcctUniversalContractM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ModifyAcctUniversalContractMResponse"
            }
          }
        }
      }
    },
    "#GetClientPlansBasicM" : {
      "post" : {
        "summary" : "get_client_plans_basic_m",
        "description" : "Returns a summary list of all plans associated with a client.",
        "operationId" : "GetClientPlansBasicM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetClientPlansBasicMRequest"
          }
        } ],
        "tags" : [ "GetClientPlansBasicM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetClientPlansBasicMResponse"
            }
          }
        }
      }
    },
    "#DeleteRegUssConfigParamsM" : {
      "post" : {
        "summary" : "delete_reg_uss_config_params_m",
        "description" : "Removes the parameter name-value pairs in a specified configuration set created using the set_reg_uss_config_params call.\n",
        "operationId" : "DeleteRegUssConfigParamsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/DeleteRegUssConfigParamsMRequest"
          }
        } ],
        "tags" : [ "DeleteRegUssConfigParamsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/DeleteRegUssConfigParamsMResponse"
            }
          }
        }
      }
    },
    "#GetItemsBySuppFieldM" : {
      "post" : {
        "summary" : "get_items_by_supp_field_m",
        "description" : "Returns the inventory items associated with a particular value for a supplemental object field.\n",
        "operationId" : "GetItemsBySuppFieldM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetItemsBySuppFieldMRequest"
          }
        } ],
        "tags" : [ "GetItemsBySuppFieldM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetItemsBySuppFieldMResponse"
            }
          }
        }
      }
    },
    "#RecordOutGoingPaymentM" : {
      "post" : {
        "summary" : "record_out_going_payment_m",
        "description" : "record remittance to net terms accounts",
        "operationId" : "RecordOutGoingPaymentM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/RecordOutGoingPaymentMRequest"
          }
        } ],
        "tags" : [ "RecordOutGoingPaymentM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/RecordOutGoingPaymentMResponse"
            }
          }
        }
      }
    },
    "#GetChildAcctsM" : {
      "post" : {
        "summary" : "get_child_accts_m",
        "description" : "Returns all child account numbers associated with a specified parent account number.\n",
        "operationId" : "GetChildAcctsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetChildAcctsMRequest"
          }
        } ],
        "tags" : [ "GetChildAcctsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetChildAcctsMResponse"
            }
          }
        }
      }
    },
    "#ReplaceRegUssConfigParamsM" : {
      "post" : {
        "summary" : "replace_reg_uss_config_params_m",
        "description" : "Replaces the parameter name-value pairs in a particular configuration set with a specified set of new parameter name-value pairs.\n",
        "operationId" : "ReplaceRegUssConfigParamsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ReplaceRegUssConfigParamsMRequest"
          }
        } ],
        "tags" : [ "ReplaceRegUssConfigParamsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ReplaceRegUssConfigParamsMResponse"
            }
          }
        }
      }
    },
    "#GetAcctContactsM" : {
      "post" : {
        "summary" : "get_acct_contacts_m",
        "description" : "Returns all the contacts for the specified client account and/or billing group and information about them (e.g. their locations and whether it is an account, billing, backup, or statement contact).\n",
        "operationId" : "GetAcctContactsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctContactsMRequest"
          }
        } ],
        "tags" : [ "GetAcctContactsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctContactsMResponse"
            }
          }
        }
      }
    },
    "#SettleDisputeHoldM" : {
      "post" : {
        "summary" : "settle_dispute_hold_m",
        "description" : "Settle dispute for the given dispute number.\n",
        "operationId" : "SettleDisputeHoldM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SettleDisputeHoldMRequest"
          }
        } ],
        "tags" : [ "SettleDisputeHoldM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SettleDisputeHoldMResponse"
            }
          }
        }
      }
    },
    "#GetInvoiceDetailsM" : {
      "post" : {
        "summary" : "get_invoice_details_m",
        "description" : "Returns the line items of a specified invoice. <p>\n For information on error messages generated by this API,\n see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_invoice_details_m_Error_Messages\">get_invoice_details_m error messages</a>.\n",
        "operationId" : "GetInvoiceDetailsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetInvoiceDetailsMRequest"
          }
        } ],
        "tags" : [ "GetInvoiceDetailsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetInvoiceDetailsMResponse"
            }
          }
        }
      }
    },
    "#ApplyCmM" : {
      "post" : {
        "summary" : "apply_cm_m",
        "description" : "Applies credit memo line credits to invoice gross line amounts.\n",
        "operationId" : "ApplyCmM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ApplyCmMRequest"
          }
        } ],
        "tags" : [ "ApplyCmM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ApplyCmMResponse"
            }
          }
        }
      }
    },
    "#ToggleTestAccountM" : {
      "post" : {
        "summary" : "toggle_test_account_m",
        "description" : "Changes a specified account from a live account to a test account or from a test account to a live account.\n",
        "operationId" : "ToggleTestAccountM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/ToggleTestAccountMRequest"
          }
        } ],
        "tags" : [ "ToggleTestAccountM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/ToggleTestAccountMResponse"
            }
          }
        }
      }
    },
    "#SendAcctEmailM" : {
      "post" : {
        "summary" : "send_acct_email_m",
        "description" : "Sends a specified message type to a particular account holder identified by a user ID.\n",
        "operationId" : "SendAcctEmailM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/SendAcctEmailMRequest"
          }
        } ],
        "tags" : [ "SendAcctEmailM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/SendAcctEmailMResponse"
            }
          }
        }
      }
    },
    "#GetAufStatusM" : {
      "post" : {
        "summary" : "get_auf_status_m",
        "description" : "Returns the upload statistics for a specified client usage file.\n",
        "operationId" : "GetAufStatusM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAufStatusMRequest"
          }
        } ],
        "tags" : [ "GetAufStatusM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAufStatusMResponse"
            }
          }
        }
      }
    },
    "#GetAcctMessageSizeM" : {
      "post" : {
        "summary" : "get_acct_message_size_m",
        "description" : "Returns the size in bytes of the body of a particular email message sent to a specified account holder.\n",
        "operationId" : "GetAcctMessageSizeM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctMessageSizeMRequest"
          }
        } ],
        "tags" : [ "GetAcctMessageSizeM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctMessageSizeMResponse"
            }
          }
        }
      }
    },
    "#GetAcctHierarchyDetailsM" : {
      "post" : {
        "summary" : "get_acct_hierarchy_details_m",
        "description" : "Returns the account hierarchy details.",
        "operationId" : "GetAcctHierarchyDetailsM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctHierarchyDetailsMRequest"
          }
        } ],
        "tags" : [ "GetAcctHierarchyDetailsM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctHierarchyDetailsMResponse"
            }
          }
        }
      }
    },
    "#GetAcctUniversalContractM" : {
      "post" : {
        "summary" : "get_acct_universal_contract_m",
        "description" : "Returns any universal contract currently associated with a specified account.\n",
        "operationId" : "GetAcctUniversalContractM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctUniversalContractMRequest"
          }
        } ],
        "tags" : [ "GetAcctUniversalContractM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctUniversalContractMResponse"
            }
          }
        }
      }
    },
    "#GetAriaXmlStatementM" : {
      "post" : {
        "summary" : "get_aria_xml_statement_m",
        "description" : "Returns the contents of a particular xml statement associated with a specified account.\n",
        "operationId" : "GetAriaXmlStatementM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAriaXmlStatementMRequest"
          }
        } ],
        "tags" : [ "GetAriaXmlStatementM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAriaXmlStatementMResponse"
            }
          }
        }
      }
    },
    "#GetAcctPlansM" : {
      "post" : {
        "summary" : "get_acct_plans_m",
        "description" : "Returns the details of the master and supplemental plans assigned to a specified account. <br /><br />For information on error messages generated by this API, see <a href=\"https://developer.ariasystems.net/Aria_Crescendo_API_List/Aria_Crescendo_API_Error_Messages/get_acct_plans_m_Error_Messages\">get_acct_plans_m error messages</a>.\n",
        "operationId" : "GetAcctPlansM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAcctPlansMRequest"
          }
        } ],
        "tags" : [ "GetAcctPlansM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAcctPlansMResponse"
            }
          }
        }
      }
    },
    "#GetAllActionsByReceiptIdM" : {
      "post" : {
        "summary" : "get_all_actions_by_receipt_id_m",
        "description" : "Returns a list of actions associated with a particular combination of client receipt ID and account.\n",
        "operationId" : "GetAllActionsByReceiptIdM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/GetAllActionsByReceiptIdMRequest"
          }
        } ],
        "tags" : [ "GetAllActionsByReceiptIdM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/GetAllActionsByReceiptIdMResponse"
            }
          }
        }
      }
    },
    "#UpdateAcctStatusM" : {
      "post" : {
        "summary" : "update_acct_status_m",
        "description" : "Sets the status of a a specified account and optionally indicates the number of days or date in the future on which the status change should go into effect. This call can also reset the billing dates on the status change date for accounts changing from a non-billable to a billable status.\n",
        "operationId" : "UpdateAcctStatusM",
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : "true",
          "schema" : {
            "$ref" : "#/definitions/UpdateAcctStatusMRequest"
          }
        } ],
        "tags" : [ "UpdateAcctStatusM" ],
        "responses" : {
          "default" : {
            "schema" : {
              "$ref" : "#/definitions/UpdateAcctStatusMResponse"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "WriteAcctCommentMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "PaymentApplication" : {
      "type" : "object",
      "description" : "An Array of payment applications.",
      "properties" : {
        "transaction_id" : {
          "description" : "Aria-assigned identiier for this transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_type" : {
          "description" : "Type of transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "description" : "Text description of the transaction",
          "type" : "string"
        },
        "amount" : {
          "description" : "Total monetary value of this transaction",
          "type" : "number"
        },
        "applied_amount" : {
          "description" : "For transaction types that decrease an accounts balance (e.g. Payments) the amount of this transaction applied to date to charge transactions on the account.\n",
          "type" : "number"
        },
        "currency_code" : {
          "description" : "ISO Currency code for this transaction\n",
          "type" : "string"
        },
        "transaction_date" : {
          "description" : "Date the transaction was executed.\n",
          "type" : "string"
        },
        "is_voided" : {
          "description" : "A return value of \"true\" here indicates the transaction has been voided.\n",
          "type" : "string"
        },
        "statement_no" : {
          "description" : "If the given transaction has been included within a statement (an Aria-generated internal grouping of all financial transactions on this account within a given period), the Aria-assigned identifier of that statement.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "seq_statement_id" : {
          "description" : "The unique sequential statement number.\n",
          "type" : "string"
        }
      }
    },
    "Contract" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "client_contract_id" : {
          "description" : "Client-assigned unique contract identifier",
          "type" : "string"
        },
        "contract_type_no" : {
          "description" : "Type ID of this contract. Placing a value in this field indicates that you are assigning a contract to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_length_months" : {
          "description" : "Number of months this contract remains on the account. This field must be blank if you specify values in the contract_end_date field.'\n",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_cancel_fee" : {
          "description" : "Fee charged to the account for prematurely ending this contract",
          "type" : "number"
        },
        "contract_comments" : {
          "description" : "Any client-defined comments stored on this contract at the account level",
          "type" : "string"
        },
        "contract_start_date" : {
          "description" : "Date, in yyyy-mm-dd format, on which this contract takes effect. If contract_length_months is blank, and this field is blank, but client_contract_id is specified, then the start date for the contract defaults to today's date.\n",
          "type" : "string"
        },
        "contract_end_date" : {
          "description" : "Date, in YYYY-MM-DD format, on which this contract ends. If the contract_length_months field is valued, this field must be blank. If the contract_start_date field has a value, and the contract_length_months field is blank, then this field must have a value that falls after the value in the contract_start_date field.\n",
          "type" : "string"
        },
        "contract_plans" : {
          "description" : "List of plan instance(s) to be associated with the contract.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractPlan"
          }
        }
      }
    },
    "SetProvEngineMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "set_prov_engine_m" ],
          "default" : "set_prov_engine_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "on_off_indicator" : {
          "description" : "A boolean argument to turn provisioning messages on and off (on=true/1, off=false/0)\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetReversibleAuthorizationsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "reversible_authorizations" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReversibleAuthorization"
          }
        }
      }
    },
    "UpdateAcctPlanMultiMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_acct_plan_multi_m" ],
          "default" : "update_acct_plan_multi_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client(or user)-assigned account identifier. If \"acct_no\" is not provided, must correctly identify the account to which the given usage record is to be assigned. All usage records must identify either an \"acct_no\" or a \"userid\".\n",
          "type" : "string",
          "maxLength" : 50
        },
        "plan_updates" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUpdate"
          }
        },
        "assignment_directive" : {
          "description" : "The rule to be applied to this assignment request, governing the proration rule is applied. Default behavior is to make the plan change (assign/deassign a plan to an account, change units on an existing plan, etc.) immediately based on client-defined default proration rule, resulting in appropriate prorated charge and credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_start_date" : {
          "description" : "Alternative start date, in yyyy-mm-dd format, for the master plan instance being assigned on the account. This date can be used to delay providing services to the account holder (for example: until they have been email validated), and must be within one billing interval of the plan being assigned.\n",
          "type" : "string"
        },
        "retroactive_start_date" : {
          "description" : "Date, in yyyy-mm-dd format, to set for retroactive start.",
          "type" : "string"
        },
        "override_bill_thru_date" : {
          "description" : "Applicable only for master plan assignment. When provided, this date will be used as the bill thru date for the master plan instance. The alt_start_date or retroactive_start_date input will be honored with override_bill_thru_date, but invoicing_option must be set to Perform Prorated Invoicing. The override_dates_mp_instance_no or override_dates_client_mp_instance_id parameters take precedence over this input parameter, and if provided together the override_bill_thru_date input will be ignored. The date provided must be in the future, must be after the alt_start_date (if provided), and cannot exceed one recurring billing interval. This parameter cannot be used with alt_bill_day or status_until_alt_start (defaults to Inactive). A prorated invoice will be generated for recurring services from the effective start date of the plan instance through the override_bill_thru_date provided. If the plan being assigned has no usage services, the next_bill_date (aka anniversary date) will be the override_bill_thru_date + 1 day. If the plan has usage services, then the next_bill_date will be calculated based on the usage interval to be the earliest date in the future that will ensure usage and recurring services will be invoiced together on the override_bill_thru_date + 1 day.\n",
          "type" : "string"
        },
        "override_dates_mp_instance_no" : {
          "description" : "Applicable only for master plan assignment. When provided, the billing dates for the new master plan being assigned will be aligned with the billing dates of the existing master plan instance specified (honoring the bill day of the existing master plan instance). The alt_start_date or retroactive_start_date input will be honored with the override_dates_mp_instance_no or the override_dates_client_mp_instance_id, but invoicing_option must be set to Perform Prorated Invoicing. These parameters take precedence over the override_bill_thru_date parameter, and cannot be used with alt_bill_day or status_until_alt_start (defaults to Inactive). If the recurring interval of the new master plan instance will be the same as or longer than the existing master plan instance, a prorated invoice for the master plan being assigned will be generated for recurring services from the effective start date of the plan instance through the bill_thru_date of the existing master plan instance. If the recurring interval of the new master plan instance will be shorter than the existing master plan instance, the bill_thru_date for the new master plan instance will be calculated based on its recurring interval to be the earliest date in the future that will ensure the recurring services for both master plan instances will be invoiced together on the existing master plan instance's bill_thru_date + 1 day. In the above scenarios, if the new master plan instance has no usage services, the next_bill_date (aka anniversary date) will be the bill_thru_date + 1 day. If the new master plan instance has usage services, then the next_bill_date will be calculated based on the usage interval to be the earliest date in the future that will ensure usage and recurring services will be invoiced together on the bill_thru_date + 1 day.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "override_dates_client_mp_instance_id" : {
          "description" : "Applicable only for master plan assignment. When provided, the billing dates for the new master plan being assigned will be aligned with the billing dates of the existing master plan instance specified (honoring the bill day of the existing master plan instance). The alt_start_date or retroactive_start_date input will be honored with the override_dates_mp_instance_no or the override_dates_client_mp_instance_id, but invoicing_option must be set to Perform Prorated Invoicing. These parameters take precedence over the override_bill_thru_date parameter, and cannot be used with alt_bill_day or status_until_alt_start (defaults to Inactive). If the recurring interval of the new master plan instance will be the same as or longer than the existing master plan instance, a prorated invoice for the master plan being assigned will be generated for recurring services from the effective start date of the plan instance through the bill_thru_date of the existing master plan instance. If the recurring interval of the new master plan instance will be shorter than the existing master plan instance, the bill_thru_date for the new master plan instance will be calculated based on its recurring interval to be the earliest date in the future that will ensure the recurring services for both master plan instances will be invoiced together on the existing master plan instance's bill_thru_date + 1 day. In the above scenarios, if the new master plan instance has no usage services, the next_bill_date (aka anniversary date) will be the bill_thru_date + 1 day. If the new master plan instance has usage services, then the next_bill_date will be calculated based on the usage interval to be the earliest date in the future that will ensure usage and recurring services will be invoiced together on the bill_thru_date + 1 day.\n",
          "type" : "string"
        },
        "alt_bill_day" : {
          "description" : "Number specifying a day of the month to use as an alternate bill day. You can enter a bill date other than the anniversary date in this field. The invoice_mode must be set to 0 or must be blank to enter a date in this field, it cannot be set to 1.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoicing_option" : {
          "description" : "Indicator for performing full invoicing, and Perform Prorated Invoicing or client-defined on this account as part of this call.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_billing_groups" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctBillingGroup"
          }
        },
        "acct_payment_methods" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctPaymentMethod"
          }
        },
        "acct_dunning_groups" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctDunningGroup"
          }
        },
        "auto_collect_on_plan_chng" : {
          "description" : "Determines whether to automatically perform a collection attempt after an invoice is generated as a result of an immediate plan addition, modification or replacement.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollback_plan_chng_collect_fail" : {
          "description" : "When a collection failure occurs, determines whether the plan changes associated with that collection attempt are automatically rolled back. Note that if this API call results in multiple collection attempts, only those plan changes associated with collection failures are rolled back. All plan changes for which collection is successful are not rolled back.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auto_send_stmt_on_plan_chng" : {
          "description" : "When an immediate plan addition, modification or replacement results in an invoice, determines whether a statement is immediately generated for that invoice and sent to the appropriate contact on the account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "list_start_master_file" : {
          "description" : "Indicates whether the account is listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions",
          "type" : "string",
          "maxLength" : 50
        },
        "contacts" : {
          "description" : "List of contacts to be created on the account. Note that contacts not used as an account contact, billing contact, or statement contact will be saved on the account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contact"
          }
        },
        "combine_invoices" : {
          "description" : "Indicator for combining invoices when retroactive start dates, negative bill lag days, or plan changes just prior to the next billing date would otherwise have generated multiple invoices.  The allowable values are 1, 2, or 3.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "plan_updates", "acct_billing_groups" ]
    },
    "GetInvoiceHistoryMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_invoice_history_m" ],
          "default" : "get_invoice_history_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_id" : {
          "description" : "Aria-generated unique identifier for the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance.",
          "type" : "string"
        },
        "user_id" : {
          "description" : "Account's user ID. Alternative to using acct_no.",
          "type" : "string"
        },
        "start_bill_date" : {
          "description" : "The beginning of the date range to search for account invoices.",
          "type" : "string"
        },
        "end_bill_date" : {
          "description" : "The end of the range to search for invoice history on the account.",
          "type" : "string"
        },
        "include_voided" : {
          "description" : "Include voided invoices in the search results.",
          "type" : "string"
        },
        "rb_option" : {
          "description" : "Filters the return results of the api call.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "CancelRecurringCreditsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "error_codes" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ErrorCode"
          }
        }
      }
    },
    "UpdateAcctCompleteMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_acct_complete_m" ],
          "default" : "update_acct_complete_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions",
          "type" : "string",
          "maxLength" : 50
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "This is the client-assigned identifier for the account.",
          "type" : "string",
          "maxLength" : 50
        },
        "userid" : {
          "description" : "The user's unique identifier. Every account must have an associated user ID.\n",
          "type" : "string"
        },
        "password" : {
          "description" : "Password for the given user",
          "type" : "string"
        },
        "secret_question" : {
          "description" : "The user's secret question recorded to recover a password.\n",
          "type" : "string"
        },
        "secret_question_answer" : {
          "description" : "The response to a user's secret_question",
          "type" : "string"
        },
        "pin" : {
          "description" : "Persinal Identification number",
          "type" : "string"
        },
        "acct_contact_idx" : {
          "description" : "For non-persistent referencing of a contact in the contacts array within the API request. If an idx value is specified, inputs provided for other account contact fields are ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the account contact saved on the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "first_name" : {
          "description" : "Contact First name",
          "type" : "string"
        },
        "mi" : {
          "description" : "The Middle Initial of the contact.",
          "type" : "string"
        },
        "last_name" : {
          "description" : "Contact last name",
          "type" : "string"
        },
        "company_name" : {
          "description" : "Company name of the contact",
          "type" : "string"
        },
        "address1" : {
          "description" : "First address line of the contact.",
          "type" : "string"
        },
        "address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "address3" : {
          "description" : "Third address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "city" : {
          "description" : "City of the contact",
          "type" : "string"
        },
        "locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "state_prov" : {
          "description" : "State or Province of the contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "country_cd" : {
          "description" : "Country of the contact as the ISO-compliant 2-character country code abbreviation in uppercase. If you enter contact address information, but leave this field blank, then this field defaults to \"US\". If no contact address information is entered, this field remains blank.\n",
          "type" : "string"
        },
        "postal_cd" : {
          "description" : "Postal/Zip code for the contact address.",
          "type" : "string"
        },
        "phone" : {
          "description" : "The phone number of the contact",
          "type" : "string"
        },
        "phone_ext" : {
          "description" : "The extension for the contact phone",
          "type" : "string"
        },
        "cell_phone" : {
          "description" : "The contact cell phone.",
          "type" : "string"
        },
        "work_phone" : {
          "description" : "Work phone number of the contact.",
          "type" : "string"
        },
        "work_phone_ext" : {
          "description" : "The extension for the contact work phone",
          "type" : "string"
        },
        "fax" : {
          "description" : "The FAX phone number for the contact.",
          "type" : "string"
        },
        "email" : {
          "description" : "Email of the contact",
          "type" : "string"
        },
        "birthdate" : {
          "description" : "Birthdate of the contact in yyyy-mm-dd format.",
          "type" : "string"
        },
        "status_cd" : {
          "description" : "The status to which you are setting this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "senior_acct_no" : {
          "description" : "The senior_acct_no is the unique account number for the parent account and is used to establish parent-child billing relationships. To remove a parent account from a child account, you must enter '-999' in this field.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "senior_acct_userid" : {
          "description" : "User ID of the parent account",
          "type" : "string"
        },
        "senior_client_acct_id" : {
          "description" : "Client-account ID of the parent account",
          "type" : "string"
        },
        "test_acct_ind" : {
          "description" : "Indicates that the account is a test account and is treated as such in the system. The default value is 0.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "taxpayer_id" : {
          "description" : "Taxpayer Identification number.",
          "type" : "string"
        },
        "alt_client_acct_group_id" : {
          "description" : "One-time collections account group  to use for this specific call.  Default collections group on the account is not changed.",
          "type" : "string"
        },
        "acct_coupons" : {
          "description" : "An array of coupon details for the account.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctCoupon"
          }
        },
        "acct_start_date" : {
          "description" : "Date, in yyyy-mm-dd format, on which the account was first created outside of Aria",
          "type" : "string"
        },
        "alt_msg_template_no" : {
          "description" : "Email template number to assign to this account.",
          "type" : "integer",
          "format" : "int64"
        },
        "cn_alt_msg_template_no" : {
          "description" : "Email template number to assign to this account.",
          "type" : "integer",
          "format" : "int64"
        },
        "seq_func_group_no" : {
          "description" : "Functional account group number specifically designated for statement sequence number assignment.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_seq_func_group_id" : {
          "description" : "Client-defined functional account group number specifically designated for statement sequence number assignment.\n",
          "type" : "string"
        },
        "tax_exemption_level" : {
          "description" : "Provides the Tax Exemption Level for the account. This field only applies to the Aria internal tax engine.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_msg_template_id" : {
          "description" : "Client-defined email template ID assigned to this account.",
          "type" : "string"
        },
        "client_cn_alt_msg_template_id" : {
          "description" : "The client-defined alternate email template ID to use for this account",
          "type" : "string"
        },
        "reset_dates_after_status" : {
          "description" : "If 'true', resets the billing dates after an account status change.\n",
          "type" : "string"
        },
        "new_client_acct_id" : {
          "description" : "New Client-defined account ID for updating existing Client-defined account ID.",
          "type" : "string"
        },
        "invoicing_option" : {
          "description" : "Indicator for performing full invoicing, prorated invoicing or client-defined on this account as part of this call.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_start_date" : {
          "description" : "This is an alternative start date, in yyyy-mm-dd format, for the master plan instance being updated/assigned. This date can be used to delay providing services to the account holder (for example: until they have been email validated). This date must be within one billing interval of the plan being updated/assigned.\n",
          "type" : "string"
        },
        "alt_bill_day" : {
          "description" : "Number specifying a day of the month to use as an alternate bill day. You can enter a bill date other than the anniversary date in this field. The invoice_mode must be set to 0 or must be blank to enter a date in this field, it cannot be set to 1.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "retroactive_start_date" : {
          "description" : "Date, in yyyy-mm-dd format, to set for retroactive start.",
          "type" : "string"
        },
        "functional_acct_groups_update" : {
          "description" : "Array of functional groups to update.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FunctionalAcctGroupsUpdate"
          }
        },
        "collection_acct_groups_update" : {
          "description" : "Array of account collection groups to update",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CollectionAcctGroupsUpdate"
          }
        },
        "acct_supp_fields_update" : {
          "description" : "Array of objects to be updated. Each object contains a list of values for one of the following fields: acct_supp_field_name, acct_supp_field_value, or acct_supp_field_directive. The first value in each object is automatically associated with the first values in the other objects, as are the second values, third values and so on. Each object must contain the same number of values, or the API fails.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctSuppFieldsUpdate"
          }
        },
        "account_surcharges" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountSurcharge"
          }
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for Master plan instance",
          "type" : "string"
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "new_client_master_plan_instance_id" : {
          "description" : "New Client-defined master plan instance ID for updating existing Client-defined master plan instance ID.",
          "type" : "string"
        },
        "client_master_plan_id" : {
          "description" : "Client-defined unique identifier for Master plan",
          "type" : "string"
        },
        "master_plan_no" : {
          "description" : "Master plan number",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_instance_desc" : {
          "description" : "Master plan instance description",
          "type" : "string"
        },
        "dunning_group_no" : {
          "description" : "Dunning group to assign to master plan instance",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_group_id" : {
          "description" : "Client-defined unique identifier of dunning group to assign to master plan instance",
          "type" : "string"
        },
        "mp_billing_group_no" : {
          "description" : "Billing group to assign to master plan instance",
          "type" : "integer",
          "format" : "int64"
        },
        "client_mp_billing_group_id" : {
          "description" : "Client-defined unique identifier of billing group to assign to master plan",
          "type" : "string"
        },
        "master_plan_instance_status" : {
          "description" : "Master plan instance status",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_units" : {
          "description" : "This is multiplier variable for the recurring rate on the plan. Generally this value is 1, indicating the face value of the plan's recurring fee is used.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "resp_level_cd" : {
          "description" : "The responsibility level code. These are values 1 through 4 as described in the legend for this argument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_master_plan_inst_no" : {
          "description" : "The system-defined master plan instance number of the parent account. This field is required if the resp_level_cd is not equal to 1",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_rate_schedule_no" : {
          "description" : "The alternate rate schedule number for the master subscription plan being considered.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_rate_schedule_id" : {
          "description" : "The client-defined unique alternate rate schedule identifier for the master plan\n",
          "type" : "string"
        },
        "promo_cd" : {
          "description" : "This is the code provided the client  and used by the account holder during registration or when executing a transaction. A promotion generally provides access to a custom set of reduced-rate plans.\n",
          "type" : "string"
        },
        "mp_coupons" : {
          "description" : "An array of coupon details for the master plan instance.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MpCoupon"
          }
        },
        "master_plan_assign_directive" : {
          "description" : "The scope rule to be applied to this assignment/de-assignment request, governing both the date upon which the assignment should take place (immediately or on the account's anniversary date) and the proration rule that should be applied (per client's default rules for proration on plan assignment v. forcing proration on or off for this request only). Default behavior is to assign plan to account on the account's anniversary date, resulting in no proration effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "offset_months" : {
          "description" : "Number of months to add to the prorated period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "offset_interval" : {
          "description" : "If assigning a change on an anniversary day, the number of billing periods by which to delay that change. If the new plan is different from the old plan, and this value is greater than 0, then the billing date continues to be the annniversary date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_unbilled_usage" : {
          "description" : "Specifies whether to invoice the unbilled usage if a plan is terminated in the middle of a billing period.\n",
          "type" : "string"
        },
        "invoice_approval_required" : {
          "description" : "Boolean indicator to override client's default configured behaviour for creating Pending/Real invoice.\n",
          "type" : "string"
        },
        "status_degrade_date" : {
          "description" : "Specifies the date, in yyyy-mm-dd format, to degrade the account status.",
          "type" : "string"
        },
        "usage_accumulation_reset_months" : {
          "description" : "The number of reset months for each plan",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_pooling" : {
          "description" : "Indicates whether usage pooling is enabled for this plan instance. Allowable values are 'true' and 'false'.\n",
          "type" : "string"
        },
        "usage_threshold_applicability" : {
          "description" : "Usage tracking options on the plans in the account",
          "type" : "string"
        },
        "master_plan_plan_inst_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlanPlanInstField"
          }
        },
        "mp_surcharges" : {
          "description" : "Surcharge for master plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MpSurcharge"
          }
        },
        "update_acct_custom_rates" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UpdateAcctCustomRate"
          }
        },
        "billing_groups_array" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingGroupsArray"
          }
        },
        "payment_methods_array" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentMethodsArray"
          }
        },
        "revrec_profile_no" : {
          "description" : "Profile ID of an existing Revenue Recognition Profile.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_revrec_id" : {
          "description" : "Client-defined identifier of an existing Revenue Recognition Profile. If this parameter is specified it will take precedence over revrec_profile_no.\n",
          "type" : "string"
        },
        "mp_proration_invoice_timing" : {
          "description" : "Determines whether to create a separate invoice for prorated charges immediately, or defer to the next anniversary date. Note that this will override the Proration Invoice Timing configuration saved with the plan in the product catalog.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the account.",
          "type" : "string"
        },
        "mp_po_num" : {
          "description" : ": Purchase order number assigned to a master plan instance.",
          "type" : "string"
        },
        "list_start_master_file" : {
          "description" : "Indicates whether the account is listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "contacts_list" : {
          "description" : "List of contacts to be created on the account. Note that contacts not used as an account contact, billing contact, or statement contact will be saved on the account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContactsList"
          }
        },
        "legal_entity_no" : {
          "description" : "Aria-assigned legal entity identification number. You can only update this field if the account has not yet been assigned to a legal entity, and if legal entities are enabled for this client.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_legal_entity_id" : {
          "description" : "Client-assigned unique identifier for the legal entity.",
          "type" : "string"
        },
        "plan_instance_supp_field_update_only" : {
          "description" : "This field controls the ability to update plan instance fields on a plan that is in non-provisioned status.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_filter" : {
          "description" : "Enable Fraud Filtering.  This is supported if your payment processor supports this feature and has been certified with Aria.  If no values are provided, the system will default to 2.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "UpdateAcctBillingGroupMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_acct_billing_group_m" ],
          "default" : "update_acct_billing_group_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_group_no" : {
          "description" : "Billing group number",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_group_name" : {
          "description" : "Billing Group name",
          "type" : "string"
        },
        "billing_group_description" : {
          "description" : "Billing group description",
          "type" : "string"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined unique identifier for billing group",
          "type" : "string"
        },
        "new_client_billing_group_id" : {
          "description" : "Specifies new client-defined unique identifier for billing group",
          "type" : "string"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_template_group" : {
          "description" : "Notify template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_template" : {
          "description" : "Statement template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_note_template" : {
          "description" : "Credit note template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_option" : {
          "description" : "This allows you to select either payment methods (such as a credit card or other electronic form of payment) or payment terms (such as a physical check) when creating or modifying a billing group'\n",
          "type" : "string"
        },
        "primary_payment_method_no" : {
          "description" : "Primary payment method ID",
          "type" : "integer",
          "format" : "int64"
        },
        "client_primary_payment_method_id" : {
          "description" : "Client-defined unique identifier of the primary payment method",
          "type" : "string"
        },
        "backup_payment_method_no" : {
          "description" : "Backup payment method ID.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_backup_payment_method_id" : {
          "description" : "Client-defined unique identifier of the backup payment method",
          "type" : "string"
        },
        "stmt_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the statement contact associated with a billing group on the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "stmt_first_name" : {
          "description" : "Statement contact first name",
          "type" : "string"
        },
        "stmt_mi" : {
          "description" : "The Middle Initial of the statement contact.",
          "type" : "string"
        },
        "stmt_last_name" : {
          "description" : "Statement contact Last name",
          "type" : "string"
        },
        "stmt_company_name" : {
          "description" : "Company name of the statement contact",
          "type" : "string"
        },
        "stmt_address1" : {
          "description" : "First address line of the statement contact",
          "type" : "string"
        },
        "stmt_address2" : {
          "description" : "Second address line of the statement contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "stmt_address3" : {
          "description" : "Third address line of the statement contact",
          "type" : "string"
        },
        "stmt_city" : {
          "description" : "City of the statement contact",
          "type" : "string"
        },
        "stmt_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "stmt_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "stmt_country" : {
          "description" : "Country of the contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "stmt_postal_cd" : {
          "description" : "Postal/Zip code for the statement contact address.",
          "type" : "string"
        },
        "stmt_phone" : {
          "description" : "The phone number of the statement contact",
          "type" : "string"
        },
        "stmt_phone_ext" : {
          "description" : "The extension for the statement contact phone",
          "type" : "string"
        },
        "stmt_cell_phone" : {
          "description" : "The contact cell phone of the statement contact.",
          "type" : "string"
        },
        "stmt_work_phone" : {
          "description" : "Work phone number of the statement contact.",
          "type" : "string"
        },
        "stmt_work_phone_ext" : {
          "description" : "The extension for the statement contact work phone",
          "type" : "string"
        },
        "stmt_fax" : {
          "description" : "The fax number for the statement contact.",
          "type" : "string"
        },
        "stmt_email" : {
          "description" : "Email of the statement contact",
          "type" : "string"
        },
        "stmt_birthdate" : {
          "description" : "The birthdate, in yyyy-mm-dd format, of the statement contact.",
          "type" : "string"
        },
        "bill_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact on this account to be used as the billing contact for the payment method. If bill_contact_no is included in the API request, all other billing contact parameters are ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_postal_cd" : {
          "description" : "Postal code for the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_ext" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_ext" : {
          "description" : "This is the work phone extension for the billing contact work phone.\n",
          "type" : "string"
        },
        "bill_fax" : {
          "description" : "Fax number of the billing contact.",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_birthdate" : {
          "description" : "Birthdate of the billing contact.\n",
          "type" : "string"
        },
        "pay_method_name" : {
          "description" : "Payment method name.",
          "type" : "string"
        },
        "client_payment_method_id" : {
          "description" : "Client-defined unique identifier for the payment method.",
          "type" : "string"
        },
        "pay_method_description" : {
          "description" : "Payment method description",
          "type" : "string"
        },
        "pay_method_type" : {
          "description" : "This is the method_id corresponding to a payment method such as credit card, Electronic Check, Pre-Paid, etc.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_num" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_acct_num" : {
          "description" : "The bank account number.\n",
          "type" : "string"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "billing_group_directive" : {
          "description" : "Directive to update / disable the specified billing group",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plans_summary" : {
          "description" : "List of master plan instances associated with the billing group.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlansSummary"
          }
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "list_start_master_file" : {
          "description" : "Indicates whether the account is listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_id" : {
          "description" : "A numeric code indicating the type of credit card.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_terms_no" : {
          "description" : "Payment terms number assigned to the account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_terms_name" : {
          "description" : "Payment terms name assigned to the account.\n",
          "type" : "string"
        },
        "client_payment_term_id" : {
          "description" : "Client-defined identifier for the billing group's payment term\n",
          "type" : "string"
        },
        "ean_gln_num" : {
          "description" : "'This is the European Article Number or Global Location Number that is a required field if a payment option is terms AND client payment term ID matches a term in which the payment term type equals EAN/GLN. This number should be provided by Aria's client's customers and is unique to each customer (account).'\n",
          "type" : "string"
        },
        "ean_gln_requisition_num" : {
          "description" : "'This is the European Article Number requisition number or Global Location Number requisition number that is a required field if a payment option is terms AND client payment term ID matches a term in which the payment term type equals EAN/GLN. This number should be provided by Aria's client's customers and is used to track their individual projects similarly to a purchase order. This number is generated by the individual customer (account) and is not provided by any other party'\n",
          "type" : "string"
        },
        "credit_memo_template" : {
          "description" : "Credit template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "rebill_template" : {
          "description" : "Rebill template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_filter" : {
          "description" : "Enable Fraud Filtering.  This is supported if your payment processor supports this feature and has been certified with Aria.  If no values are provided, the system will default to 2.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "RemoveAcctPaymentMethodMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "remove_acct_payment_method_m" ],
          "default" : "remove_acct_payment_method_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "Client-defined ID for this payment method.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "AccountContact" : {
      "type" : "object",
      "description" : "Account contact",
      "properties" : {
        "contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact.",
          "type" : "integer",
          "format" : "int64"
        },
        "first_name" : {
          "description" : "First name of the account contact",
          "type" : "string"
        },
        "middle_initial" : {
          "description" : "Middle initial of the account contact",
          "type" : "string"
        },
        "last_name" : {
          "description" : "Last name of the account contact",
          "type" : "string"
        },
        "company_name" : {
          "description" : "Company name of the account contact",
          "type" : "string"
        },
        "address1" : {
          "description" : "First address line of the contact.",
          "type" : "string"
        },
        "address2" : {
          "description" : "Second address line of the contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "address3" : {
          "description" : "The third line of the address",
          "type" : "string"
        },
        "city" : {
          "description" : "City of the account contact",
          "type" : "string"
        },
        "locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "state_prov" : {
          "description" : "State or Province of the contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "country_cd" : {
          "description" : "Country of the account contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "postal_cd" : {
          "description" : "Postal code of the account contact",
          "type" : "string"
        },
        "phone" : {
          "description" : "Phone number of the account contact",
          "type" : "string"
        },
        "phone_ext" : {
          "description" : "Phone extension of the account contact",
          "type" : "string"
        },
        "cell_phone" : {
          "description" : "Cell phone number of the account contact",
          "type" : "string"
        },
        "work_phone" : {
          "description" : "Work phone number of the account contact",
          "type" : "string"
        },
        "work_phone_ext" : {
          "description" : "Work phone extension of the account contact",
          "type" : "string"
        },
        "fax" : {
          "description" : "Fax phone number of the account contact",
          "type" : "string"
        },
        "email" : {
          "description" : "Email of the account contact",
          "type" : "string"
        },
        "birthdate" : {
          "description" : "Birthdate of the contact in yyyy-mm-dd format.",
          "type" : "string"
        },
        "address_verification_code" : {
          "description" : "Verification code for the account contact address",
          "type" : "string"
        },
        "address_match_score" : {
          "description" : "Match score for the account contact address",
          "type" : "number"
        }
      }
    },
    "PlanUnitInstanceDetail" : {
      "type" : "object",
      "description" : "Array of plan unit instances",
      "properties" : {
        "out_plan_unit_inst_no" : {
          "description" : "Aria unique plan unit instance number",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_plan_unit_inst_id" : {
          "description" : "Client-assigned identifier for the plan unit instance",
          "type" : "string"
        }
      }
    },
    "PaymentMethodsArray" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_contact_idx" : {
          "description" : "For non-persistent referencing of a contact in the contacts array within the API request. If an idx value is specified, inputs provided for other account contact fields will be ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact on this account to be used as the billing contact for the payment method. If bill_contact_no is included in the API request, all other billing contact parameters are ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_postal_cd" : {
          "description" : "Postal code for the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_ext" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_ext" : {
          "description" : "This is the work phone extension for the billing contact work phone.\n",
          "type" : "string"
        },
        "bill_fax" : {
          "description" : "Fax number of the billing contact.",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_birthdate" : {
          "description" : "Birthdate of the billing contact.\n",
          "type" : "string"
        },
        "pay_method_name" : {
          "description" : "Human-readable name of the payment method",
          "type" : "string"
        },
        "client_pay_method_id" : {
          "description" : "Client-defined unique identifier for the payment method.",
          "type" : "string"
        },
        "pay_method_description" : {
          "description" : "Payment method description",
          "type" : "string"
        },
        "pay_method_type" : {
          "description" : "This is the method_id corresponding to a payment method such as credit card, Electronic Check, Pre-Paid, etc.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_num" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_acct_num" : {
          "description" : "The bank account number.\n",
          "type" : "string"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "do_collect" : {
          "description" : "If 'true', a collection is attempted after updating electronic billing information on accounts with outstanding balances.\n",
          "type" : "string"
        },
        "change_status_after_coll" : {
          "description" : "If 'true' the account status is is changed after a collection is completed.\n",
          "type" : "string"
        },
        "cc_id" : {
          "description" : "A numeric code indicating the type of credit card.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetPaymentApplicationsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "payment_applications" : {
          "description" : "An Array of payment applications.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentApplication"
          }
        }
      }
    },
    "GetAcctHierarchyDetailsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_hierarchy_dtls" : {
          "description" : "An Array of account hierarchy details.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctHierarchyDtl"
          }
        }
      }
    },
    "OpenChargeItem" : {
      "type" : "object",
      "description" : "Array of open charge line items.",
      "properties" : {
        "proration_no" : {
          "description" : "Represents proration sequence number, which is generated out of different proration calls.",
          "type" : "integer",
          "format" : "int64"
        },
        "line_no" : {
          "description" : "The sequential line number of this line item. Initial record value is always 1.",
          "type" : "integer",
          "format" : "int64"
        },
        "posting_date" : {
          "description" : "Date on which this charge occurred in the system.",
          "type" : "string"
        },
        "service_no" : {
          "description" : "Aria-assigned unique service identifier.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name" : {
          "description" : "The name corresponding to this line items service code.",
          "type" : "string"
        },
        "units" : {
          "description" : "The number of units of this service code billed on this line item.",
          "type" : "number"
        },
        "rate_per_unit" : {
          "description" : "The rate per unit billed.",
          "type" : "number"
        },
        "amount" : {
          "description" : "The amount of this line item.",
          "type" : "number"
        },
        "description" : {
          "description" : "Text description of this line item.",
          "type" : "string"
        },
        "usage_type_no" : {
          "description" : "The usage type code associated with this line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_no" : {
          "description" : "The unique plan ID associated with this line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The name of the plan associated with this line item.",
          "type" : "string"
        }
      }
    },
    "GetAcctUuidsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "uuid_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UuidInfo"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "CmTaxDetail" : {
      "type" : "object",
      "description" : "Array of tax details.",
      "properties" : {
        "tax_detail_line" : {
          "description" : "Invoice line number associated with the detail tax record.",
          "type" : "integer",
          "format" : "int64"
        },
        "taxed_cm_line_no" : {
          "description" : "Taxed invoice line number related to this tax record.",
          "type" : "integer",
          "format" : "int64"
        },
        "tax_credit_amount" : {
          "description" : "Amount of the tax credited for the given tax type.",
          "type" : "number"
        },
        "tax_authority_level" : {
          "description" : "Tax jurisdiction code: 0=federal, 1=state/province.",
          "type" : "integer",
          "format" : "int64"
        },
        "orig_was_tax_inclusive" : {
          "description" : "Indicates whether or not the invoice line amount associated with  the credit memo line was tax inclusive or not.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "tax_srv_tax_type_id" : {
          "description" : "Identifier of the tax type returned by the tax engine.",
          "type" : "string"
        },
        "tax_srv_tax_type_desc" : {
          "description" : "Description of the tax type returned by the tax engine.",
          "type" : "string"
        },
        "tax_serv_cat_text" : {
          "description" : "Category of the tax type returned by the tax engine.",
          "type" : "string"
        }
      }
    },
    "AllClientPlansService" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "parent_plan_instance_no" : {
          "description" : "Aria-assigned unique parent plan Instance identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_client_plan_instance_id" : {
          "description" : "Parent plans Client-defined Plan Instance ID",
          "type" : "string"
        },
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client assigned unique plan identifier",
          "type" : "string"
        },
        "plan_name" : {
          "description" : "Plan Name",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "Text description of this plan",
          "type" : "string"
        },
        "supp_plan_ind" : {
          "description" : "Indicates whether or not this plan is a supplemental plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_ind" : {
          "description" : "Indicates whether or not this plan is billable",
          "type" : "integer",
          "format" : "int64"
        },
        "display_ind" : {
          "description" : "Indicates whether or not the plan is marked as \"displayable\". 0 means not displayable. 1 means displayable.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_months" : {
          "description" : "Number of months in which the account will change from the current plan to the pre-defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_no" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_rollover_plan_id" : {
          "description" : "Pre-defined client rollover plan ID to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined client rollover plan ID.\n",
          "type" : "string"
        },
        "early_cancel_fee" : {
          "description" : "Fee charged for early cancellations.",
          "type" : "number"
        },
        "early_cancel_min_months" : {
          "description" : "Number of months during which early cancellation fees would apply on plan cancellation.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "suspension_period" : {
          "description" : "Pre-defined period in days in which an account will degrade to Suspended status (-1) if action is not taken such as a plan or status change.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "new_plan_status" : {
          "description" : "The status code to assert for the new account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status" : {
          "description" : "Status used for the master plan instance at the completion of the rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_days" : {
          "description" : "Number of days in which an account will change from the initial status code to the pre-defined rollover status code.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_months" : {
          "description" : "Initial free months.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_2_assign_on_susp" : {
          "description" : "Plan to assign when an account on this plan is suspended.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_2_assign_on_susp" : {
          "description" : "Client-defined Plan identifier to assign when an account on this plan is suspended.\n",
          "type" : "string"
        },
        "default_notify_method" : {
          "description" : "Default notification method given to an account that is assigned to this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "prepaid_ind" : {
          "description" : "Indicates whether or not this plan is prepaid",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "rollover_plan_duration" : {
          "description" : "Duration of the plan rollover period (used in conjunction with rollover_plan_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_uom_cd" : {
          "description" : "Units associated with the duration of the plan rollover period (used in conjunction with rollover_plan_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_duration" : {
          "description" : "Duration of the initial free period (used in conjunction with init_free_period_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_uom_cd" : {
          "description" : "Units associated with the duration of the initial free period (used in conjunction with init_free_period_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_plan_status_cd" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_duration" : {
          "description" : "Duration of the plan status rollover period, after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status (used in conjuction with rollover_plan_status_uom_cd).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_uom_cd" : {
          "description" : "Units associated with the duration of the plan status rollover period after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status. (used in conjunction with rollover_plan_status_duration).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_cd" : {
          "description" : "Status used for the master plan instance at the completion of the plan status rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_services" : {
          "description" : "A multidimensional array of Services for this plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanService"
          }
        },
        "plan_rate_schedules_details" : {
          "description" : "An array of the rate schedules for the requested plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanRateSchedulesDetail"
          }
        },
        "contract_rollover_plan_no" : {
          "description" : "Pre-defined plan to be used as the rollover plan at the completion of the contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_plan_id" : {
          "description" : "Client-defined ID of the pre-defined plan to be used as the rollover plan at the completion of a contract.\n",
          "type" : "string"
        },
        "contract_rollover_rate_sched" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractRolloverRateSched"
          }
        }
      }
    },
    "PlanService" : {
      "type" : "object",
      "description" : "A multidimensional array of Services for this plan\\n",
      "properties" : {
        "service_no" : {
          "description" : "The services for this plan\n",
          "type" : "integer",
          "format" : "int64"
        },
        "service_desc" : {
          "description" : "Description of this service",
          "type" : "string"
        },
        "is_recurring_ind" : {
          "description" : "Indicates whether or not this service is a recurring service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_usage_based_ind" : {
          "description" : "Indicates whether or not this service is a usage-based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type" : {
          "description" : "The usage type supported by this usage based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "taxable_ind" : {
          "description" : "Indicates whether or not this service is taxable\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_tax_ind" : {
          "description" : "Indicates whether or not this service is a tax-based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_arrears_ind" : {
          "description" : "Indicates whether or not this service is an arrears-based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_setup_ind" : {
          "description" : "Indicates whether or not this service is a setup-based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_misc_ind" : {
          "description" : "Indicates whether or not this service is a miscellaneous service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_donation_ind" : {
          "description" : "Indicates whether or not this service is a donation-based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_order_based_ind" : {
          "description" : "Indicates whether or not this service is an order-based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_cancellation_ind" : {
          "description" : "Indicates whether or not this service is a cancellation- based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "coa_id" : {
          "description" : "Chart of accounts ID",
          "type" : "string"
        },
        "ledger_code" : {
          "description" : "This field is deprecated in favor of coa_id",
          "type" : "string"
        },
        "client_coa_code" : {
          "description" : "The client-defined override for coa_id",
          "type" : "string"
        },
        "display_ind" : {
          "description" : "Indicates if this service is displayable or not",
          "type" : "integer",
          "format" : "int64"
        },
        "tiered_pricing_rule" : {
          "description" : "The Tiered Pricing Rule",
          "type" : "integer",
          "format" : "int64"
        },
        "is_min_fee_ind" : {
          "description" : "Indicates whether or not this service is a minimum fee.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "The client-defined Service ID for this plan.\n",
          "type" : "string"
        },
        "usage_type_cd" : {
          "description" : "Denotes which usage type to record.",
          "type" : "string"
        },
        "all_service_supp_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllServiceSuppField"
          }
        },
        "fulfillment_based_ind" : {
          "description" : "Indicates if the service is Fulfillment Based or not.",
          "type" : "integer",
          "format" : "int64"
        },
        "svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the service.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_svc_location_id" : {
          "description" : "The client-defined location identifier for the origin location for the service.",
          "type" : "string"
        },
        "svc_location_name" : {
          "description" : "The name of the origin location for the service.",
          "type" : "string"
        },
        "svc_location_company_name" : {
          "description" : "Company name of the service location.",
          "type" : "string"
        },
        "svc_location_address1" : {
          "description" : "First address line of the service location.",
          "type" : "string"
        },
        "svc_location_address2" : {
          "description" : "Second address line of the service location. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "svc_location_address3" : {
          "description" : "Third address line of the service location.",
          "type" : "string"
        },
        "svc_location_city" : {
          "description" : "City of the service location.",
          "type" : "string"
        },
        "svc_location_locality" : {
          "description" : "Locality of the service location.",
          "type" : "string"
        },
        "svc_location_state_prov" : {
          "description" : "State or Province of the service location. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries.  Use the locality field for other countries.",
          "type" : "string"
        },
        "svc_location_country" : {
          "description" : "Country of the location contact. The ISO-compliant 2-character country code abbreviation in uppercase.",
          "type" : "string"
        },
        "svc_location_postal_cd" : {
          "description" : "Postal/Zip code for the service location address.",
          "type" : "string"
        },
        "plan_service_rates" : {
          "description" : "Represents the rates for the default rate schedule for the default currency for the plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanServiceRate"
          }
        },
        "all_plan_service_rates" : {
          "description" : "All rates for all rate schedules and currencies for this plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllPlanServiceRate"
          }
        },
        "usage_type_name" : {
          "description" : "The human-readable name of this usage type\n",
          "type" : "string"
        },
        "usage_type_desc" : {
          "description" : "The long description of this usage type\n",
          "type" : "string"
        },
        "usage_type_code" : {
          "description" : "Client-assigned identifier for the type of usage being recorded.\n",
          "type" : "string"
        },
        "usage_unit_label" : {
          "description" : "The display-level description of the units this usage represents.\n",
          "type" : "string"
        },
        "apply_usage_rates_daily" : {
          "description" : "Indicates whether or not this usage-based service is rated on a daily basis.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "KillSessionMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetAcctBalanceMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_balance_m" ],
          "default" : "get_acct_balance_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "EditAcctPlanQueuedChangesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "queued_changes" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueuedChange"
          }
        },
        "invoice_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceInfo"
          }
        },
        "proration_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProrationDetail"
          }
        },
        "billing_errors" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingError"
          }
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned here. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        }
      }
    },
    "CollectFromAccountMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "collect_from_account_m" ],
          "default" : "collect_from_account_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "amount_to_collect" : {
          "description" : "The amount of money to collect from the account. If invoice_no, master_plan_instance_no, or client_master_plan_instance_id is provided, then amount_to_collect is not required. If no invoice(s) or master plan instance(s) are specified, then amount_to_collect is required.\n",
          "type" : "number"
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "Client-defined ID for this payment method.\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "specific_charge_transaction_id" : {
          "description" : "A list of specific charges, see below",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SpecificChargeTransactionId"
          }
        },
        "alt_pay_method" : {
          "description" : "If you want to use the account's current form of payment, leave this field empty. If you want to use an alternate credit card, enter '1' in this field.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_number" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "bank_acct_num" : {
          "description" : "The bank account number.\n",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_zip" : {
          "description" : "Zip Code of the billing contact",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_extension" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_extension" : {
          "description" : "Work phone extenstion of the billing contact",
          "type" : "string"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "bank_acct_type" : {
          "description" : "The type of bank account being used.",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "alt_client_acct_group_id" : {
          "description" : "One-time collections account group  to use for this specific call.  Default collections group on the account is not changed.",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "soft_descriptor" : {
          "description" : "Transaction description shown on the buyer's statement that displays a Merchant Name or Item Description typically. This field will be ignored if not supported/certified by the payment processor.\n",
          "type" : "string"
        },
        "soft_descriptor_customer_service" : {
          "description" : "Transaction description shown on the buyer's statement that displays a City for Card Present transactions or a Phone Number for Card Not Present transactions. This field will be ignored if not supported/certified by the payment processor.\n",
          "type" : "string"
        },
        "payment_application_method" : {
          "description" : "Possible values are 1, 2, or NULL. 1 is FIFO.  2 is First-DUE-First-Out.  If NULL, defaults to FIFO",
          "type" : "integer",
          "format" : "int64"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "specific_invoices_list" : {
          "description" : "A list of specific invoice charges, see below",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SpecificInvoicesList"
          }
        },
        "specific_master_plan_instances_list" : {
          "description" : "A list of specific master plan instance charges, see below",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SpecificMasterPlanInstancesList"
          }
        },
        "fraud_filter" : {
          "description" : "Enable Fraud Filtering.  This is supported if your payment processor supports this feature and has been certified with Aria.  If no values are provided, the system will default to 2.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "GetEmailTemplatesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_email_templates_m" ],
          "default" : "get_email_templates_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "filter_template_class" : {
          "description" : "Filter by Aria class assigned to each email template",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "GetClientPlansAllMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "all_client_plan_dtls" : {
          "description" : "A multidimensional array containing all client plans.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllClientPlanDtl"
          }
        }
      }
    },
    "CreateOrderMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "create_order_m" ],
          "default" : "create_order_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Client No",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Account No",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "client_plan_instance_id" : {
          "description" : "Client-defined id of the Master Plan Instance to which the order item is associated and should be billed under.",
          "type" : "string"
        },
        "plan_instance_no" : {
          "description" : "Aria-assigned number of the Master Plan Instance to which the order item is associated and should be billed under.",
          "type" : "integer",
          "format" : "int64"
        },
        "order_line_items" : {
          "description" : "This is an array of line items appearing on the order. The array elements for this argument immediately follow and are indicated as elements with a right-arrow icon.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderLineItem"
          }
        },
        "bill_immediately" : {
          "description" : "Determines if the account is billed immediately.  If no value is defined (the field is null), then billing timing is determined by the client parameter AUTO BILL ORDERS. Note: The AUTO BILL ORDERS default setting is True, which bills immediately.  Contact Customer Support for more information about the AUTO BILL ORDERS parameter.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_seq" : {
          "description" : "The unique identifier of the bill sequence number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_order_id" : {
          "description" : "This is the client-assigned order identifier.",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "alt_pay_method" : {
          "description" : "If you wish to use an alternate credit card for a one-time payment, enter '1' for this value. If you wish to use the account's current form of payment, leave this value empty. \n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_number" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "bank_acct_num" : {
          "description" : "The bank account number.\n",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_zip" : {
          "description" : "Zip Code of the billing contact",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_extension" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_extension" : {
          "description" : "Work phone extenstion of the billing contact",
          "type" : "string"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "bank_acct_type" : {
          "description" : "The type of bank account being used.",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "coupon_cd" : {
          "description" : "A coupon code to apply to this order",
          "type" : "string"
        },
        "alt_client_acct_group_id" : {
          "description" : "The alternate collections account group to use with a passed alternate form of payment",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "soft_descriptor" : {
          "description" : "Transaction description shown on the buyer's statement that displays a Merchant Name or Item Description typically. This field will be ignored if not supported/certified by the payment processor.\n",
          "type" : "string"
        },
        "soft_descriptor_customer_service" : {
          "description" : "Transaction description shown on the buyer's statement that displays a City for Card Present transactions or a Phone Number for Card Not Present transactions. This field will be ignored if not supported/certified by the payment processor.\n",
          "type" : "string"
        },
        "alt_inv_template_no" : {
          "description" : "The statement template to use when generating a statement for this order",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_inv_template_id" : {
          "description" : "The client-defined statement template to use when generating a statement for this order",
          "type" : "string"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "statement_message" : {
          "description" : "Alternate contact details for orders.",
          "type" : "string"
        },
        "fulfilled_date" : {
          "description" : "Date on which order is fulfilled.",
          "type" : "string"
        },
        "order_comments" : {
          "description" : "Comments for this order",
          "type" : "string"
        },
        "nso_po_num" : {
          "description" : "Purchase order number assigned to the one-time order.",
          "type" : "string"
        },
        "contacts" : {
          "description" : "List of contacts to be created on the account. Note that contacts not used as an account contact, billing contact, or statement contact will be saved on the account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contact"
          }
        },
        "existing_pay_method_cvv" : {
          "description" : "Sends the CVV value of the current credit card on file.\n",
          "type" : "string"
        },
        "fraud_filter" : {
          "description" : "Enable Fraud Filtering.  This is supported if your payment processor supports this feature and has been certified with Aria.  If no values are provided, the system will default to 2.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "auth_key" ]
    },
    "ClientCountry" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "country_cd" : {
          "description" : "The ISO country code for this country",
          "type" : "string"
        },
        "country_native" : {
          "description" : "The country name in the native language of that country",
          "type" : "string"
        },
        "country_english" : {
          "description" : "The English (American) standard name for that country",
          "type" : "string"
        },
        "iso_3166_1n" : {
          "description" : "The ISO-3166-1n country code for this country",
          "type" : "string"
        },
        "currency_cd" : {
          "description" : "The default currency code for this country",
          "type" : "string"
        }
      }
    },
    "GetUseridHasOrderedSkuMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "ordered_ind" : {
          "description" : "Boolean value indicating the SKU has been ordered",
          "type" : "integer",
          "format" : "int64"
        },
        "billed_ind" : {
          "description" : "Boolean value indicating the SKU has been billed to the customer.",
          "type" : "integer",
          "format" : "int64"
        },
        "paid_ind" : {
          "description" : "Boolean value indicating the product or service has been paid for.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAcctGroupsByAcctMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_groups" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctGroup"
          }
        }
      }
    },
    "AllClientAvailPlan" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "parent_plan_instance_no" : {
          "description" : "Aria-assigned unique parent plan Instance identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_client_plan_instance_id" : {
          "description" : "Parent plans Client-defined Plan Instance ID",
          "type" : "string"
        },
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client assigned unique plan identifier",
          "type" : "string"
        },
        "plan_name" : {
          "description" : "Plan Name",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "Text description of this plan",
          "type" : "string"
        },
        "billing_ind" : {
          "description" : "Indicates whether or not this plan is billable",
          "type" : "integer",
          "format" : "int64"
        },
        "display_ind" : {
          "description" : "Indicates whether or not the plan is marked as \"displayable\". 0 means not displayable. 1 means displayable.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_months" : {
          "description" : "Number of months in which the account will change from the current plan to the pre-defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_no" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_rollover_plan_id" : {
          "description" : "Pre-defined client rollover plan ID to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined client rollover plan ID.\n",
          "type" : "string"
        },
        "early_cancel_fee" : {
          "description" : "Fee charged for early cancellations.",
          "type" : "number"
        },
        "early_cancel_min_months" : {
          "description" : "Number of months during which early cancellation fees would apply on plan cancellation.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "suspension_period" : {
          "description" : "Pre-defined period in days in which an account will degrade to Suspended status (-1) if action is not taken such as a plan or status change.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "new_plan_status" : {
          "description" : "The status code to assert for the new account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status" : {
          "description" : "Status used for the master plan instance at the completion of the rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_days" : {
          "description" : "Number of days in which an account will change from the initial status code to the pre-defined rollover status code.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_months" : {
          "description" : "Initial free months.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_2_assign_on_susp" : {
          "description" : "Plan to assign when an account on this plan is suspended.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_2_assign_on_susp" : {
          "description" : "Client-defined Plan identifier to assign when an account on this plan is suspended.\n",
          "type" : "string"
        },
        "default_notify_method" : {
          "description" : "Default notification method given to an account that is assigned to this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "prepaid_ind" : {
          "description" : "Indicates whether or not this plan is prepaid",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "rollover_plan_duration" : {
          "description" : "Duration of the plan rollover period (used in conjunction with rollover_plan_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_uom_cd" : {
          "description" : "Units associated with the duration of the plan rollover period (used in conjunction with rollover_plan_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_duration" : {
          "description" : "Duration of the initial free period (used in conjunction with init_free_period_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_uom_cd" : {
          "description" : "Units associated with the duration of the initial free period (used in conjunction with init_free_period_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_plan_status_cd" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_duration" : {
          "description" : "Duration of the plan status rollover period, after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status (used in conjuction with rollover_plan_status_uom_cd).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_uom_cd" : {
          "description" : "Units associated with the duration of the plan status rollover period after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status. (used in conjunction with rollover_plan_status_duration).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_cd" : {
          "description" : "Status used for the master plan instance at the completion of the plan status rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_rate_schedules_details" : {
          "description" : "An array of the rate schedules for the requested plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanRateSchedulesDetail"
          }
        },
        "contract_rollover_plan_no" : {
          "description" : "Pre-defined plan to be used as the rollover plan at the completion of the contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_plan_id" : {
          "description" : "Client-defined ID of the pre-defined plan to be used as the rollover plan at the completion of a contract.\n",
          "type" : "string"
        },
        "contract_rollover_rate_sched" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractRolloverRateSched"
          }
        }
      }
    },
    "PlanServiceUpdate" : {
      "type" : "object",
      "description" : "List of services associated with the plan being assigned or updated on the account.\\n",
      "properties" : {
        "service_no" : {
          "description" : "The Aria-assigned unique identifier for the service associated with the plan instance. Either this field, or client_service_id is required to map plan services to the plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "The client-defined identifier for the service associated with the plan instance.\n",
          "type" : "string"
        },
        "svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no will take precedence.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_svc_location_id" : {
          "description" : "The client-defined unique identifier for the origin location for the service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no will take precedence.\n",
          "type" : "string"
        },
        "dest_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the destination contact for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations. If both dest_contact_idx and dest_contact_no are provided, dest_contact_no will take precedence.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "dest_contact_idx" : {
          "description" : "For non-persistent referencing of a destination contact in the contacts array within the API request. Depending on taxation configuration, the address associated with this destination contact may be used for tax calculations. If both dest_contact_idx and dest_contact_no are provided, dest_contact_no will take precedence.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetPaypalAvsStatusMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_paypal_avs_status_m" ],
          "default" : "get_paypal_avs_status_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key to be passed with each method call for authenticating the validity of the requestor.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "email" : {
          "description" : "PayPal email address of the PayPal member.",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "Billing group number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined unique identifier for billing group.",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "email" ]
    },
    "AssignPlanUnitInstance" : {
      "type" : "object",
      "description" : "Array of plan unit instances to be assigned for this account. This array is relevant only when assigning a new plan to an account (plan_directive = 1) or when increasing the number of units purchased for a given plan instance (plan_directive = 3 and plan_units specified in this API request is greater than what is currently on the account). Any existing plan unit instances for a given plan instance can be updated using the update_plan_unit_instances array. In all other scenarios, the inputs provided in this array will be ignored. Plan unit instances in this array should be applied using a first-in-first-associated methodology. 1) If for example fewer plan unit instances are specified than the number of plan units being assigned, then the remaining plan unit instances will not have a client-defined plan unit instance ID. 2) If for example the number of plan unit instances exceeds the number of plan units being assigned, then the extra client-defined plan unit instance ids will be ignored.\\n",
      "properties" : {
        "client_plan_unit_inst_id" : {
          "description" : "Client-assigned identifier for the plan unit instance.\n",
          "type" : "string"
        },
        "plan_unit_inst_idx" : {
          "description" : "Non-persistent reference for a plan unit instance (being created within the API request) to cross-reference for plan unit instance fields.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_unit_instance_services" : {
          "description" : "Array of plan unit instance services.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstanceService"
          }
        }
      }
    },
    "UpdateAcctPlanMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Textual description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "proration_result_amount" : {
          "description" : "The currency amount of any resulting proration action performed as a result of the requested plan change. For plan assignments with an assignment directive of '1' (perform on anniversary date), or '2' (honor client default proration action) when the default configuration is to not do proration, or '3' (force no proration), the value returned in this field will always be '0'. When proration is performed the value returned in this field will either be a positive currency value (indicating a resulting charge to the account) or a negative currency value (indicating a credit to the account). If the value passed in field do_write is false then any positive or negative value returned in this field is notational only, demonstrating what proration effect would be applied to the account if the requested plan assignment/de-assignment were to be actually performed.\n",
          "type" : "number"
        },
        "collection_error_code" : {
          "description" : "If a collection is attempted, returns the error code associated with the collection.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_error_msg" : {
          "description" : "The error message associated with collection_error_code.\n",
          "type" : "string"
        },
        "statement_error_code" : {
          "description" : "The error code if statement generation fails.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_error_msg" : {
          "description" : "The text message associated with 'statement_error_code'\n",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor\n",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "expectd_activation_fee" : {
          "description" : "The activation fee the account holder can expect based on the activation fees of the plans on this invoice",
          "type" : "number"
        },
        "expectd_mthly_recurring_cost" : {
          "description" : "Regardless of the billing interval on the account, the monthly recurring cost of this change\n",
          "type" : "number"
        },
        "expectd_annu_recurring_cost" : {
          "description" : "",
          "type" : "number"
        },
        "acct_plan_line_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctPlanLineItem"
          }
        },
        "total_charges_before_tax" : {
          "description" : "Total amount to be charged to the account before taxes have been calculated.",
          "type" : "number"
        },
        "total_tax_charges" : {
          "description" : "Total taxes as calculated for the amount of the transaction.",
          "type" : "number"
        },
        "total_charges_after_tax" : {
          "description" : "Total amount to be charged to the account after taxes have been calculated.",
          "type" : "number"
        },
        "total_credit" : {
          "description" : "The total amount of the credit to be applied to the account",
          "type" : "number"
        },
        "total_tax_credit" : {
          "description" : "The tax amount of the credit to be applies",
          "type" : "number"
        },
        "total_credit_before_tax" : {
          "description" : "The credit to be applied before tax is taken into account",
          "type" : "number"
        },
        "total" : {
          "description" : "The grand total of this invoice",
          "type" : "number"
        },
        "proration_tax_amount" : {
          "description" : "The pro-rated tax credit amount",
          "type" : "number"
        },
        "proration_credit_result_amount" : {
          "description" : "The total pro-rated credit amount",
          "type" : "number"
        },
        "proration_credit_amount" : {
          "description" : "The non-tax pro-rated credit amount",
          "type" : "number"
        }
      }
    },
    "UpdateAcctPlanUnitInstanceMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "out_acct_no" : {
          "description" : "Aria generated unique identifier for the account",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_acct_id" : {
          "description" : "This is the client-assigned identifier for the account.",
          "type" : "string"
        },
        "out_plan_unit_inst_no" : {
          "description" : "Aria unique Plan Unit Instance Number.",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_plan_unit_inst_id" : {
          "description" : "Client-assigned identifier for the plan unit instance.",
          "type" : "string"
        },
        "proration_result_amount" : {
          "description" : "The currency amount of any resulting proration action performed as a result of the fulfillment based service unit assignment. When proration is performed the value returned in this field will be a positive currency value (indicating a resulting charge to the account). If the value passed in field do_write is false then any positive value returned in this field is notational only, demonstrating what proration effect would be applied to the account if the requested fulfillement based plan unit instance were to be actually assigned.\n",
          "type" : "number"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_line_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceLineItem"
          }
        },
        "collection_error_code" : {
          "description" : "If a collection is attempted, returns the error code associated with the collection.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_error_msg" : {
          "description" : "The error message associated with collection_error_code.\n",
          "type" : "string"
        },
        "statement_error_code" : {
          "description" : "The error code generated when attempting to create the statement resulting from this call, if any",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_error_msg" : {
          "description" : "The text message associated with 'statement_error_code'",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment id",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor",
          "type" : "string"
        },
        "total_charges_before_tax" : {
          "description" : "Total amount to be charged to the account before taxes have been calculated.",
          "type" : "number"
        },
        "total_tax_charges" : {
          "description" : "Total taxes as calculated for the amount of the transaction.",
          "type" : "number"
        },
        "total_charges_after_tax" : {
          "description" : "Total amount to be charged to the account after taxes have been calculated.'",
          "type" : "number"
        },
        "total_credit" : {
          "description" : "The total amount of the credit to be applied to the account",
          "type" : "number"
        },
        "total_tax_credit" : {
          "description" : "The tax amount of the credit to be applies",
          "type" : "number"
        },
        "total_credit_before_tax" : {
          "description" : "The credit to be applied before tax is taken into account",
          "type" : "number"
        },
        "total" : {
          "description" : "The grand total of this invoice",
          "type" : "number"
        },
        "expectd_monthly_rec_cost" : {
          "description" : "The predicted monthly recurring cost of the items and plans on this invoice",
          "type" : "number"
        },
        "expectd_annual_rec_cost" : {
          "description" : "The predicted annual recurring cost of the items and plans on this invoice",
          "type" : "number"
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned here. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        }
      }
    },
    "RefundablePayment" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "payment_transaction_id" : {
          "description" : "The transaction this payment applies to",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_date" : {
          "description" : "The date of the payment",
          "type" : "string"
        },
        "payment_description" : {
          "description" : "The description of the payment",
          "type" : "string"
        },
        "payment_amount" : {
          "description" : "The amount of the payment",
          "type" : "number"
        },
        "payment_refunded_amount" : {
          "description" : "If any refunds have been booked against this payment, the sum of all refunds",
          "type" : "number"
        },
        "payment_refundable_amount" : {
          "description" : "The amount of this payment remaining to be refunded",
          "type" : "number"
        }
      }
    },
    "ProcFraudFilteringInfo" : {
      "type" : "object",
      "description" : "Fraud Filtering Response returned from Payment processor.",
      "properties" : {
        "proc_fraud_country_status" : {
          "description" : "Fraud country status provided by the Payment processor.",
          "type" : "string"
        },
        "proc_fraud_country_code" : {
          "description" : "Fraud country code provided by the Payment processor.",
          "type" : "string"
        }
      }
    },
    "GetRefundDetailsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "refund_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RefundDetail"
          }
        }
      }
    },
    "MasterPlansDtlBySuppField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "The unique ID of this plan",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The short name of this plan",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "The long description of this plan",
          "type" : "string"
        },
        "billing_ind" : {
          "description" : "Whether or not this plan is currently billable",
          "type" : "integer",
          "format" : "int64"
        },
        "display_ind" : {
          "description" : "Whether or not this plan is to be displayed to the end-users",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_months" : {
          "description" : "Number of months in which the account will change from the current plan to the pre-defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_no" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "early_cancel_fee" : {
          "description" : "Fee charged for early cancellations.",
          "type" : "number"
        },
        "early_cancel_min_months" : {
          "description" : "Number of months during which early cancellation fees would apply on plan cancellation.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "suspension_period" : {
          "description" : "Pre-defined period in days in which an account will degrade to Suspended status (-1) if action is not taken such as a plan or status change.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "new_acct_status" : {
          "description" : "The status code to assert for the new account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_acct_status" : {
          "description" : "Default status for new accounts created on this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_acct_status_days" : {
          "description" : "Number of days in which an account will change from the initial status code to the pre-defined rollover status code.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_months" : {
          "description" : "Initial free months.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_2_assign_on_susp" : {
          "description" : "Plan to assign when an account on this plan is suspended.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "default_notify_method" : {
          "description" : "Default notification method given to an account that is assigned to this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "prepaid_ind" : {
          "description" : "Indicates whether or not this plan is prepaid",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for which to query available child plans",
          "type" : "string"
        },
        "client_rollover_plan_id" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined client rollover plan ID.\n",
          "type" : "string"
        },
        "client_plan_id_2_assign_on_susp" : {
          "description" : "Client-defined Plan ID to assign when an account on this plan is suspended.\n",
          "type" : "string"
        },
        "proration_invoice_timing_cd" : {
          "description" : "Indicates whether to defer the pro-rated charges to the next anniversary date or to create a seperate invoice immediately.\n",
          "type" : "string"
        },
        "rollover_plan_duration" : {
          "description" : "Duration of the plan rollover period (used in conjunction with rollover_plan_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_uom_cd" : {
          "description" : "Units associated with the duration of the plan rollover period (used in conjunction with rollover_plan_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_duration" : {
          "description" : "Duration of the initial free period (used in conjunction with init_free_period_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_uom_cd" : {
          "description" : "Units associated with the duration of the initial free period (used in conjunction with init_free_period_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_plan_status_cd" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_duration" : {
          "description" : "Duration of the plan status rollover period, after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status (used in conjuction with rollover_plan_status_uom_cd).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_uom_cd" : {
          "description" : "Units associated with the duration of the plan status rollover period after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status. (used in conjunction with rollover_plan_status_duration).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_cd" : {
          "description" : "Status used for the master plan instance at the completion of the plan status rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_rate_schedules_details" : {
          "description" : "An array of the rate schedules for the requested plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanRateSchedulesDetail"
          }
        },
        "contract_rollover_plan_no" : {
          "description" : "Pre-defined plan to be used as the rollover plan at the completion of the contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_plan_id" : {
          "description" : "Client-defined ID of the pre-defined plan to be used as the rollover plan at the completion of a contract.\n",
          "type" : "string"
        },
        "contract_rollover_rate_sched" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractRolloverRateSched"
          }
        },
        "plan_translation_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanTranslationInfo"
          }
        }
      }
    },
    "CouponCodeUpdate" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "coupon_cd" : {
          "description" : "Note that only those coupons with Coupon Applicablity Scope of Master Plan Instance or Account and Master Plan Instance should be accepted.\n",
          "type" : "string"
        },
        "coupon_directive" : {
          "description" : "Indicates what operation to perform on each coupon specified.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AcctCoupon" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "acct_coupon_cd" : {
          "description" : "The coupon codes to assign to this account, if any",
          "type" : "string"
        }
      }
    },
    "GetPlansByPromoCodeAllMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_plans_by_promo_code_all_m" ],
          "default" : "get_plans_by_promo_code_all_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "promo_code" : {
          "description" : "This is the code provided the client  and used by the account holder during registration or when executing a transaction.A promotion generally provides access to a custom set of reduced-rate plans.\n",
          "type" : "string"
        },
        "include_rs_summary" : {
          "description" : "If set to \"true\", will retrieve all of the rates and rate schedules associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "retrieve_bundled_nso" : {
          "description" : "If set to \"true\", will retrieve all of the bundled inventory items associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "retrieve_included_nso" : {
          "description" : "If set to \"true\", will retrieve all of the inventory items associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "include_translations" : {
          "description" : "Setting this flag as True will fetch the translated fields in all the locales defined. If not passed it defaults to False.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "EligibleServicePlanDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "The plan numbers that is eligible to apply recurring credit.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The name of the eligible plan number.",
          "type" : "string"
        },
        "service_no" : {
          "description" : "The service numbers eligible for recurring credit",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name" : {
          "description" : "The name of the eligible service.",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "The client-defined plan IDs that is eligible to apply recurring credit.",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "The client-defined service ids eligible for recurring credit",
          "type" : "string"
        }
      }
    },
    "CollectFromAccountMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor\n",
          "type" : "string"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "collection_errors" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CollectionError"
          }
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        }
      }
    },
    "NsoItemArray" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "item_no" : {
          "description" : "NSO / inventory item number. This field is required when creating an NSO bundling orde\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_sku" : {
          "description" : "",
          "type" : "string"
        },
        "item_units" : {
          "description" : "Quantity of the NSO / inventory item being purchased.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "item_svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the item (NSO) being purchased. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no will take precedence..\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_svc_location_id" : {
          "description" : "The client-defined unique identifier for the origin location for the item (NSO) being purchased. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no will take precedence.\n",
          "type" : "string"
        },
        "item_dest_contact_idx" : {
          "description" : "For non-persistent referencing of a destination contact in the contacts array within the API request. Depending on taxation configuration, the address associated with this destination contact may be used for tax calculations.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "item_dest_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the destination contact for the item (NSO) being purchased. Depending on taxation configuration, this address may be used for tax calculations. If both item_dest_contact_idx and item_dest_contact_no are provided, item_dest_contact_no will take precedence.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CartInvoiceLineItem" : {
      "type" : "object",
      "description" : "All of the items on this order. If do_write was FALSE, these are the line items which would be on the eventual invoice",
      "properties" : {
        "line_no" : {
          "description" : "Sequential line item",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no" : {
          "description" : "Service number shown on the invoice",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name" : {
          "description" : "Service name shown on the invoice",
          "type" : "string"
        },
        "service_is_tax_ind" : {
          "description" : "Whether or not this line item represents a tax charge",
          "type" : "integer",
          "format" : "int64"
        },
        "line_units" : {
          "description" : "Number of units of the service this line item represents",
          "type" : "number"
        },
        "rate_per_unit" : {
          "description" : "Charge per unit",
          "type" : "number"
        },
        "line_amount" : {
          "description" : "Subtotal for this particular line",
          "type" : "number"
        },
        "description" : {
          "description" : "Long description of this line",
          "type" : "string"
        },
        "date_range_start" : {
          "description" : "(Deprecated) The starting date range for this line item",
          "type" : "string"
        },
        "date_range_end" : {
          "description" : "(Deprecated) The ending date range for this line item",
          "type" : "string"
        },
        "usage_type_no" : {
          "description" : "If this line represents a usage-based charge, the client-defined usage type number this line represents",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_no" : {
          "description" : "The unique plan ID associated with this line",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The name of the plan associated with this line",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "The client-defined Service ID shown in the invoice.",
          "type" : "string"
        },
        "usage_type_cd" : {
          "description" : "An array containing usage_type_cd(s) to denote which usage type(s) to record.",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID associated with this invoice.",
          "type" : "string"
        },
        "ref_charge_line_no" : {
          "description" : "The reference charge line number to indicate the item to which the discount applies.",
          "type" : "integer",
          "format" : "int64"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the account or plan instance.",
          "type" : "string"
        },
        "bill_from_address_no" : {
          "description" : "Address sent as the bill-from address to the tax engine for tax calculations. Depending on the taxation configuration, this parameter may return the Aria-assigned unique identifier of the service location for the invoice line item. Note that service locations can be associated with a service for a given plan instance on an account, with an item (NSO) purchased as part of a one-time order, or with a service as defined in the product catalog.",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_from_address_no" : {
          "description" : "Address sent as the ship-from address to the tax engine for tax calculations. Depending on the taxation configuration, this parameter may return the Aria-assigned unique identifier of the service location for the invoice line item. Note that service locations can be associated with a service for a given plan instance on an account, with an item (NSO) purchased as part of a one-time order, or with a service as defined in the product catalog.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_to_address_no" : {
          "description" : "Address sent as the bill-to address to the tax engine for tax calculations. This parameter will return the Aria-assigned unique identifier of the contact on the account used as the bill-to address for the invoice line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_to_address_no" : {
          "description" : "Address sent as the ship-to address to the tax engine for tax calculations. This parameter will return the Aria-assigned unique identifier of the contact on the account used as the ship-to address for the invoice line item.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAcctContactsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_contacts_m" ],
          "default" : "get_acct_contacts_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_group_no" : {
          "description" : "Aria-defined billing group number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined billing group identifier",
          "type" : "string"
        },
        "include_unused_contacts" : {
          "description" : "Determines whether or not contacts saved on the account that are not currently used as an account contact, billing contact, or statement contact will be included in the API response.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "CreateInstanceContractMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "contract_no" : {
          "description" : "Aria-assigned unique contract identifier",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetUsageHistoryMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_usage_history_m" ],
          "default" : "get_usage_history_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "specified_usage_type_no" : {
          "description" : "The Aria-assigned usage type number to use when searching for usage history records.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "date_range_start" : {
          "description" : "The start-date of the given date range in yyyy-mm-dd hh24:mi:ss format. Timestamp is optional and will default to 00:00 hrs.\n",
          "type" : "string"
        },
        "date_range_end" : {
          "description" : "The end-date of the given date range in yyyy-mm-dd hh24:mi:ss format. Timestamp is optional and will default to 00:00 hrs.\n",
          "type" : "string"
        },
        "specified_usage_type_code" : {
          "description" : "Optional client-defined usage type code",
          "type" : "string"
        },
        "usage_qualifier_1" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageQualifier1"
          }
        },
        "usage_qualifier_2" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageQualifier2"
          }
        },
        "usage_qualifier_3" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageQualifier3"
          }
        },
        "usage_qualifier_4" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageQualifier4"
          }
        },
        "limit" : {
          "description" : "Limits the number of records returned by the API.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "offset" : {
          "description" : "The number of records to skip.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned identifier for the invoice for which you are retrieving data. An invoice number is required if no date_range_start is specified.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_line_item" : {
          "description" : "Returns all of the usage records with a usage type that matches that of the invoice line item specified. Note that the invoice_no input is required with invoice_line_item.",
          "type" : "integer",
          "format" : "int64"
        },
        "retrieve_excluded_usage" : {
          "description" : "Use this field to include usage records that have been permanently excluded from billing",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetAllClientReceiptIdsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "client_receipt" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClientReceipt"
          }
        }
      }
    },
    "MasterPlansAssigned" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_no" : {
          "description" : "Unique plan-instance number for each assigned master plan",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined ID for each assigned master plan",
          "type" : "string"
        },
        "nso_order_no" : {
          "description" : "Unique identifier for an order that is created for bundled NSOs",
          "type" : "integer",
          "format" : "int64"
        },
        "nso_order_status_label" : {
          "description" : "Status label for this order",
          "type" : "string"
        },
        "plan_unit_instance_details" : {
          "description" : "Array of plan unit instances",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstanceDetail"
          }
        },
        "supp_plans_assigned" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppPlansAssigned"
          }
        },
        "out_contract" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OutContract"
          }
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned here, whereas the Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        }
      }
    },
    "GetClientItemsBasicMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "items_basic_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ItemsBasicDetail"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "ClearRegUssParamsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "RemoveAcctFromGroupMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "remove_acct_from_group_m" ],
          "default" : "remove_acct_from_group_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "group_no" : {
          "description" : "The Aria-assigned account group identifier from which the account will be removed. If client_acct_group_id is valued, this value must be blank.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_group_id" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account. If group_no is  valued, this value must be blank. If group_no is left null, this argument must be the client-assigned group ID to remove.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "ContractDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "contract_no" : {
          "description" : "Unique ID of the contract assigned to this account",
          "type" : "integer",
          "format" : "int64"
        },
        "client_contract_id" : {
          "description" : "Client-assigned unique contract identifier",
          "type" : "string"
        },
        "contract_plan_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractPlanDetail"
          }
        },
        "contract_scope" : {
          "description" : "Specifies the scope of plan subscription coverage enforced by the contract\n",
          "type" : "string"
        }
      }
    },
    "CancelAcctPlanMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "cancel_acct_plan_m" ],
          "default" : "cancel_acct_plan_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined identifier for the master plan instance.",
          "type" : "string"
        },
        "assignment_directive" : {
          "description" : "The rule to be applied to this assignment request, governing the proration rule is applied. Default behavior is to make the plan change (assign/deassign a plan to an account, change units on an existing plan, etc.) immediately based on client-defined default proration rule, resulting in appropriate prorated charge and credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "alt_proration_start_date" : {
          "description" : "The date, in yyyy-mm-dd format, from which the proration calculations begin. If this field is NULL, then the proration calculations begin from the current date. This date cannot be before the beginning of the current billing period.\n",
          "type" : "string"
        },
        "effective_date" : {
          "description" : "If the assignment directive is for a future date assignment, this is the date, in yyyy-mm-dd format, on which the plan change will be executed. If this field is NULL, then the plan change will not happen until it is manually executed or until the effective_date is updated.\n",
          "type" : "string"
        },
        "offset_interval" : {
          "description" : "If assigning a change on an anniversary day, the number of billing periods by which to delay that change. If the new plan is different from the old plan, and this value is greater than 0, then the billing date continues to be the annniversary date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_unbilled_usage" : {
          "description" : "Specifies whether to invoice the unbilled usage if a plan is terminated in the middle of a billing period.\n",
          "type" : "string"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "proration_invoice_timing" : {
          "description" : "Determines whether to create a separate invoice for prorated charges immediately, or defer to the next anniversary date. Note that this will override the Proration Invoice Timing configuration saved with the plan in the product catalog.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "SetSessionAuthMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "session_id" : {
          "description" : "Client-assigned identifier for the application session.",
          "type" : "string"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "InvoiceReversal" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_bill_date" : {
          "description" : "The date the invoice was originally billed.",
          "type" : "string"
        },
        "invoice_line_no" : {
          "description" : "The line number containing a reversal for this refund.",
          "type" : "integer",
          "format" : "int64"
        },
        "total_line_debit" : {
          "description" : "The total invoice line item value that was originally billed.",
          "type" : "number"
        },
        "reversed_line_amount" : {
          "description" : "The amount refunded for this specific line item.",
          "type" : "number"
        },
        "reversed_line_start_date" : {
          "description" : "The effective start date of the original line item that is written off if it was a recurring fee service. The date is in the format yyyy-mm-dd.\n",
          "type" : "string"
        },
        "reversed_line_end_date" : {
          "description" : "The effective end date of the original line item that is written off if it was a recurring fee service. The date is in the format yyyy-mm-dd.\n",
          "type" : "string"
        },
        "transaction_id" : {
          "description" : "Id of the specific invoice transaction that was reversed\n",
          "type" : "string"
        },
        "reversal_date" : {
          "description" : "Date and time of the reversal\n",
          "type" : "string"
        },
        "service_no" : {
          "description" : "Service number of the invoice transaction\n",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "Client-defined service ID for the invoice transaction_amount\n",
          "type" : "string"
        },
        "transaction_comments" : {
          "description" : "Comments, if any, on the original invoice transaction\n",
          "type" : "string"
        }
      }
    },
    "ClassItem" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "item_no" : {
          "description" : "The inventory item number returned from the API query.",
          "type" : "integer",
          "format" : "int64"
        },
        "item_label" : {
          "description" : "The label for the inventory item specified by item_no.",
          "type" : "string"
        },
        "service_no" : {
          "description" : "Aria-assigned unique service identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "service_desc" : {
          "description" : "The description of the service specified by service_no",
          "type" : "string"
        },
        "client_sku" : {
          "description" : "",
          "type" : "string"
        },
        "price" : {
          "description" : "The price of the inventory item.",
          "type" : "number"
        },
        "item_plan" : {
          "description" : "The plan number associated with the inventory item specified by item_no.",
          "type" : "integer",
          "format" : "int64"
        },
        "item_months" : {
          "description" : "The months to stack for this item",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "class_no" : {
          "description" : "Inventory item class number",
          "type" : "integer",
          "format" : "int64"
        },
        "class_label" : {
          "description" : "The inventory item class label describing the class specified by class_no.",
          "type" : "string"
        },
        "stock_level" : {
          "description" : "The current stock-level of the item specified by item_no",
          "type" : "number"
        },
        "avg_ratings" : {
          "description" : "An arbitrary value provided by the client to indicate user/buyer ratings for the specified item_no.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "num_ratings" : {
          "description" : "The number of ratings that have been tendeder regarding this item_no.",
          "type" : "integer",
          "format" : "int64"
        },
        "num_reviews" : {
          "description" : "The number of user/buyer reviews for this item_no.",
          "type" : "integer",
          "format" : "int64"
        },
        "image_url" : {
          "description" : "The URL to the inventory item image for this item_no.",
          "type" : "string"
        },
        "image_text" : {
          "description" : "Alternative text to display for the inventory item image if that image cannot be displayed or is not found.\n",
          "type" : "string"
        },
        "client_item_id" : {
          "description" : "The client-defined item ID to search for images",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "A multidimensional array of client-defined Service ID for this plan.\n",
          "type" : "string"
        },
        "client_item_plan_id" : {
          "description" : "client-defined item plan ID the item appears on",
          "type" : "string"
        }
      }
    },
    "CashCredit" : {
      "type" : "object",
      "description" : "Array that contains cash credits.\\n",
      "properties" : {
        "credit_no" : {
          "description" : "the cash credit number",
          "type" : "integer",
          "format" : "int64"
        },
        "created_by" : {
          "description" : "User ID that created the transaction.",
          "type" : "string"
        },
        "created_date" : {
          "description" : "Specifies the date that credit was created.",
          "type" : "string"
        },
        "amount" : {
          "description" : "The amount of the cash credit.",
          "type" : "number"
        },
        "reason_code" : {
          "description" : "Reason code for the cash credit.",
          "type" : "integer",
          "format" : "int64"
        },
        "reason_text" : {
          "description" : "Text description for the reason.",
          "type" : "string"
        },
        "applied_cash_credits" : {
          "description" : "Array that contains cash credit application details.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AppliedCashCredit"
          }
        }
      }
    },
    "RemoveAcctPlanCustomRatesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "SetPaymentResponsibilityMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "ApplyCashCreditMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "credit_no" : {
          "description" : "The cash credit number.",
          "type" : "integer",
          "format" : "int64"
        },
        "created_by" : {
          "description" : "User ID that created the transaction.",
          "type" : "string"
        },
        "created_date" : {
          "description" : "Specifies the date that credit was created.",
          "type" : "string"
        },
        "amount" : {
          "description" : "The amount of the cash credit.",
          "type" : "number"
        },
        "reason_code" : {
          "description" : "Reason code for the cash credit.",
          "type" : "integer",
          "format" : "int64"
        },
        "reason_text" : {
          "description" : "Text description for the reason.",
          "type" : "string"
        },
        "applied_cash_credits" : {
          "description" : "Array that contains cash credit application details.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AppliedCashCredit"
          }
        }
      }
    },
    "GetClientCountriesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "client_country" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClientCountry"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "Authorize3dsecureMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "authorize_3dsecure_m" ],
          "default" : "authorize_3dsecure_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined identifier for the account. This value is unique across all Aria-managed accounts.",
          "type" : "string",
          "maxLength" : 50
        },
        "proc_payment_id" : {
          "description" : "Payment Gateway / Payment Processor ID used to identify the transaction requiring 3DSecure authorization. Please note that this field is used in other places to identify a particular ID for payment gateway orders and 3DSecure transactions.\n",
          "type" : "string"
        },
        "proc_payer_auth_response" : {
          "description" : "Payment Gateway / Payment Processor Response received from a merchant plugin that authorized the transaction requiring 3DSecure authorization.\n",
          "type" : "string"
        },
        "end_user_session_id" : {
          "description" : "Payment Gateway / Payment Processor Shopper Session Identifier used to identify the transaction requiring 3DSecure authorization.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "MpiSurcharge" : {
      "type" : "object",
      "description" : "Surcharge for master plan Instance",
      "properties" : {
        "mpi_surcharge_no" : {
          "description" : "The surcharge number to assign to the master plan. Required when assigning a surcharge to a master plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "mpi_rate_schedule_no" : {
          "description" : "",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ChildPlanList" : {
      "type" : "object",
      "description" : "Array of the plans mapped as children of this plan",
      "properties" : {
        "plan_no" : {
          "description" : "Aria generated unique ID of the plan",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client-defined unique ID for the plan",
          "type" : "string"
        }
      }
    },
    "CouponCode" : {
      "type" : "object",
      "description" : "An array of coupon details for the master plan instance.",
      "properties" : {
        "coupon_codes" : {
          "description" : "The coupon codes to assign to this master plan instance, if any",
          "type" : "string"
        }
      }
    },
    "VoidTransaction" : {
      "type" : "object",
      "description" : "Array of voided transactions.",
      "properties" : {
        "invoice_transaction_id" : {
          "description" : "Aria generated ID for the invoice transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "void_transaction_id" : {
          "description" : "When the invoice transaction is voided, this new void transaction is created.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "WriteAcctCommentMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "write_acct_comment_m" ],
          "default" : "write_acct_comment_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "comment" : {
          "description" : "The content/body text of the account comment being created.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "comment" ]
    },
    "GetClientItemPricesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_client_item_prices_m" ],
          "default" : "get_client_item_prices_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "filter_currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "return_no_cost_items" : {
          "description" : "A boolean value that asserts the API call should include no-cost items in its returned results (true/1=yes, false/0=no).\n",
          "type" : "string"
        },
        "filter_item_no" : {
          "description" : "Aria-assigned unique identifier indicating Client Inventory Item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "filter_client_item_id" : {
          "description" : "Client assigned unique identifier indicating client Inventory Item.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "PlanNsoPriceOverride" : {
      "type" : "object",
      "description" : "Overridden prices for NSO items.",
      "properties" : {
        "rate_schedule_no" : {
          "description" : "The internal Id of the rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "client_rate_schedule_id" : {
          "description" : "Client assigned unique rate schedule number",
          "type" : "string"
        },
        "currency_cd" : {
          "description" : "Currency code for Inventory item.",
          "type" : "string"
        },
        "override_price" : {
          "description" : "Overridden price for Inventory item for currencies.",
          "type" : "string"
        }
      }
    },
    "CouponsDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "out_acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts. If passed, only the coupons assigned to this account will be returned.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_acct_id" : {
          "description" : "This is the client-assigned identifier for the account.",
          "type" : "string"
        },
        "out_master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_master_plan_instance_id" : {
          "description" : "",
          "type" : "string"
        },
        "out_coupon_cd" : {
          "description" : "The unique coupon ID",
          "type" : "string"
        },
        "coupon_scope" : {
          "description" : "Specifies the coupon application.",
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "description" : "A long description of the coupon",
          "type" : "string"
        },
        "start_date" : {
          "description" : "Beginning effective date for this coupon",
          "type" : "string"
        },
        "exp_date" : {
          "description" : "Final effective date (expiration date) for this coupon",
          "type" : "string"
        },
        "max_uses" : {
          "description" : "Number of times a coupon can be used",
          "type" : "integer",
          "format" : "int64"
        },
        "total_uses" : {
          "description" : "The number of times this coupon has been used",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The currency this coupon applies to",
          "type" : "string"
        },
        "recur_discount_flat_amt" : {
          "description" : "A recurring discount amount expressed as a flat currency amount discount",
          "type" : "number"
        },
        "one_time_discount_flat_amt" : {
          "description" : "A one-time discount amount expressed as a flat currency amount discount",
          "type" : "number"
        },
        "recur_discount_pct" : {
          "description" : "A recurring discount amount expressed as a percentage of the charges",
          "type" : "number"
        },
        "one_time_discount_pct" : {
          "description" : "A one-time discount amount expressed as a percentage of the charges",
          "type" : "number"
        },
        "status_ind" : {
          "description" : "Whether or not the coupon is active",
          "type" : "integer",
          "format" : "int64"
        },
        "group_no" : {
          "description" : "Aria-assigned group number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_group_id" : {
          "description" : "Specifies Client-defined ID for coupon group",
          "type" : "string"
        },
        "group_name" : {
          "description" : "Specified coupon group name",
          "type" : "string"
        },
        "group_description" : {
          "description" : "Specifies group description",
          "type" : "string"
        },
        "group_precedence" : {
          "description" : "Specifies the precedence of the coupon group",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_templates" : {
          "description" : "The credit templates mapped to this coupon",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CreditTemplate"
          }
        },
        "discount_rules" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DiscountRule"
          }
        },
        "discount_bundles" : {
          "description" : "All of the bundles to which this coupon belongs",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DiscountBundle"
          }
        }
      }
    },
    "GetInvoiceCmDetailsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_invoice_cm_details_m" ],
          "default" : "get_invoice_cm_details_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "invoice_no" : {
          "description" : "Aria generated invoice number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_cm_seq_id" : {
          "description" : "Client credit memo sequence id.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "SetUsgMtdPtdBalMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "set_usg_mtd_ptd_bal_m" ],
          "default" : "set_usg_mtd_ptd_bal_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_id" : {
          "description" : "Aria generated unique identifier for the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance.",
          "type" : "string"
        },
        "threshold_category" : {
          "description" : "Indicates whether category is PTD or MTD 0 means PTD. 1 means MTD.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "threshold_category" ]
    },
    "GetSuppPlansByPromoCodeAllMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "all_plan_details" : {
          "description" : "This return value is a multidimensional array describing the detail of all available plans.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllPlanDetail"
          }
        }
      }
    },
    "GetPaymentApplicationsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_payment_applications_m" ],
          "default" : "get_payment_applications_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "src_transaction_id" : {
          "description" : "Aria transaction ID for the credit transaction (e.g., Payment)\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no", "src_transaction_id" ]
    },
    "SetRegUssParamsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "set_reg_uss_params_m" ],
          "default" : "set_reg_uss_params_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "session_id" : {
          "description" : "Client-assigned identifier for the application session.",
          "type" : "string"
        },
        "override_timeout_minutes" : {
          "description" : "Number of minutes from current time until session expires",
          "type" : "integer",
          "format" : "int64"
        },
        "in_reg_uss_params" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InRegUssParam"
          }
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "session_id", "in_reg_uss_params" ]
    },
    "ContractRolloverRateSched" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "contract_current_rate_sched_no" : {
          "description" : "Current rate schedule for which the rollover rate schedule will be used at the completion of the contract",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_current_client_rate_sched_id" : {
          "description" : "Client-defined ID of the current rate schedule for which the rollover rate schedule will be used at the completion of the contract",
          "type" : "string"
        },
        "contract_rollover_rate_sched_no" : {
          "description" : "Pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_rate_sched_id" : {
          "description" : "Client-defined ID of the pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract",
          "type" : "string"
        }
      }
    },
    "GetAcctTaxExemptStatusMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "exemption_level" : {
          "description" : "Exemption level code",
          "type" : "integer",
          "format" : "int64"
        },
        "exemption_level_desc" : {
          "description" : "Exemption level text description",
          "type" : "string"
        }
      }
    },
    "InvoiceReferenceDetail" : {
      "type" : "object",
      "description" : "Array of invoice reference details.",
      "properties" : {
        "invoice_no" : {
          "description" : "The invoice number.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_line_no" : {
          "description" : "The invoice line number.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_ref_line_amount" : {
          "description" : "The invoice reference line's gross amount.",
          "type" : "number"
        },
        "invoice_line_charge_amt" : {
          "description" : "The invoice reference line's charge amount.",
          "type" : "number"
        },
        "invoice_line_surcharge_amt" : {
          "description" : "The invoice reference line's surcharge gross amount.",
          "type" : "number"
        },
        "invoice_line_credit_amt" : {
          "description" : "The invoice reference line's service credit amount.",
          "type" : "number"
        },
        "invoice_line_discount_amt" : {
          "description" : "The invoice reference line's off-line discount amount.",
          "type" : "number"
        },
        "invoice_line_tax_amt" : {
          "description" : "The invoice reference line's gross tax amount.",
          "type" : "number"
        }
      },
      "required" : [ "invoice_no", "invoice_line_no", "invoice_ref_line_amount", "invoice_line_charge_amt", "invoice_line_surcharge_amt", "invoice_line_credit_amt", "invoice_line_discount_amt", "invoice_line_tax_amt" ]
    },
    "GetPmtUuidMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_pmt_uuid_m" ],
          "default" : "get_pmt_uuid_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "The client-defined billing primary payment method ID.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "GetInvoiceCmDetailsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "restriction_reason" : {
          "description" : "If the invoice cannot be credited using a credit memo, the reason for the restriction.\n",
          "type" : "string"
        },
        "invoice_cm_line_details" : {
          "description" : "Array of invoice line items.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceCmLineDetail"
          }
        }
      }
    },
    "ErrorRecord" : {
      "type" : "object",
      "description" : "If client record IDs are provided, an array of error codes and error messages for individual records",
      "properties" : {
        "out_client_record_id" : {
          "description" : "If a record ID was provided in the input, this is that same ID for every record which had an error",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier specific to the usage record which had an error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "record_error_code" : {
          "description" : "The error code for the specific record provided",
          "type" : "integer",
          "format" : "int64"
        },
        "record_error_msg" : {
          "description" : "The error message for the specific record provided",
          "type" : "string"
        }
      }
    },
    "ServiceNoFilter" : {
      "type" : "object",
      "description" : "This array will support up to 10 individual inputs.",
      "properties" : {
        "service_no" : {
          "description" : "The Aria-assigned unique service identifier that will be used to filter the results for this API. If the plan instance doesn’t have this service_no assigned, it will not be returned. \n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "The client-defined unique identifier for the service that will be used to filter the results for this API. If the plan instance doesn’t have the service with this description assigned, it will not be returned.\n",
          "type" : "string"
        }
      }
    },
    "GetAcctDetailsAllMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "userid" : {
          "description" : "The users unique identifier.",
          "type" : "string"
        },
        "first_name" : {
          "description" : "Contact First name",
          "type" : "string"
        },
        "middle_initial" : {
          "description" : "Middle initial of the contact",
          "type" : "string"
        },
        "last_name" : {
          "description" : "Contact last name",
          "type" : "string"
        },
        "company_name" : {
          "description" : "Company name of the contact",
          "type" : "string"
        },
        "address1" : {
          "description" : "First address line of the contact.",
          "type" : "string"
        },
        "address2" : {
          "description" : "Second address line of the contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "address3" : {
          "description" : "The third line of the address",
          "type" : "string"
        },
        "city" : {
          "description" : "City of the contact",
          "type" : "string"
        },
        "locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "state_prov" : {
          "description" : "State or Province of the contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "country_cd" : {
          "description" : "Country of the contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "postal_cd" : {
          "description" : "Postal/Zip code for the contact address.",
          "type" : "string"
        },
        "phone" : {
          "description" : "The phone number of the contact",
          "type" : "string"
        },
        "phone_ext" : {
          "description" : "The extension for the contact phone",
          "type" : "string"
        },
        "cell_phone" : {
          "description" : "The contact cell phone.",
          "type" : "string"
        },
        "work_phone" : {
          "description" : "The full work phone number",
          "type" : "string"
        },
        "work_phone_ext" : {
          "description" : "The office/desk extension of the contact's work phone, if any.\n",
          "type" : "string"
        },
        "fax" : {
          "description" : "The FAX phone number for the contact.",
          "type" : "string"
        },
        "email" : {
          "description" : "Alternate email address for contact.",
          "type" : "string"
        },
        "birthdate" : {
          "description" : "Birthdate of the contact in yyyy-mm-dd format.",
          "type" : "string"
        },
        "status_cd" : {
          "description" : "This is the status of the object in question for the current API call.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "senior_acct_no" : {
          "description" : "The senior_acct_no is the unique account number for the parent account and is used in establishing parent-child billing relationships.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "senior_acct_user_id" : {
          "description" : "The senior account user ID of the account.",
          "type" : "string"
        },
        "senior_client_acct_id" : {
          "description" : "The client senior account ID of the account.",
          "type" : "string"
        },
        "legal_entity_no" : {
          "description" : "Aria-assigned legal entity identification number.",
          "type" : "string"
        },
        "legal_entity_name" : {
          "description" : "Client-assigned descriptor of the legal entity.",
          "type" : "string"
        },
        "client_legal_entity_id" : {
          "description" : "Client-assigned unique identifier for the legal entity.",
          "type" : "string"
        },
        "test_acct_ind" : {
          "description" : "This argument indicates the account is a test account and is treated as such in the system.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "taxpayer_id" : {
          "description" : "Taxpayer Identification number.",
          "type" : "string"
        },
        "acct_start_date" : {
          "description" : "Date, in yyyy-mm-dd format, on which the account was first created outside of Aria",
          "type" : "string"
        },
        "alt_msg_template_no" : {
          "description" : "Email template number assigned to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "seq_func_group_no" : {
          "description" : "Functional account group number specifically designated for statement sequence number assignment.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "tax_exemption_level" : {
          "description" : "To provide Tax Exemption Level for the account",
          "type" : "integer",
          "format" : "int64"
        },
        "list_start_master_file" : {
          "description" : "Indicates whether the account is listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_msg_template_id" : {
          "description" : "Client-defined email template ID assigned to this account.",
          "type" : "string"
        },
        "client_cn_alt_msg_template_id" : {
          "description" : "The client-defined alternate email template ID to use for this account",
          "type" : "string"
        },
        "revrec_profile_no" : {
          "description" : "Rev profile ID of the account\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_revrec_id" : {
          "description" : "Client-defined ID of the revrec profile that is on the account\n",
          "type" : "string"
        },
        "invoice_approval_required" : {
          "description" : "Boolean indicator to override client's default configured behavior for creating a pending invoice requiring explicit approval, or a Real invoice\n",
          "type" : "integer",
          "format" : "int64"
        },
        "functional_acct_group" : {
          "description" : "Array of functional account groups.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FunctionalAcctGroup"
          }
        },
        "collection_acct_group" : {
          "description" : "Array of collections account groups.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CollectionAcctGroup"
          }
        },
        "supp_field" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppField"
          }
        },
        "acct_surcharges_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctSurchargesInfo"
          }
        },
        "acct_currency" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used for this account\n",
          "type" : "string"
        },
        "acct_balance" : {
          "description" : "Specifies the balance for this account.",
          "type" : "number"
        },
        "address_verification_code" : {
          "description" : "The address verification code for account contact address\n",
          "type" : "string"
        },
        "address_match_score" : {
          "description" : "The score of match for account contact address verification code\n",
          "type" : "number"
        },
        "acct_create_client_receipt_id" : {
          "description" : "The client-specified receipt ID, assigned during this account creation. Useful for auditing and tracking.",
          "type" : "string"
        },
        "status_client_receipt_id" : {
          "description" : "The client-specified receipt ID, assigned for account status change. Useful for auditing and tracking.",
          "type" : "string"
        },
        "acct_coupons" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctCoupon"
          }
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the account.",
          "type" : "string"
        },
        "billing_groups_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingGroupsInfo"
          }
        },
        "payment_methods_info" : {
          "description" : "List of primary and secondary payment methods of billing groups on this account.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentMethodsInfo"
          }
        },
        "master_plan_count" : {
          "description" : "Count of the number of master plans for the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "supp_plan_count" : {
          "description" : "Count of the number of supplemental plans for the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plans_info" : {
          "description" : "If billing groups are not excluded, then this array returns all the associated master plan instances for each billing group (provided this is a self-pay account). If billing groups are excluded (or if this is a parent-pay account), then this array returns all the master plan instances on this account.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlansInfo"
          }
        },
        "consumer_acct_ind" : {
          "description" : "Indicates that the Account represents a single individual, used primarily in Business-to-Consumer (B2C) business models.  The primary purpose of this field is to support Person Accounts objects in Salesforce via the SFDC Connector.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "string"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        },
        "acct_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the account contact saved on the account.",
          "type" : "string"
        },
        "other_contact_details" : {
          "description" : "These are the contacts that are NOT linked to any entity on account like payment method bill contacts, billing group statement contacts, account contact.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OtherContactDetail"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "UsageRec" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "userid" : {
          "description" : "The user id of the account holder for whom this API call is reporting usage.",
          "type" : "string"
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "plan_instance_no" : {
          "description" : "The Aria-assigned unique identifier of the plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined identifier for the plan instance.",
          "type" : "string"
        },
        "usage_type" : {
          "description" : "The Aria-assigned usage type to be recorded. A value for either this field or 'usage_type_code' must be passed into the API to denote which usage type to record.",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_units" : {
          "description" : "The number of usage units that are being recorded.",
          "type" : "number"
        },
        "usage_date" : {
          "description" : "The date that the recorded usage was consumed, in yyyy-mm-dd hh24:mi:ss format. Timestamp is optional and, if not included, will default to 00:00 hrs.",
          "type" : "string"
        },
        "billable_units" : {
          "description" : "The number of usage units being recorded that are billable.",
          "type" : "number"
        },
        "amt" : {
          "description" : "A pre-specified amount to charge for the usage record reported. If specified, Aria will use this amount to charge for the usage, rather than calculating a charge based on the rate schedule associated with the usage-based service associated with the usage type.",
          "type" : "number"
        },
        "rate" : {
          "description" : "The rate per unit of the usage reported. If specified, this rate will override rates based on the rate schedule associated with the usage_based service associated with the usage type.",
          "type" : "number"
        },
        "telco_from" : {
          "description" : "A string representing a descriptive data field for the usage record. Originally used to specify the phone number of a caller.",
          "type" : "string"
        },
        "telco_to" : {
          "description" : "A string representing a descriptive data field for the usage record. Originally used to specify the phone number called.",
          "type" : "string"
        },
        "comments" : {
          "description" : "A string with comments about this usage record.",
          "type" : "string"
        },
        "exclude_from_billing" : {
          "description" : "A flag that specifies whether or not this usage record should be excluded from billing (neither generating a charge nor appearing on a statement).",
          "type" : "string"
        },
        "exclusion_comments" : {
          "description" : "A string with comments about why this usage record was excluded from billing.",
          "type" : "string"
        },
        "parent_usage_rec_no" : {
          "description" : "The Aria-assigned parent usage record identifier for a child account.",
          "type" : "integer",
          "format" : "int64"
        },
        "qualifier_1" : {
          "description" : "Client-defined string of any value meant for internal use and/or display to customers in statements.",
          "type" : "string"
        },
        "qualifier_2" : {
          "description" : "Client-defined string of any value meant for internal use and/or display to customers in statements.",
          "type" : "string"
        },
        "qualifier_3" : {
          "description" : "Client-defined string of any value meant for internal use and/or display to customers in statements.",
          "type" : "string"
        },
        "qualifier_4" : {
          "description" : "Client-defined string of any value meant for internal use and/or display to customers in statements.",
          "type" : "string"
        },
        "usage_type_code" : {
          "description" : "A value for either this field or 'usage_type' must be passed into the API to denote which usage type to record.",
          "type" : "string"
        },
        "client_record_id" : {
          "description" : "Client-provided identifier for a given usage record.",
          "type" : "string"
        },
        "caller_id" : {
          "description" : "Client-provided unique identifier for the calling user or system.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        }
      },
      "required" : [ "usage_units" ]
    },
    "GetRecurringCreditInfoMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "recurring_credits_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RecurringCreditsDetail"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "CmVoidTransaction" : {
      "type" : "object",
      "description" : "Array of voided transactions.",
      "properties" : {
        "cm_transaction_id" : {
          "description" : "Aria generated transaction ID for the credit memo line.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_void_transaction_id" : {
          "description" : "The void transaction ID generated by the void.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "DiscountBundleNo" : {
      "type" : "object",
      "description" : "If this rule is part of multiple discount bundles, they are all listed here",
      "properties" : {
        "bundle_no" : {
          "description" : "The unique ID of the discount bundle",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "InvoiceHist" : {
      "type" : "object",
      "description" : "Array of invoices.",
      "properties" : {
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "outacct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "outclient_acct_id" : {
          "description" : "This is the client-assigned identifier for the account.",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "The billing group number mapped against each master plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined billing group ID.",
          "type" : "string"
        },
        "master_plan_no" : {
          "description" : "Aria-assigned plan number for the Master Plan Instance input filter.",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_name" : {
          "description" : "The name of the master plan for the Master Plan Instance input filter.",
          "type" : "string"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "bill_date" : {
          "description" : "The date the invoice was billed.",
          "type" : "string"
        },
        "paid_date" : {
          "description" : "The date the invoice was paid.",
          "type" : "string"
        },
        "amount" : {
          "description" : "Debit amount applied by the invoice.",
          "type" : "number"
        },
        "credit" : {
          "description" : "Credit amount applied by the invoice.",
          "type" : "number"
        },
        "recurring_bill_from" : {
          "description" : "The recurring bill-from date.",
          "type" : "string"
        },
        "recurring_bill_thru" : {
          "description" : "The recurring bill-through date.",
          "type" : "string"
        },
        "usage_bill_from" : {
          "description" : "The usage bill from date.",
          "type" : "string"
        },
        "usage_bill_thru" : {
          "description" : "The usage bill-through date of the invoice.",
          "type" : "string"
        },
        "is_voided_ind" : {
          "description" : "A boolean value indicating if the invoice has been voided.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_id" : {
          "description" : "The client_plan_id of the given Master Plan Instance input filter.",
          "type" : "string"
        },
        "invoice_type_cd" : {
          "description" : "This field identifies the type of the invoice generated",
          "type" : "string"
        },
        "orig_invoice_no" : {
          "description" : "The Aria generated unique invoice number of the original invoice. This field is populated on rebill invoices.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rb_no" : {
          "description" : "The Aria generated unique invoice number for the rebill invoice. This field is populated on the original invoice.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rb_reason_cd" : {
          "description" : "The Client-defined reason code for the rebill.",
          "type" : "integer",
          "format" : "int64"
        },
        "rb_comments" : {
          "description" : "Explanatory text for the rebill.",
          "type" : "string"
        },
        "rb_flag" : {
          "description" : "Rebill indicator.",
          "type" : "integer",
          "format" : "int64"
        },
        "rb_status" : {
          "description" : "Indicates whether the current invoice has been rebilled.\n",
          "type" : "string"
        }
      }
    },
    "OutAcct" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "userid" : {
          "description" : "The user ID, unique among all accounts for this Aria client, assigned to the newly created account.  If input parameter \"user_id\" was provided, the same value is returned.  If no \"user_id\" was provided as input and the client is configured within Aria for automatic generation of random user_id values OR is configured to use account email addresses as user_ids, the generated value is returned.\n",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        },
        "acct_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the account contact saved on the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_contact_details" : {
          "description" : "List of billing contacts saved on the account.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingContactDetail"
          }
        },
        "statement_contact_details" : {
          "description" : "List of statement contacts saved on the account.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StatementContactDetail"
          }
        },
        "other_contact_details" : {
          "description" : "List of contacts saved on the account that are not used as an account, billing, or statement contact",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OtherContactDetail"
          }
        },
        "contract_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractDetail"
          }
        },
        "session_id" : {
          "description" : "Returns the newly created cookie ID of the account",
          "type" : "string"
        },
        "billing_errors" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingError"
          }
        },
        "master_plans_assigned" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlansAssigned"
          }
        },
        "invoice_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceInfo"
          }
        },
        "out_acct" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OutAcct"
          }
        }
      }
    },
    "UsageQualifier2" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "usage_qualifier_2" : {
          "description" : "Optional list of filters to apply against usage qualifier number 2, stored in the Aria system",
          "type" : "string"
        }
      }
    },
    "InRegUssParam" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "param_name" : {
          "description" : "A string array of client-assigned configuration parameter names",
          "type" : "string"
        },
        "param_val" : {
          "description" : "A string array of client-assigned values for configuration parameter names passed in the param_name string array.\n",
          "type" : "string"
        }
      },
      "required" : [ "param_name", "param_val" ]
    },
    "GetAcctNotifyMethodMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_method_name" : {
          "description" : "The name of the notify method to be used in communicating with the account holder.\n",
          "type" : "string"
        }
      }
    },
    "SetUsgMtdPtdBalMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_id" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "CreateOrderWithPlanMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "create_order_with_plan_m" ],
          "default" : "create_order_with_plan_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "order_line_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderLineItem"
          }
        },
        "parent_plan_instance_no" : {
          "description" : "Parent plan instance number to identify each supplemental plan and child supplemental plan heirarchy.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_parent_plan_instance_id" : {
          "description" : "Client parent plan instance ID to identify each supplemental plan and child supplemental plan heirarchy.",
          "type" : "string"
        },
        "supp_plan_instance_no" : {
          "description" : "Unique plan instance number for each assigned supplemental plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Client-defined plan instance ID for each assigned supplemental plan.",
          "type" : "string"
        },
        "supp_plan_no" : {
          "description" : "The Aria-assigned identifier for a supplemental service plan. Allowable values are limited to valid custom plan numbers for client.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_supp_plan_id" : {
          "description" : "Client-defined supplemental plan ID.",
          "type" : "string"
        },
        "supp_plan_units" : {
          "description" : "Number of units for the supplemental plan",
          "type" : "integer",
          "format" : "int64"
        },
        "assignment_directive" : {
          "description" : "The rule to be applied to this assignment request, governing the proration rule is applied. Default behavior is to make the plan change (assign/deassign a plan to an account, change units on an existing plan, etc.) immediately based on client-defined default proration rule, resulting in appropriate prorated charge and credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_immediately" : {
          "description" : "Indicates whether to bill the account holder immediately or, if not set bill on next billing anniversary date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_seq" : {
          "description" : "The billing sequence number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_order_id" : {
          "description" : "This is the client-assigned order identifier.",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions",
          "type" : "string",
          "maxLength" : 50
        },
        "alt_pay_method" : {
          "description" : "If you want to use the account's current form of payment, leave this field empty. If you want to use an alternate credit card, enter '1' in this field.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_number" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "bank_acct_num" : {
          "description" : "The bank account number.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_zip" : {
          "description" : "Zip Code of the billing contact",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_extension" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_extension" : {
          "description" : "Work phone extenstion of the billing contact",
          "type" : "string"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "bank_acct_type" : {
          "description" : "The type of bank account being used.",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "multiple_coupons" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MultipleCoupon"
          }
        },
        "alt_client_acct_group_id" : {
          "description" : "One-time collections account group  to use for this specific call.  Default collections group on the account is not changed.",
          "type" : "string"
        },
        "client_alt_inv_template_id" : {
          "description" : "The client alternate invoice template number to use for this order, if different from the default template",
          "type" : "string"
        },
        "alt_inv_template_no" : {
          "description" : "The invoice template number to use for this order, if different from the default template",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_message" : {
          "description" : "Alternate contact details for orders.\n",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "soft_descriptor" : {
          "description" : "Transaction description shown on the buyer's statement that displays a Merchant Name or Item Description typically. This field will be ignored if not supported/certified by the payment processor.\n",
          "type" : "string"
        },
        "soft_descriptor_customer_service" : {
          "description" : "Transaction description shown on the buyer's statement that displays a City for Card Present transactions or a Phone Number for Card Not Present transactions. This field will be ignored if not supported/certified by the payment processor.\n",
          "type" : "string"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "order_comments" : {
          "description" : "Comments for this order",
          "type" : "string"
        },
        "nso_po_num" : {
          "description" : "Purchase order number assigned to the one-time order.",
          "type" : "string"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the plan instance.",
          "type" : "string"
        },
        "plan_service_updates" : {
          "description" : "List of services associated with the plan being assigned or updated on the account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanServiceUpdate"
          }
        },
        "contacts" : {
          "description" : "List of contacts to be created on the account. Note that contacts not used as an account contact, billing contact, or statement contact will be saved on the account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contact"
          }
        },
        "existing_pay_method_cvv" : {
          "description" : "Sends the CVV value of the current credit card on file.\n",
          "type" : "string"
        },
        "fraud_filter" : {
          "description" : "Enable Fraud Filtering.  This is supported if your payment processor supports this feature and has been certified with Aria.  If no values are provided, the system will default to 2.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "PaymentMethodsSummary" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_postal_cd" : {
          "description" : "Postal code for the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_ext" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_ext" : {
          "description" : "This is the work phone extension for the billing contact work phone.\n",
          "type" : "string"
        },
        "bill_fax" : {
          "description" : "Fax number of the billing contact.",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_birthdate" : {
          "description" : "Birthdate of the billing contact.\n",
          "type" : "string"
        },
        "bill_address_verification_code" : {
          "description" : "Verification code for the account contact address",
          "type" : "string"
        },
        "bill_address_match_score" : {
          "description" : "Match score for the account contact address",
          "type" : "number"
        },
        "pay_method_name" : {
          "description" : "Payment method name.",
          "type" : "string"
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "Client-defined unique identifier for the payment method.",
          "type" : "string"
        },
        "pay_method_description" : {
          "description" : "Payment method description",
          "type" : "string"
        },
        "pay_method_type" : {
          "description" : "This is the method_id corresponding to a payment method such as credit card, Electronic Check, Pre-Paid, Net Terms, etc.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "list_start_master_file" : {
          "description" : "Indicates whether the account is listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "suffix" : {
          "description" : "Last four digits of account number",
          "type" : "string"
        }
      }
    },
    "GetAvailPlansForAcctAllMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "all_client_plans_services" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllClientPlansService"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "OutInvoice" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "invoicing_error_code" : {
          "description" : "The error code generated by Aria when Aria attempted to generate a invoice.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoicing_error_msg" : {
          "description" : "The text message associated with 'invoicing_error_code'.\n",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_group_no" : {
          "description" : "Aria-assigned unique identifier of the billing group associated with the invoice generated.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "The client-defined identifier of the billing group associated with the invoice generated.\n",
          "type" : "string"
        },
        "invoice_charges_before_tax" : {
          "description" : "Total of charges before tax for the invoice.\n",
          "type" : "number"
        },
        "invoice_tax_charges" : {
          "description" : "Total of tax charges for the invoice.\n",
          "type" : "number"
        },
        "invoice_charges_after_tax" : {
          "description" : "Total of all charges including tax for the invoice. The sum of invoice_charges_before_tax and invoice_tax_charges.\n",
          "type" : "number"
        },
        "invoice_credit_amount" : {
          "description" : "Total of all credits for the invoice.\n",
          "type" : "number"
        },
        "invoice_total_amount" : {
          "description" : "Total of all charges and all credits for the invoice. The sum of invoice_charges_after_tax net of invoice_credit_amount.\n",
          "type" : "number"
        },
        "invoice_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceItem"
          }
        },
        "tax_details" : {
          "description" : "List of tax details for the invoice.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TaxDetail"
          }
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned in this array. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return. Note that if multiple invoices are generated, parameters in this array will be null and details for all invoices will be returned in the out_invoices array.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        }
      }
    },
    "UpdateAcctPlanMultiMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "out_acct_no" : {
          "description" : "Aria generated unique identifier for the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_acct_id" : {
          "description" : "Client-assigned identifier for the account.",
          "type" : "string"
        },
        "billing_errors" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingError"
          }
        },
        "plans_updated" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlansUpdated"
          }
        },
        "billing_groups_updated" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingGroupsUpdated"
          }
        },
        "dunning_groups_updated" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DunningGroupsUpdated"
          }
        },
        "multi_plan_invoice_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MultiPlanInvoiceDetail"
          }
        },
        "billing_contact_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingContactDetail"
          }
        },
        "statement_contact_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StatementContactDetail"
          }
        },
        "other_contact_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OtherContactDetail"
          }
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned here. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        }
      }
    },
    "ClientHasEventClassMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "response" : {
          "description" : "Array of events the client has subscribed to.",
          "type" : "string"
        }
      }
    },
    "PlanUpdate" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_directive" : {
          "description" : "Indicates what operation to perform on each plan or plan instance specified.",
          "type" : "integer",
          "format" : "int64"
        },
        "existing_plan_instance_no" : {
          "description" : "The unique identifier of the plan instance (can be either a master or supplemental plan). Either this field, or existing_client_plan_instance_id is required when updating plan units or a rate schedule on this instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "existing_client_plan_instance_id" : {
          "description" : "The client-defined identifier of the plan instance (can be either a master or supplemental plan).\n",
          "type" : "string"
        },
        "new_client_plan_instance_id" : {
          "description" : "Updates the client-defined identifier associated with the plan instance.",
          "type" : "string"
        },
        "plan_instance_idx" : {
          "description" : "For non-persistent referencing of a plan instance within the API request.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_description" : {
          "description" : "Description for the plan instance.",
          "type" : "string"
        },
        "new_plan_no" : {
          "description" : "The unique identifier of the new plan being assigned or replacing the existing plan on the instance. Either this field, or new_client_plan_id is required when replacing a plan on a plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "new_client_plan_id" : {
          "description" : "The client-defined identifier of the new plan being assigned or replacing the existing plan on the instance.",
          "type" : "string"
        },
        "promo_cd" : {
          "description" : "For master plan instances only. Ignore if submitted for a supplemental plan.",
          "type" : "string"
        },
        "plan_units" : {
          "description" : "Number of units purchased of the specified plan.",
          "type" : "number"
        },
        "assign_plan_unit_instances" : {
          "description" : "Array of plan unit instances to be assigned for this account. This array is relevant only when assigning a new plan to an account (plan_directive = 1) or when increasing the number of units purchased for a given plan instance (plan_directive = 3 and plan_units specified in this API request is greater than what is currently on the account). Any existing plan unit instances for a given plan instance can be updated using the update_plan_unit_instances array. In all other scenarios, the inputs provided in this array will be ignored. Plan unit instances in this array should be applied using a first-in-first-associated methodology. 1) If for example fewer plan unit instances are specified than the number of plan units being assigned, then the remaining plan unit instances will not have a client-defined plan unit instance ID. 2) If for example the number of plan unit instances exceeds the number of plan units being assigned, then the extra client-defined plan unit instance ids will be ignored.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AssignPlanUnitInstance"
          }
        },
        "update_plan_unit_instances" : {
          "description" : "Array of plan unit instances to be updated. This array is relevant only for updating existing plan unit instances.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UpdatePlanUnitInstance"
          }
        },
        "remove_plan_unit_instances" : {
          "description" : "Array of plan unit instances to be removed from this account. This array is relevant only decreasing the number of units purchased for a given plan instance (plan_directive = 3 and plan_units specified in this API request is less than what is currently on the account). Note that as part of a downgrade scenario, no new plan unit instances can be assigned for this plan instance, and no fulfillment-based services associated with an existing plan unit instance can be fulfilled. If plan unit instances are provided in the remove_plan_unit_instances array, inputs provided in the assign_plan_unit_instances and update_plan_unit_instances arrays will be ignored. The plan_units parameter in this API request will take precedence over plan unit instances provided in this array. If fewer plan unit instances are specified in this array than the number of plan units being removed from the account (defined by the plan_units parameter), then the remaining plan unit instances will be removed from the plan instance using a last-in-first-out methodology. If the number of plan unit instances specified in this array exceeds the number of plan units being removed from the account (defined by the plan_units parameter), then the extra plan unit instances will be ignored and will remain on the account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RemovePlanUnitInstance"
          }
        },
        "plan_unit_inst_field_details" : {
          "description" : "Array of client-defined plan unit instance fields.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstFieldDetail"
          }
        },
        "alt_rate_schedule_no" : {
          "description" : "Alternative Rate Schedule Number. The alt_rate_schedule_no is the unique identifier for an alternative rate schedule that can be assigned to the account holder in place of the default rate schedule. This is often done by CSR's to provide special compensation or discounts as incentives to account holders.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_rate_schedule_id" : {
          "description" : "Client-defined alternate rate schedule identifier to assign (if any). If none is specified, the default rate schedule number is used.\n",
          "type" : "string"
        },
        "proration_invoice_timing" : {
          "description" : "Determines whether to create a separate invoice for prorated charges immediately, or defer to the next anniversary date. Note that this overrides the Proration Invoice Timing configuration saved with the plan in the product catalog. This field is ignored on master plan assignment actions.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rates" : {
          "description" : "An array of custom rates for the specified account number\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomRate"
          }
        },
        "coupon_code_updates" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CouponCodeUpdate"
          }
        },
        "surcharge_updates" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SurchargeUpdate"
          }
        },
        "balance_forward" : {
          "description" : "Balance forward should be applied against the corresponding master plan instance balance.\n",
          "type" : "number"
        },
        "parent_plan_instance_no" : {
          "description" : "Unique identifier of a plan in the plan instance hierarchy under which the new plan will be assigned. Applicable only for plan assignments.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_client_plan_instance_id" : {
          "description" : "Unique identifier of a plan in the plan instance hierarchy under which the new plan will be assigned. Applicable only for plan assignments.\n",
          "type" : "string"
        },
        "parent_plan_instance_idx" : {
          "description" : "Non-persistent reference for a plan instance (being created within the API request, under which the new plan will be assigned. Applicable only for plan assignments.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_status_cd" : {
          "description" : "The status of this plan instance",
          "type" : "integer",
          "format" : "int64"
        },
        "status_until_alt_start_cd" : {
          "description" : "Status of the master plan instance prior to alt_start_date or alt_bill_day. If the alt_start_date or alt_bill_day field is used, this field is required and defaults to 0 (inactive) if no value is provided. If an alternate starting date or alternate bill day is provided, the master plan instance remains in this status until its start date arrives. This only applies if a prorated invoice is not created. If a prorated invoice is created, this field is ignored.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_state" : {
          "description" : "Dunning state assigned to the master plan instance. In Progress indicates the master plan is in dunning. None indicates the master plan is not in dunning. Note that dunning state is applicable only for master plans and is set to Complete by the system once the dunning process is completed.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "degrade_date" : {
          "description" : "Date on which the Dunning Manager evaluates whether the master plan should be advanced to the next step of the dunning process. Applicable only for master plans, and only if the dunning_state is set to 1.\n",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "Unique identifier associated with an existing billing group for the specified account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Unique client-defined identifier associated with an existing billing group for the specified account.\n",
          "type" : "string"
        },
        "billing_group_idx" : {
          "description" : "For non-persistent referencing of a billing group within the API request.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "resp_level_cd" : {
          "description" : "The responsibility level code. These are values 1 through 4 as described in the legend for this argument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_acct_mp_inst_no" : {
          "description" : "Unique identifier of the master plan instance on the parent account that will be responsible for payment. Required when the master plan on a child account is designated as parent-pay (i.e., resp_level_cd is 2 or 3); otherwise this input will be ignored.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_acct_client_mp_inst_id" : {
          "description" : "Client-defined identifier of the master plan instance on the parent account that will be responsible for payment. Required when the master plan on a child account is designated as parent-pay (i.e., resp_level_cd is 2 or 3); otherwise this input will be ignored.\n",
          "type" : "string"
        },
        "dunning_group_no" : {
          "description" : "Unique identifier associated with an existing dunning group for the specified account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_group_id" : {
          "description" : "Unique client-defined identifier associated with an existing dunning group for the specified account.\n",
          "type" : "string"
        },
        "dunning_group_idx" : {
          "description" : "For non-persistent referencing of a dunning group within the API request.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_field_update" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanInstanceFieldUpdate"
          }
        },
        "effective_date" : {
          "description" : "Applicable only for supplemental plans. Ignore if submitted for a master plan.\n",
          "type" : "string"
        },
        "offset_months" : {
          "description" : "For plan recurring intervals of longer than one month, the number of months to offset proration and first bill date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_proration_start_date" : {
          "description" : "The date, in yyyy-mm-dd format, from which the proration calculations begin. If this field is NULL, then the proration calculations begin from the current date. This date cannot be before the beginning of the current billing period.\n",
          "type" : "string"
        },
        "auto_offset_months_option" : {
          "description" : "Automatically set the offset for the billing anniversary month.",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_collect_group_no" : {
          "description" : "The one-time collections account group for this account for this API call only. Available only for plan assignments and plan replacements\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_client_collect_group_id" : {
          "description" : "The one-time collections account group for this account for this API call only.\n",
          "type" : "string"
        },
        "offset_interval" : {
          "description" : "If assigning a change on an anniversary day, the number of billing periods by which to delay that change. If the new plan is different from the old plan, and this value is greater than 0, then the billing date continues to be the annniversary date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_unbilled_usage" : {
          "description" : "Specifies whether to invoice the unbilled usage.\n",
          "type" : "string"
        },
        "force_master_bill_date_reset" : {
          "description" : "Overrides the \"Sync_mstr_bill_dates_on_1st_supp\" client-level setting that determines whether or not no-charge master plan billing dates should be reset when assigning a new supplemental plan or when the supplemental plan instance status is updated to a billable status. If this value is left empty, the client-level setting will take effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_accumulation_reset_months" : {
          "description" : "For the plan specified, the number of months to accumulate before being reset.\n",
          "type" : "string"
        },
        "usage_pooling" : {
          "description" : "Indicates whether usage pooling is enabled for this plan instance. Allowable values are 'true' and 'false'.\n",
          "type" : "string"
        },
        "usage_threshold_applicability" : {
          "description" : "Usage tracking options on the specified plan.\n",
          "type" : "string"
        },
        "nso_bill_immediately" : {
          "description" : "Indicates whether to bill the NSO items immediately or, if not, to set\n    bill on next billing anniversary date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "nso_item_array" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NsoItemArray"
          }
        },
        "plan_service_updates" : {
          "description" : "List of services associated with the plan being assigned or updated on the account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanServiceUpdate"
          }
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the plan instance.",
          "type" : "string"
        },
        "nso_po_num" : {
          "description" : "Purchase order number assigned to the one-time order.",
          "type" : "string"
        },
        "plan_instance_supp_field_update_only" : {
          "description" : "This field controls the ability to update plan instance fields on a plan that is in non-provisioned status.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "force_bill_date_reset" : {
          "description" : "When a master plan's status changes from non-billable to billable, this input will determine what the billing dates of the specific master plan and all associated supplemental plans anniversary date will be.\n",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "plan_directive" ]
    },
    "GetQueuedAcctPlansMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_queued_acct_plans_m" ],
          "default" : "get_queued_acct_plans_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_number" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts..\n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "UsageSummaryRec" : {
      "type" : "object",
      "description" : "Usage summary records of the account (and optional specified usage type) for given date range\\n",
      "properties" : {
        "out_acct_no" : {
          "description" : "",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_acct_id" : {
          "description" : "This is the client-assigned identifier for the account.",
          "type" : "string"
        },
        "out_plan_instance_no" : {
          "description" : "The Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "out_plan_instance_cdid" : {
          "description" : "Client-defined plan Subscription plan instance ID.",
          "type" : "string"
        },
        "usage_type_no" : {
          "description" : "Aria-assigned unique identifier representing the type of usage that is being recorded.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type_label" : {
          "description" : "Aria-assigned the label to representing the usage type",
          "type" : "string"
        },
        "billed_ind" : {
          "description" : "Specifies billed records or unbilled records",
          "type" : "integer",
          "format" : "int64"
        },
        "total_units" : {
          "description" : "The total number of usage units",
          "type" : "number"
        },
        "total_value_amount" : {
          "description" : "The total amount of the usage",
          "type" : "number"
        },
        "total_value_currency_code" : {
          "description" : "The currency code for the usage",
          "type" : "string"
        },
        "last_usage_date" : {
          "description" : "The last date when usage is loaded",
          "type" : "string"
        },
        "usage_type_cd" : {
          "description" : "An array containing usage_type_cd(s) to denote which usage type(s) to record.",
          "type" : "string"
        }
      }
    },
    "RemovePlanUnitInstance" : {
      "type" : "object",
      "description" : "Array of plan unit instances to be removed from this account. This array is relevant only decreasing the number of units purchased for a given plan instance (plan_directive = 3 and plan_units specified in this API request is less than what is currently on the account). Note that as part of a downgrade scenario, no new plan unit instances can be assigned for this plan instance, and no fulfillment-based services associated with an existing plan unit instance can be fulfilled. If plan unit instances are provided in the remove_plan_unit_instances array, inputs provided in the assign_plan_unit_instances and update_plan_unit_instances arrays will be ignored. The plan_units parameter in this API request will take precedence over plan unit instances provided in this array. If fewer plan unit instances are specified in this array than the number of plan units being removed from the account (defined by the plan_units parameter), then the remaining plan unit instances will be removed from the plan instance using a last-in-first-out methodology. If the number of plan unit instances specified in this array exceeds the number of plan units being removed from the account (defined by the plan_units parameter), then the extra plan unit instances will be ignored and will remain on the account.\\n",
      "properties" : {
        "plan_unit_inst_no" : {
          "description" : "Aria-assigned identifier for the plan unit instance to specify an existing plan unit instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_unit_inst_id" : {
          "description" : "Client-defined identifier for the plan unit instance to specify an existing plan unit instance.\n",
          "type" : "string"
        }
      }
    },
    "GetClientCountriesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_client_countries_m" ],
          "default" : "get_client_countries_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetAcctPaymentMethodsAndTermsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_payment_methods_and_terms_m" ],
          "default" : "get_acct_payment_methods_and_terms_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "filter_status" : {
          "description" : "The API will fetch the payment methods based on the filter status.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "payments_returned" : {
          "description" : "The API will fetch the payment methods and payment terms based on the payments returned.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "StatementContactDetail" : {
      "type" : "object",
      "description" : "List of statement contacts saved on the account.",
      "properties" : {
        "billing_group_no" : {
          "description" : "Aria-assigned unique identifier for the billing group on the account",
          "type" : "integer",
          "format" : "int64"
        },
        "stmt_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the statement contact associated with a billing group on the account.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Tier" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "from" : {
          "description" : "Tiered pricing rule that specifies from units",
          "type" : "number"
        },
        "to" : {
          "description" : "Tiered pricing rule that specifies to units",
          "type" : "number"
        },
        "amount" : {
          "description" : "Tiered pricing rule that specifies rate per unit",
          "type" : "number"
        },
        "description" : {
          "description" : "This field is used to display custom rate tier description. This will override the rate tier's description at service level.\n",
          "type" : "string"
        }
      }
    },
    "SubscribeEventsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "PlanUnitInstList" : {
      "type" : "object",
      "description" : "This return value is a multidimensional array describing the detail of all available plans unit instances.\\n",
      "properties" : {
        "plan_unit_inst_no" : {
          "description" : "Aria-assigned plan unit instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_unit_inst_id" : {
          "description" : "Client-defined unique client plan unit instance identifier",
          "type" : "string"
        },
        "plan_unit_inst_status" : {
          "description" : "Plan Unit Instance Status, i.e. Active, Inactive, Queued.",
          "type" : "string"
        },
        "plan_unit_inst_service_details" : {
          "description" : "This return value of array of plan services that are fulfillment based.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstServiceDetail"
          }
        },
        "plan_unit_inst_fields" : {
          "description" : "Array of client-defined plan unit instance fields.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstField"
          }
        }
      }
    },
    "GetReversibleInvsByPaymentMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "reversible_inv_trans" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReversibleInvTran"
          }
        }
      }
    },
    "UuidInfo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "The client-defined billing primary payment method ID.",
          "type" : "string"
        },
        "uuid" : {
          "description" : "UUID generated for Credit Card number.\n",
          "type" : "string"
        }
      }
    },
    "AssignAcctPlanMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "assign_acct_plan_m" ],
          "default" : "assign_acct_plan_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "new_plan_no" : {
          "description" : "The unique identifier of the new plan replacing the existing plan on the instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "new_client_plan_id" : {
          "description" : "The client-defined identifier of the new plan replacing the existing plan on the instance.",
          "type" : "string"
        },
        "client_plan_instance_id" : {
          "description" : "Unique master plan instance client-defined identifier",
          "type" : "string"
        },
        "existing_billing_group_no" : {
          "description" : "Billing group number",
          "type" : "integer",
          "format" : "int64"
        },
        "existing_client_billing_group_id" : {
          "description" : "Client-defined unique identifier for billing group",
          "type" : "string"
        },
        "billing_group_name" : {
          "description" : "Billing Group name",
          "type" : "string"
        },
        "billing_group_description" : {
          "description" : "Billing group description",
          "type" : "string"
        },
        "client_def_billing_group_id" : {
          "description" : "Client-defined unique identifier for billing group",
          "type" : "string"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_template_group" : {
          "description" : "Notify template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_template" : {
          "description" : "Statement template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_note_template" : {
          "description" : "Credit note template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "existing_primary_payment_method_no" : {
          "description" : "Primary payment method ID",
          "type" : "integer",
          "format" : "int64"
        },
        "existing_client_primary_payment_method_id" : {
          "description" : "Client-defined unique identifier of the primary payment method",
          "type" : "string"
        },
        "existing_backup_payment_method_no" : {
          "description" : "Backup payment method ID",
          "type" : "integer",
          "format" : "int64"
        },
        "existing_client_backup_payment_method_id" : {
          "description" : "Client-defined unique identifier of the backup payment method",
          "type" : "string"
        },
        "stmt_first_name" : {
          "description" : "Statement contact first name",
          "type" : "string"
        },
        "stmt_mi" : {
          "description" : "The Middle Initial of the statement contact.",
          "type" : "string"
        },
        "stmt_last_name" : {
          "description" : "Statement contact Last name",
          "type" : "string"
        },
        "stmt_company_name" : {
          "description" : "Company name of the statement contact",
          "type" : "string"
        },
        "stmt_address1" : {
          "description" : "First address line of the statement contact",
          "type" : "string"
        },
        "stmt_address2" : {
          "description" : "Second address line of the statement contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "stmt_address3" : {
          "description" : "Third address line of the statement contact",
          "type" : "string"
        },
        "stmt_city" : {
          "description" : "City of the statement contact",
          "type" : "string"
        },
        "stmt_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "stmt_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "stmt_country" : {
          "description" : "Country of the contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "stmt_postal_cd" : {
          "description" : "Postal/Zip code for the statement contact address.",
          "type" : "string"
        },
        "stmt_phone" : {
          "description" : "The phone number of the statement contact",
          "type" : "string"
        },
        "stmt_phone_ext" : {
          "description" : "The extension for the statement contact phone",
          "type" : "string"
        },
        "stmt_cell_phone" : {
          "description" : "The contact cell phone of the statement contact.",
          "type" : "string"
        },
        "stmt_work_phone" : {
          "description" : "Work phone number of the statement contact.",
          "type" : "string"
        },
        "stmt_work_phone_ext" : {
          "description" : "The extension for the statement contact work phone",
          "type" : "string"
        },
        "stmt_fax" : {
          "description" : "The fax number for the statement contact.",
          "type" : "string"
        },
        "stmt_email" : {
          "description" : "Email of the statement contact",
          "type" : "string"
        },
        "stmt_birthdate" : {
          "description" : "The birthdate, in yyyy-mm-dd format, of the statement contact.",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_postal_cd" : {
          "description" : "Postal code for the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_ext" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_ext" : {
          "description" : "This is the work phone extension for the billing contact work phone.\n",
          "type" : "string"
        },
        "bill_fax" : {
          "description" : "Fax number of the billing contact.",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_birthdate" : {
          "description" : "Birthdate of the billing contact.\n",
          "type" : "string"
        },
        "primary_pay_method_name" : {
          "description" : "Payment method name.",
          "type" : "string"
        },
        "primary_pay_method_cdid" : {
          "description" : "Client-defined unique identifier for the payment method.",
          "type" : "string"
        },
        "primary_pay_method_description" : {
          "description" : "Payment method description",
          "type" : "string"
        },
        "primary_pay_method_type" : {
          "description" : "This is the method_id corresponding to a payment method such as credit card, Electronic Check, Pre-Paid, Net Terms, etc.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_number" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_acct_no" : {
          "description" : "The bank account number.",
          "type" : "string"
        },
        "bank_routing_no" : {
          "description" : "The ABA routing number for the bank holding bank_acct_no\n",
          "type" : "string"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "existing_dunning_group_no" : {
          "description" : "The dunning group number mapped against each master plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "existing_client_def_dunning_group_id" : {
          "description" : "The client-defined dunning group ID mapped against each master plan.",
          "type" : "string"
        },
        "dunning_group_name" : {
          "description" : "Name of the dunning group.",
          "type" : "string"
        },
        "dunning_group_description" : {
          "description" : "Description of the dunning group.",
          "type" : "string"
        },
        "client_dunning_group_id" : {
          "description" : "Client-defined dunning group identifier.",
          "type" : "string"
        },
        "dunning_process_no" : {
          "description" : "Dunning process code.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_process_id" : {
          "description" : "Client-defined dunning process identifier.",
          "type" : "string"
        },
        "alt_start_date" : {
          "description" : "Alternative start date, in yyyy-mm-dd format, for the master plan instance being assigned on the account. This date can be used to delay providing services to the account holder (for example: until they have been email validated), and must be within one billing interval of the plan being assigned.\n",
          "type" : "string"
        },
        "status_until_alt_start" : {
          "description" : "Status of the master plan instance prior to alt_start_date or alt_bill_day. If the alt_start_date or alt_bill_day field is used, this field is required and defaults to 0 (inactive) if no value is provided. If an alternate starting date or alternate bill day is provided, the master plan instance remains in this status until its start date arrives. This only applies if a prorated invoice is not created. If a prorated invoice is created, this field is ignored.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_bill_day" : {
          "description" : "Number specifying a day of the month to use as an alternate bill day. You can enter a bill date other than the anniversary date in this field. The invoice_mode must be set to 0 or must be blank to enter a date in this field, it cannot be set to 1.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoicing_option" : {
          "description" : "Indicator for performing full invoicing, and Perform Prorated Invoicing or client-defined on this account as part of this call.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "retroactive_start_date" : {
          "description" : "Date, in yyyy-mm-dd format, to set for retroactive start.",
          "type" : "string"
        },
        "override_bill_thru_date" : {
          "description" : "Applicable only for master plan assignment. When provided, this date will be used as the bill thru date for the master plan instance. The alt_start_date or retroactive_start_date input will be honored with override_bill_thru_date, but invoicing_option must be set to Perform Prorated Invoicing. The override_dates_mp_instance_no or override_dates_client_mp_instance_id parameters take precedence over this input parameter, and if provided together the override_bill_thru_date input will be ignored. The date provided must be in the future, must be after the alt_start_date (if provided), and cannot exceed one recurring billing interval. This parameter cannot be used with alt_bill_day or status_until_alt_start (defaults to Inactive). A prorated invoice will be generated for recurring services from the effective start date of the plan instance through the override_bill_thru_date provided. If the plan being assigned has no usage services, the next_bill_date (aka anniversary date) will be the override_bill_thru_date + 1 day. If the plan has usage services, then the next_bill_date will be calculated based on the usage interval to be the earliest date in the future that will ensure usage and recurring services will be invoiced together on the override_bill_thru_date + 1 day.\n",
          "type" : "string"
        },
        "override_dates_mp_instance_no" : {
          "description" : "Applicable only for master plan assignment. When provided, the billing dates for the new master plan being assigned will be aligned with the billing dates of the existing master plan instance specified (honoring the bill day of the existing master plan instance). The alt_start_date or retroactive_start_date input will be honored with the override_dates_mp_instance_no or the override_dates_client_mp_instance_id, but invoicing_option must be set to Perform Prorated Invoicing. These parameters take precedence over the override_bill_thru_date parameter, and cannot be used with alt_bill_day or status_until_alt_start (defaults to Inactive). If the recurring interval of the new master plan instance will be the same as or longer than the existing master plan instance, a prorated invoice for the master plan being assigned will be generated for recurring services from the effective start date of the plan instance through the bill_thru_date of the existing master plan instance. If the recurring interval of the new master plan instance will be shorter than the existing master plan instance, the bill_thru_date for the new master plan instance will be calculated based on its recurring interval to be the earliest date in the future that will ensure the recurring services for both master plan instances will be invoiced together on the existing master plan instance's bill_thru_date + 1 day. In the above scenarios, if the new master plan instance has no usage services, the next_bill_date (aka anniversary date) will be the bill_thru_date + 1 day. If the new master plan instance has usage services, then the next_bill_date will be calculated based on the usage interval to be the earliest date in the future that will ensure usage and recurring services will be invoiced together on the bill_thru_date + 1 day.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "override_dates_client_mp_instance_id" : {
          "description" : "Applicable only for master plan assignment. When provided, the billing dates for the new master plan being assigned will be aligned with the billing dates of the existing master plan instance specified (honoring the bill day of the existing master plan instance). The alt_start_date or retroactive_start_date input will be honored with the override_dates_mp_instance_no or the override_dates_client_mp_instance_id, but invoicing_option must be set to Perform Prorated Invoicing. These parameters take precedence over the override_bill_thru_date parameter, and cannot be used with alt_bill_day or status_until_alt_start (defaults to Inactive). If the recurring interval of the new master plan instance will be the same as or longer than the existing master plan instance, a prorated invoice for the master plan being assigned will be generated for recurring services from the effective start date of the plan instance through the bill_thru_date of the existing master plan instance. If the recurring interval of the new master plan instance will be shorter than the existing master plan instance, the bill_thru_date for the new master plan instance will be calculated based on its recurring interval to be the earliest date in the future that will ensure the recurring services for both master plan instances will be invoiced together on the existing master plan instance's bill_thru_date + 1 day. In the above scenarios, if the new master plan instance has no usage services, the next_bill_date (aka anniversary date) will be the bill_thru_date + 1 day. If the new master plan instance has usage services, then the next_bill_date will be calculated based on the usage interval to be the earliest date in the future that will ensure usage and recurring services will be invoiced together on the bill_thru_date + 1 day.\n",
          "type" : "string"
        },
        "balance_forward" : {
          "description" : "balance forward",
          "type" : "number"
        },
        "resp_level_cd" : {
          "description" : "The responsibility level code. These are values 1 through 3 as described in the legend for this argument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_acct_master_plan_inst_id" : {
          "description" : "Identifier for a parent account master plan. Required if resp_level_cd is 2 or 3.",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_plan_instance_no" : {
          "description" : "Unique identifier of a plan in the plan instance hierarchy under which the new plan will be assigned.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_parent_plan_instance_id" : {
          "description" : "Unique Client-defined identifier of a plan in the plan instance hierarchy under which the new plan will be assigned.",
          "type" : "string"
        },
        "alt_rate_schedule_no" : {
          "description" : "Alternative Rate Schedule Number. The alt_rate_schedule_no is the unique identifier for an alternative rate schedule that can be assigned to the account holder in place of the default rate schedule. This is often done by CSRs to provide special compensation or discounts as incentives to account holders.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_units" : {
          "description" : "The units of the plan added at this change",
          "type" : "number"
        },
        "coupon_codes" : {
          "description" : "An array of coupon details for the master plan instance.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CouponCode"
          }
        },
        "promo_cd" : {
          "description" : "This is the code provided the client  and used by the account holder during registration or when executing a transaction. A promotion generally provides access to a custom set of reduced-rate plans.\n",
          "type" : "string"
        },
        "mpi_surcharges" : {
          "description" : "Surcharge for master plan Instance",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MpiSurcharge"
          }
        },
        "plan_status" : {
          "description" : "Updates the plan status for the plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_description" : {
          "description" : "Updated the description for the plan instance.\n",
          "type" : "string"
        },
        "plan_instance_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanInstanceField"
          }
        },
        "assignment_directive" : {
          "description" : "The rule to be applied to this assignment request, governing the proration rule is applied. Default behavior is to make the plan change (assign/deassign a plan to an account, change units on an existing plan, etc.) immediately based on client-defined default proration rule, resulting in appropriate prorated charge and credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "offset_months" : {
          "description" : "For plan recurring intervals of longer than one month, the number of months to offset proration and first bill date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_proration_start_date" : {
          "description" : "The date, in yyyy-mm-dd format, from which the proration calculations begin. If this field is NULL, then the proration calculations begin from the current date. This date cannot be before the beginning of the current billing period.\n",
          "type" : "string"
        },
        "auto_offset_months_option" : {
          "description" : "Automatically set the offset for the billing anniversary month.",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_client_acct_group_id" : {
          "description" : "One-time collections account group  to use for this specific call.  Default collections group on the account is not changed.",
          "type" : "string"
        },
        "usage_accumulation_reset_months" : {
          "description" : "The number of reset months for each plan",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_pooling" : {
          "description" : "Indicates whether usage pooling is enabled for this plan instance. Allowable values are 'true' and 'false'.\n",
          "type" : "string"
        },
        "usage_threshold_applicability" : {
          "description" : "Usage tracking options on the plans in the account",
          "type" : "string"
        },
        "custom_rates" : {
          "description" : "An array of custom rates for the specified account number\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomRate"
          }
        },
        "effective_date" : {
          "description" : "If the assignment directive is for a future date assignment, this is the date, in yyyy-mm-dd format, on which the plan change will be executed. If this field is NULL, then the plan change will not happen until it is manually executed or until the effective_date is updated.\n",
          "type" : "string"
        },
        "offset_interval" : {
          "description" : "If assigning a change on an anniversary day, the number of billing periods by which to delay that change. If the new plan is different from the old plan, and this value is greater than 0, then the billing date continues to be the annniversary date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_rate_schedule_id" : {
          "description" : "Client-defined alternate rate schedule identifier to assign (if any). If none is specified, the default rate schedule number will be used.\n",
          "type" : "string"
        },
        "nso_bill_immediately" : {
          "description" : "Indicates whether to bill the NSO items immediately or if not set bill on next billing anniversary date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "nso_item_list" : {
          "description" : "Non-Subscription Offerings that are purchased with the plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NsoItemList"
          }
        },
        "proration_invoice_timing" : {
          "description" : "Determines whether to create a separate invoice for prorated charges immediately, or defer to the next anniversary date. Note that this will override the Proration Invoice Timing configuration saved with the plan in the product catalog.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the plan instance.",
          "type" : "string"
        },
        "nso_po_num" : {
          "description" : "Purchase order number assigned to the one-time order.",
          "type" : "string"
        },
        "cc_id" : {
          "description" : "A numeric code indicating the type of credit card.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact on this account to be used as the billing contact for the payment method. If bill_contact_no is included in the API request, all other billing contact parameters are ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "stmt_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the statement contact associated with a billing group on the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_update_services" : {
          "description" : "List of services associated with the plan being assigned or updated on the account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUpdateService"
          }
        },
        "combine_invoices" : {
          "description" : "Indicator for combining invoices when retroactive start dates, negative bill lag days, or plan changes just prior to the next billing date would otherwise have generated multiple invoices.  The allowable values are 1, 2, or 3.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_memo_template" : {
          "description" : "Credit template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "rebill_template" : {
          "description" : "Rebill template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "force_master_bill_date_reset" : {
          "description" : "Overrides the \"Sync_mstr_bill_dates_on_1st_supp\" client-level setting that determines whether or not no-charge master plan billing dates should be reset when assigning a new supplemental plan or when the supplemental plan instance status is updated to a billable status. If this value is left empty, the client-level setting will take effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "CmAppliedDetail" : {
      "type" : "object",
      "description" : "Array of charges where the Credit Memo is applied.",
      "properties" : {
        "cm_line_no_applied" : {
          "description" : "Credit memo line number.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_applied_date" : {
          "description" : "Credit memo charge applied date.",
          "type" : "string"
        },
        "cm_applied_charge_id" : {
          "description" : "Charge event number to which the credit memo is applied.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_applied_tax_event_id" : {
          "description" : "Tax event number to which the credit memo is applied.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_applied_invoice_no" : {
          "description" : "Invoice number to which the credit memo is appplied",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_applied_charge_seq_num" : {
          "description" : "Invoice sequence number.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_applied_service_no" : {
          "description" : "Service numner to which the credit memo is applied.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_applied_service_cdid" : {
          "description" : "Client defined identifier for the Service.",
          "type" : "string"
        },
        "cm_applied_service_name" : {
          "description" : "Service name.",
          "type" : "string"
        },
        "cm_applied_amount" : {
          "description" : "Applied amount from the credit memo on the charge",
          "type" : "number"
        },
        "cm_applied_plan_instance_no" : {
          "description" : "Plan instance number.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "FamTransaction" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_instance_no" : {
          "description" : "Aria generated unique identifier for the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance.",
          "type" : "string"
        },
        "transaction_id" : {
          "description" : "The unique identifier for this particular transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_type" : {
          "description" : "A numeric code for which type of transaction this is",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_desc" : {
          "description" : "The long description of this transaction",
          "type" : "string"
        },
        "transaction_amt" : {
          "description" : "The total amount of this transaction line",
          "type" : "number"
        },
        "transaction_applied_amt" : {
          "description" : "The total amount of this transaction applied to the account",
          "type" : "number"
        },
        "transaction_currency" : {
          "description" : "The currency this transaction was recorded in.",
          "type" : "string"
        },
        "transaction_create_date" : {
          "description" : "The creation date of this transaction",
          "type" : "string"
        },
        "transaction_void_date" : {
          "description" : "The date this transaction was voided",
          "type" : "string"
        },
        "transaction_stmt_no" : {
          "description" : "The statement ID of the statement this transaction was printed on, if any",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_void_reason" : {
          "description" : "The reason code for why this transaction was voided, if it was voided",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "The client-defined receipt ID for this transaction, provided in the API call which created this transaction",
          "type" : "string",
          "maxLength" : 50
        },
        "transaction_comments" : {
          "description" : "Client-defined comments on this transaction",
          "type" : "string"
        },
        "transaction_source_id" : {
          "description" : "A code defining the originating source of the transaction, such as a write-off number, payment ID, etc.",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_ref_code" : {
          "description" : "External reference code for this transaction, such as a check number or an external system ID",
          "type" : "string"
        },
        "credit_reason_code_description" : {
          "description" : "If this transaction is a credit, the description of the credit reason",
          "type" : "string"
        },
        "csr_comments" : {
          "description" : "If a CSR initiated this transaction and they entered comments in the UI, they will be displayed here",
          "type" : "string"
        },
        "transaction_seq_stmt_id" : {
          "description" : "The unique sequential statement number.",
          "type" : "string"
        }
      }
    },
    "UpdateCcBlacklistMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "UpdateAcctBillingGroupMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor\n",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "The Aria-assigned unique identifier for billing group on this account.",
          "type" : "string"
        },
        "stmt_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the statement contact associated with a billing group on the account.",
          "type" : "string"
        },
        "billing_contact_info" : {
          "description" : "Array",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingContactInfo"
          }
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        }
      }
    },
    "GetUnappliedCreditsPaymentsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_unapplied_credits_payments_m" ],
          "default" : "get_unapplied_credits_payments_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "GetAcctPlanQueuedChangesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "queued_change_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueuedChangeDetail"
          }
        }
      }
    },
    "History" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "transaction_id" : {
          "description" : "The globally-unique ID for this transaction across all transactions",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_type" : {
          "description" : "The numeric code for the type of transaction being returned.",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_desc" : {
          "description" : "The long description of this transaction",
          "type" : "string"
        },
        "transaction_amount" : {
          "description" : "The amount of this transaction",
          "type" : "number"
        },
        "transaction_applied_amount" : {
          "description" : "The amount of this transaction actually applied to the account balance, if different than above",
          "type" : "number"
        },
        "transaction_currency" : {
          "description" : "The currency this transaction was recorded in",
          "type" : "string"
        },
        "transaction_create_date" : {
          "description" : "The creation datetime of this transaction",
          "type" : "string"
        },
        "transaction_void_date" : {
          "description" : "If this transaction was voided, the void datetime",
          "type" : "string"
        },
        "statement_no" : {
          "description" : "The ID of the statement on which this transaction appears, if any",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_void_reason" : {
          "description" : "A human-readable reason for this transaction to be voided, if any",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "transaction_comments" : {
          "description" : "Client-defined comments on this transaction",
          "type" : "string"
        },
        "transaction_source_id" : {
          "description" : "A code defining the originating source of the transaction, such as a write-off number, payment ID, etc.",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_ref_code" : {
          "description" : "External reference code for this transaction, such as a check number or external reference code",
          "type" : "string"
        },
        "credit_reason_code_description" : {
          "description" : "The reason for the credit this transaction represents",
          "type" : "string"
        },
        "csr_comments" : {
          "description" : "CSR-generated comments for this transaction line, if any",
          "type" : "string"
        },
        "seq_statement_id" : {
          "description" : "The unique sequential statement number.",
          "type" : "string"
        }
      }
    },
    "SuppField" : {
      "type" : "object",
      "description" : "Assigns one or more supplemental field values to the account",
      "properties" : {
        "supp_field_name" : {
          "description" : "Name of the supplemental field. This value is required if you want to assign supplemental fields. For example, if you have any accounts that are tax-exempt or international, you must set up corresponding account supplemental fields prior to your tax provider configuration. Create fields for  the tax exemption number and for the VAT ID used by the tax provider.\n",
          "type" : "string"
        },
        "supp_field_value" : {
          "description" : "Value for the supplemental field",
          "type" : "string"
        }
      }
    },
    "GetCreditDetailsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "created_by" : {
          "description" : "Specifies the user ID that created the transaction.",
          "type" : "string"
        },
        "created_date" : {
          "description" : "Specifies the date the credit was created.",
          "type" : "string"
        },
        "amount" : {
          "description" : "The amount of service credit to create on the account.",
          "type" : "number"
        },
        "credit_type" : {
          "description" : "The type of credit: e.g. service or cash.",
          "type" : "string"
        },
        "applied_amount" : {
          "description" : "The amount of credit to be applied to the account.",
          "type" : "number"
        },
        "unapplied_amount" : {
          "description" : "Amount remaining of the total credit to apply to account.",
          "type" : "number"
        },
        "reason_code" : {
          "description" : "Reason code for why the credit was created.",
          "type" : "integer",
          "format" : "int64"
        },
        "reason_text" : {
          "description" : "The text description of the credit reason code.",
          "type" : "string"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.",
          "type" : "string"
        },
        "transaction_id" : {
          "description" : "Unique transaction ID for this credit.",
          "type" : "integer",
          "format" : "int64"
        },
        "void_transaction_id" : {
          "description" : "Unique transaction ID if cash credit was voided.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_expiry_type_ind" : {
          "description" : "Indicator which determines the expiry is based on months or till Specific Date.",
          "type" : "string"
        },
        "credit_expiry_months" : {
          "description" : "Total Months after which service credit expires.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_expiry_date" : {
          "description" : "The date on which credit expires. The date is in the format yyyy-mm-dd.",
          "type" : "string"
        },
        "eligible_service_plan_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EligibleServicePlanDetail"
          }
        },
        "out_acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "string"
        },
        "out_master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "string"
        },
        "out_client_mp_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "string"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "GetAufStatusMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "status_cd" : {
          "description" : "This is the status of the object in question for the current API call.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "load_date_time" : {
          "description" : "Date and time the file load was attempted.",
          "type" : "string"
        },
        "recs_received" : {
          "description" : "Total number of records received",
          "type" : "integer",
          "format" : "int64"
        },
        "recs_loaded" : {
          "description" : "Total number of records successfully loaded",
          "type" : "integer",
          "format" : "int64"
        },
        "recs_failed" : {
          "description" : "Total number of records that failed to load.",
          "type" : "integer",
          "format" : "int64"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetOrderMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "orders" : {
          "description" : "An array containing the order record",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Order"
          }
        }
      }
    },
    "ModifyInstanceContractMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "MpiUsageAmountThreshold" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "master_plan_instance_no" : {
          "description" : "Aria generated unique identifier for the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance.",
          "type" : "string"
        },
        "amount_threshold_dest_types" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AmountThresholdDestType"
          }
        }
      }
    },
    "VelocityData" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "action" : {
          "description" : "",
          "type" : "string"
        },
        "date" : {
          "description" : "The date and time on which the action took place. The date is in the format yyyy-mm-dd hh24:mi:ss.\n",
          "type" : "string"
        }
      }
    },
    "GetRefundablePaymentsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "refundable_payments" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RefundablePayment"
          }
        }
      }
    },
    "TransferAccountBalanceMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "account_balance_transfer_details" : {
          "description" : "Array of balance transfer details.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountBalanceTransferDetail"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "UnitThresholdDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "Returns the number of plan no.",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type_no" : {
          "description" : "Returns the number of usage type.",
          "type" : "integer",
          "format" : "int64"
        },
        "threshold_dest_type" : {
          "description" : "Returns a string representing the threshold destination type either Account A or Client C.\n",
          "type" : "string"
        },
        "threshold_balance_type" : {
          "description" : "Returns a string representing the threshold balance type either month-to-date or billing-period-to-date.\n",
          "type" : "string"
        },
        "threshold_units" : {
          "description" : "Returns the number of threshold units.",
          "type" : "number"
        },
        "usage_units_measured" : {
          "description" : "Returns the number of usage units measured.",
          "type" : "number"
        },
        "threshold_levels" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThresholdLevel"
          }
        }
      }
    },
    "CopyAcctPaymentMethodMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "payment_method_map" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentMethodMap"
          }
        }
      }
    },
    "CreditApplicationDetail" : {
      "type" : "object",
      "description" : "Array of credit memo line application.",
      "properties" : {
        "cm_no" : {
          "description" : "The unique Aria-generated number for the credit memo.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_line_no" : {
          "description" : "Credit memo line number.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_transaction_id" : {
          "description" : "Credit memo line transaction id.",
          "type" : "integer",
          "format" : "int64"
        },
        "apply_to_invoice_no" : {
          "description" : "The invoice number this credit memo line applies to.",
          "type" : "integer",
          "format" : "int64"
        },
        "apply_to_invoice_line_no" : {
          "description" : "The invoice line number this credit memo line applies to.",
          "type" : "integer",
          "format" : "int64"
        },
        "apply_to_invoice_line_tran_id" : {
          "description" : "The invoice line transaction id this credit memo line applies to.",
          "type" : "integer",
          "format" : "int64"
        },
        "gross_line_application_amt" : {
          "description" : "Gross amount to be applied against the invoice line.",
          "type" : "number"
        }
      },
      "required" : [ "cm_no", "apply_to_invoice_no", "gross_line_application_amt" ]
    },
    "ModifyAcctUniversalContractMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "modify_acct_universal_contract_m" ],
          "default" : "modify_acct_universal_contract_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_no" : {
          "description" : "Aria-assigned unique contract identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "client_contract_id" : {
          "description" : "Client assigned unique contract identifier",
          "type" : "string"
        },
        "new_client_contract_id" : {
          "description" : "Client assigned unique contract identifier",
          "type" : "string"
        },
        "type_no" : {
          "description" : "Type of action enforced at the end of this this contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "length_months" : {
          "description" : "Number of months from start_date that the given contract will be in effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "start_date" : {
          "description" : "Contract start date in the format yyyy-mm-dd\n",
          "type" : "string"
        },
        "update_comments" : {
          "description" : "Comments provided at time of last contract update.",
          "type" : "string"
        },
        "end_date" : {
          "description" : "End date of the date range covered by this line item in yyyy-mm-dd format.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "CreateInstanceContractMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "create_instance_contract_m" ],
          "default" : "create_instance_contract_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "client_contract_id" : {
          "description" : "Client assigned unique contract identifier..",
          "type" : "string"
        },
        "type_no" : {
          "description" : "The type of contract end action to be enforced by this contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "length_months" : {
          "description" : "Number of months, starting from start_date, that the given contract will be in effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cancel_fee" : {
          "description" : "Fee to be charged if the plan instance is cancelled by the account holder.  For a multi-plan contract, this will be applicable only when the last remaining plan instance is cancelled prior to the contract's end date.\n",
          "type" : "number"
        },
        "create_comments" : {
          "description" : "CSR or API-provided comments provided at time of contract creation.\n",
          "type" : "string"
        },
        "start_date" : {
          "description" : "Contract start date in yyyy-mm-dd format. Defaults to the current date if not specified. This field is required for a plan or contract with a future start date.\n",
          "type" : "string"
        },
        "end_date" : {
          "description" : "End date of the date range covered by this line item in yyyy-mm-dd format.\n",
          "type" : "string"
        },
        "do_auto_discard" : {
          "description" : "Whether, upon creation of this contract, the system automatically discards any existing contracts in effect that cover the same plan or set of plans.\n",
          "type" : "string"
        },
        "cascade_action" : {
          "description" : "An indicator on the plan_instance associated to the contract should indicate if the cascade option was selected when the plan_instance was assigned to the contract.\n",
          "type" : "string"
        },
        "contract_plan_instances" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractPlanInstance"
          }
        },
        "contract_rollover_custom_rates" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractRolloverCustomRate"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "type_no", "contract_plan_instances" ]
    },
    "GetCashCreditsDetailsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "cash_credits" : {
          "description" : "Array that contains cash credits.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CashCredit"
          }
        }
      }
    },
    "GetPaymentsOnInvoiceMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "invoice_payment_details" : {
          "description" : "Array of invoice payments returned upon succesful completion of the API call.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoicePaymentDetail"
          }
        }
      }
    },
    "GetStatementForInvSizeMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "num_chars" : {
          "description" : "The number of the characters in the statement.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CustomRate" : {
      "type" : "object",
      "description" : "An array of custom rates for the specified account number\\n",
      "properties" : {
        "custom_rate_service_no" : {
          "description" : "'The service number for the new custom rate'\n",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_seq_no" : {
          "description" : "'The sequence number for this line of the rate schedule'\n",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_from_unit" : {
          "description" : "'Tiered pricing, \"FROM\" unit'\n",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_to_unit" : {
          "description" : "'Tiered pricing, \"TO\" unit'\n",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_per_unit" : {
          "description" : "'The rate to charge per unit on this tier'\n",
          "type" : "number"
        },
        "client_custom_rate_service_id" : {
          "description" : "The client-defined service ID for the new custom rate.",
          "type" : "string"
        }
      }
    },
    "AcctSuppField" : {
      "type" : "object",
      "description" : "Array of supplemental field values to be updated. This array contains three sub-arrays: supp_field_names, supp_field_values, and supp_field_directives. The first value in each sub-array is automatically associated with the first values in the other sub-arrays, as are the second values, third values and so on. Each sub-array must contain the same number of values, or the API fails.\\n",
      "properties" : {
        "supp_field_name" : {
          "description" : "Pipe-delimited array of supplemental field names. This value is required if you want to assign supplemental fields. For example, if you have any accounts that are tax-exempt or international, you must set up corresponding account supplemental fields prior to your tax provider configuration. Create fields for  the tax exemption number and for the VAT ID used by the tax provider.\n",
          "type" : "string"
        },
        "supp_field_value" : {
          "description" : "Pipe-delimited array of supplemental field values.",
          "type" : "string"
        },
        "supp_field_directive" : {
          "description" : "Pipe-delimited array of supplemental field directives.",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "supp_field_name" ]
    },
    "RateSchedsT" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "schedule_no" : {
          "description" : "The ID of this rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "schedule_name" : {
          "description" : "The name of this rate schedule",
          "type" : "string"
        }
      }
    },
    "GetAcctDunningGroupDetailsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_dunning_group_details_m" ],
          "default" : "get_acct_dunning_group_details_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "plan_instance_no" : {
          "description" : "The Aria-assigned unique identifier of the master plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the master plan instance.\n",
          "type" : "string"
        },
        "dunning_group_no" : {
          "description" : "The unique identifier of the dunning group.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_group_id" : {
          "description" : "The client-defined identifier of the dunning group.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "CancelledSuppPlan" : {
      "type" : "object",
      "description" : "An array containing the supplemental plans cancelled.\\n",
      "properties" : {
        "supp_plan_no" : {
          "description" : "The unique ID of the supplemental plan",
          "type" : "integer",
          "format" : "int64"
        },
        "supp_plan_name" : {
          "description" : "The name of the supplemental plan",
          "type" : "string"
        },
        "supp_proration_result_amount" : {
          "description" : "The result of the proration calculation for the unused portion of the billing period",
          "type" : "number"
        },
        "client_supp_plan_id" : {
          "description" : "Client-defined supplemental plan ID.",
          "type" : "string"
        }
      }
    },
    "BackupContact" : {
      "type" : "object",
      "description" : "Array of backup contacts",
      "properties" : {
        "bkup_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact.",
          "type" : "integer",
          "format" : "int64"
        },
        "bkup_first_name" : {
          "description" : "First name of the backup contact",
          "type" : "string"
        },
        "bkup_middle_initial" : {
          "description" : "Middle initial of the backup contact",
          "type" : "string"
        },
        "bkup_last_name" : {
          "description" : "Last name of the backup contact",
          "type" : "string"
        },
        "bkup_company_name" : {
          "description" : "Company name of the backup contact",
          "type" : "string"
        },
        "bkup_address1" : {
          "description" : "First address line of the backup contact",
          "type" : "string"
        },
        "bkup_address2" : {
          "description" : "Second address line of the backup contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bkup_address3" : {
          "description" : "Third address line of the backup contact",
          "type" : "string"
        },
        "bkup_city" : {
          "description" : "City of the backup contact",
          "type" : "string"
        },
        "bkup_locality" : {
          "description" : "Locality of the backup contact",
          "type" : "string"
        },
        "bkup_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bkup_country" : {
          "description" : "Country of the backup contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bkup_postal_cd" : {
          "description" : "Postal code of the backup contact",
          "type" : "string"
        },
        "bkup_phone" : {
          "description" : "Phone number of the backup contact",
          "type" : "string"
        },
        "bkup_phone_ext" : {
          "description" : "Phone extension of the backup contact",
          "type" : "string"
        },
        "bkup_cell_phone" : {
          "description" : "Cell phone number of the backup contact",
          "type" : "string"
        },
        "bkup_work_phone" : {
          "description" : "Work phone number of the backup contact",
          "type" : "string"
        },
        "bkup_work_phone_ext" : {
          "description" : "Work phone extension of the backup contact",
          "type" : "string"
        },
        "bkup_fax" : {
          "description" : "Fax phone number of the backup contact",
          "type" : "string"
        },
        "bkup_email" : {
          "description" : "Email of the backup contact",
          "type" : "string"
        },
        "bkup_birthdate" : {
          "description" : "Date of birth of the backup contact",
          "type" : "string"
        },
        "bkup_address_verification_code" : {
          "description" : "Verification code for the backup contact address",
          "type" : "string"
        },
        "bkup_address_match_score" : {
          "description" : "Match score for the backup contact address",
          "type" : "number"
        },
        "bkup_billing_group_no" : {
          "description" : "System-defined billing group number for the backup contact",
          "type" : "integer",
          "format" : "int64"
        },
        "bkup_client_billing_group_id" : {
          "description" : "Client-defined billing group identifier for the backup contact",
          "type" : "string"
        }
      }
    },
    "VoidTransactionMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "void_transaction_m" ],
          "default" : "void_transaction_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction\n",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call. NOTE:  For this API method, comments are required (normally comments are not required).\n",
          "type" : "string"
        },
        "reason_code" : {
          "description" : "The reason a given credit was/is to be applied to the account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "discard_invoice_usage" : {
          "description" : "Determine whether the loaded usages should be discarded or not.\n",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "transaction_id", "comments", "reason_code" ]
    },
    "SurchargeRate" : {
      "type" : "object",
      "description" : "Represents the rates for the default rate schedule for the default currency for the plan\\n",
      "properties" : {
        "rate_seq_no" : {
          "description" : "Sequential number in the rate schedule for dertermining tiers",
          "type" : "integer",
          "format" : "int64"
        },
        "from_unit" : {
          "description" : "Tiered Units (from) This value represents the start of a tiered range of values.\n",
          "type" : "number"
        },
        "to_unit" : {
          "description" : "Tiered Units (to) This value represents the end of the range for a single tier of values.\n",
          "type" : "number"
        },
        "rate_per_unit" : {
          "description" : "The cost per unit of this service over the time period the plan is billed for",
          "type" : "number"
        },
        "include_zero" : {
          "description" : "This indicator indicates whether the rate schedule has includes zero or not.",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_sched_is_assigned_ind" : {
          "description" : "This indicator indicates the assigned rate schedule for the surcharge.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AuthenticateCallerMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "authenticate_caller_m" ],
          "default" : "authenticate_caller_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "MasterPlansDetail" : {
      "type" : "object",
      "description" : "Allows multiple master plans subscription for an account",
      "properties" : {
        "plan_no" : {
          "description" : "System-defined master subscription plan number. This is the plan number you are assigning to the account. You must assign at least one plan to the account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client-defined master plan subscription plan ID.",
          "type" : "string"
        },
        "plan_instance_description" : {
          "description" : "Description for each assigned master plan",
          "type" : "string"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined ID for each assigned master plan",
          "type" : "string"
        },
        "plan_instance_idx" : {
          "description" : "For non-persistent referencing of a plan instance within the API request",
          "type" : "integer",
          "format" : "int64"
        },
        "promo_cd" : {
          "description" : "Code provided by the client and used by the account holder during registration or when executing a transaction. A promotion generally provides access to a custom set of reduced-rate plans\n",
          "type" : "string"
        },
        "plan_instance_units" : {
          "description" : "Multiplier variable for the recurring rate on the plan. Generally this value is 1, indicating the face value of the plan's recurring fee is used\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_unit_instances" : {
          "description" : "Array of plan unit instances\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstance"
          }
        },
        "plan_instance_status" : {
          "description" : "Status of the object in question for the current API call\n",
          "type" : "integer",
          "format" : "int64"
        },
        "resp_level_cd" : {
          "description" : "Responsibility level code. This determines how the usage, invoicing, statement generation, and payment processing are managed under this master plan instance. <p>If the value is \"1\" (Standard Self Pay), the Master Plan Instance must have a billing group, which you assign using either client_billing_group_id or billing_group_idx. <p>If the value is \"2\" (Parent Pay) or \"3\" (Parent Usage & Pay), the Master Plan Instance does not need a billing group, but must have a responsible Master Plan Instance, which you assign using either resp_master_plan_inst_no, client_resp_master_plan_inst_id, or resp_master_plan_inst_idx. The responsible Master Plan Instance must be owned by another account that is a parent or ancestor of the account you are creating.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "resp_master_plan_inst_no" : {
          "description" : "System-defined identifier for the master plan instance in a parent account that is responsible for payment and/or usage tracking of this master plan. The responsible master plan instance must exist before this API request is executed. Either this field, client_resp_master_plan_inst_id, or resp_master_plan_inst_idx must be valued if the resp_level_cd is set to either \"2\" or \"3\". Otherwise, it must be blank.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_resp_master_plan_inst_id" : {
          "description" : "Client-defined identifier for the master plan instance in a parent account that is responsible for payment and/or usage tracking of this master plan. The responsible master plan instance must either exist before this API request is executed, or is created within this API request. Either this field, resp_master_plan_inst_id, or resp_master_plan_inst_idx must be valued if the resp_level_cd is set to either \"2\" or \"3\". Otherwise, it must be blank.\n",
          "type" : "string"
        },
        "resp_master_plan_inst_idx" : {
          "description" : "Non-persistent identifier for the master plan instance in a parent account that is responsible for payment and/or usage tracking of this master plan instance. The responsible master plan instance must be created within this API request. Either this field, client_resp_master_plan_inst_id, or resp_master_plan_inst_no must be valued if the resp_level_cd is set to either \"2\" or \"3\". Otherwise, it must be blank.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined identifier for the billing group to which this master plan instance belongs. Either this field, or billing_group_idx must be valued if the resp_level_cd is set to \"1\". Otherwise, it must be blank.\n",
          "type" : "string"
        },
        "billing_group_idx" : {
          "description" : "Non-persistent identifier for the billing group to which this master plan instance belongs. Either this field, or client_billing_group_id must be valued if the resp_level_cd is set to \"1\". Otherwise, it must be blank.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_group_id" : {
          "description" : "Client-defined identifier for the dunning group to which this master plan instance belongs. Each master plan instance must be assigned to one of the dunning groups defined in this API request, using either the client_dunning_group_id or dunning_group_idx.\n",
          "type" : "string"
        },
        "dunning_group_idx" : {
          "description" : "Non-persistent identifier for the dunning group to which this master plan instance belongs. Each master plan instance must be assigned to one of the dunning groups defined in this API request, using either the client_dunning_group_id or dunning_group_idx.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "status_until_alt_start" : {
          "description" : "Status of the master plan instance prior to alt_start_date or alt_bill_day. If the alt_start_date or alt_bill_day field is used, this field is required and defaults to 0 (inactive) if no value is provided. If an alternate starting date or alternate bill day is provided, the master plan instance remains in this status until its start date arrives. This only applies if a prorated invoice is not created. If a prorated invoice is created, this field is ignored. When a master plan is assigned with an alt_start_date and  status_until_alt_start as pending activation (32), then the user will not have the  option to delete the queued future plan changes for the master plan and supplemental  plan. If the user needs to delete the queued future plan change,  then select a status other than pending activation.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "balance_forward" : {
          "description" : "balance forward",
          "type" : "number"
        },
        "coupon_codes" : {
          "description" : "Array of coupon details for the account",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CouponCode"
          }
        },
        "mpi_surcharges" : {
          "description" : "Surcharge for master plan.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MpiSurcharge"
          }
        },
        "nso_bill_immediately" : {
          "description" : "Indicates whether to bill the NSO items immediately or, if not, to set bill on next billing anniversary date\n",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_services" : {
          "description" : "List of services associated with the master plan being assigned on the account",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlanService"
          }
        },
        "master_plan_nso_list" : {
          "description" : "Non-Subscription Offerings that are purchased with the plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlanNsoList"
          }
        },
        "nso_po_num" : {
          "description" : "Purchase order number assigned to the one-time order",
          "type" : "string"
        },
        "plan_instance_fields_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanInstanceFieldsInfo"
          }
        },
        "alt_rate_schedule_no" : {
          "description" : "Aria-assigned identifier for an alternative rate schedule that is assigned to the master plan in place of the default rate schedule\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_rate_schedule_id" : {
          "description" : "Client-defined alternate rate schedule ID",
          "type" : "string"
        },
        "usage_accumulation_reset_months" : {
          "description" : "Number of reset months for each plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_pooling" : {
          "description" : "Indicates whether usage pooling is enabled for this plan instance. Allowable values are 'true' and 'false'.\n",
          "type" : "string"
        },
        "usage_threshold_applicability" : {
          "description" : "Usage tracking options on the plans in the account.",
          "type" : "string"
        },
        "custom_rates" : {
          "description" : "Array of custom rates for the services provided in the master plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomRate"
          }
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the plan instance",
          "type" : "string"
        },
        "supp_plan" : {
          "description" : "Supplemental plan instances assigned directly under a master plan instance\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppPlan"
          }
        }
      }
    },
    "UpdateContactMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_contact_m" ],
          "default" : "update_contact_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "contact_ind" : {
          "description" : "Contact Indicator that indicates contact input type. 1 Account Contact 2 Primary Billing Contact 3 Backup Billing Contact 4 Statement Contact\n",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_group_no" : {
          "description" : "Billing Group Number\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined Master Billing Group ID.",
          "type" : "string"
        },
        "first_name" : {
          "description" : "Contact First Name\n",
          "type" : "string"
        },
        "middle_initial" : {
          "description" : "Middle Initial of the Contact.\n",
          "type" : "string"
        },
        "last_name" : {
          "description" : "Contact Last Name\n",
          "type" : "string"
        },
        "company_name" : {
          "description" : "Company name of the contact\n",
          "type" : "string"
        },
        "address1" : {
          "description" : "First address line of the contact.",
          "type" : "string"
        },
        "address2" : {
          "description" : "Second address line of the contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "address3" : {
          "description" : "The third line of the address",
          "type" : "string"
        },
        "city" : {
          "description" : "City of the contact\n",
          "type" : "string"
        },
        "locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "state_prov" : {
          "description" : "State or Province of the contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "country_cd" : {
          "description" : "Country of the contact. The ISO-compliant 2-character country code abbreviation in upper case.\n",
          "type" : "string"
        },
        "postal_cd" : {
          "description" : "Postal/Zip code for the contact address.\n",
          "type" : "string"
        },
        "phone" : {
          "description" : "The phone number of the contact\n",
          "type" : "string"
        },
        "phone_ext" : {
          "description" : "The extension for the contact phone\n",
          "type" : "string"
        },
        "cell_phone" : {
          "description" : "The contact cell phone.\n",
          "type" : "string"
        },
        "work_phone" : {
          "description" : "Work phone number of the contact.\n",
          "type" : "string"
        },
        "work_phone_ext" : {
          "description" : "The extension for the contact work phone\n",
          "type" : "string"
        },
        "fax" : {
          "description" : "The FAX phone number for the contact.\n",
          "type" : "string"
        },
        "email" : {
          "description" : "Email of the contact\n",
          "type" : "string"
        },
        "birthdate" : {
          "description" : "Birthdate of the contact in yyyy-mm-dd format.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "contact_ind" ]
    },
    "GenRbMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "gen_rb_m" ],
          "default" : "gen_rb_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "orig_invoice_no" : {
          "description" : "Original invoice number for rebilling purposes.",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_statement_address_seq" : {
          "description" : "An alternative statement contact for statement generation.",
          "type" : "integer",
          "format" : "int64"
        },
        "reason_cd" : {
          "description" : "Reason code for rebill.",
          "type" : "integer",
          "format" : "int64"
        },
        "rb_comments" : {
          "description" : "Explanatory text for rebill.",
          "type" : "string"
        },
        "rb_line_items" : {
          "description" : "Array of rebill invoice line items.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RbLineItem"
          }
        },
        "do_collect" : {
          "description" : "Indicates whether to collect from the account holder as part of the rebill process. Allowable values are 1= yes, 0 = no. If no value is passed then the client parameter \"autocollect on rebill\" dictates the behavior.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "do_write" : {
          "description" : "Boolean indicator informing Aria whether or not to actually perform the requested operation. If 'false' is passed in this field Aria will, if applicable, calculate any potential effects stemming from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that wish to present the user with a 'confirmation page' informing of the would-be effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "orig_invoice_no", "reason_cd", "rb_line_items" ]
    },
    "ItemRate" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "price" : {
          "description" : "The total price for this item",
          "type" : "number"
        },
        "price_per_unit" : {
          "description" : "The price for a single unit of this item",
          "type" : "number"
        },
        "currency_cd" : {
          "description" : "The ISO-compatible 3-digit currency code for the currency this item price bills in",
          "type" : "string"
        },
        "schedule" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Schedule"
          }
        }
      }
    },
    "OrderItem" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "line_no" : {
          "description" : "Line number of this particular row of the order",
          "type" : "integer",
          "format" : "int64"
        },
        "client_sku" : {
          "description" : "Client SKU of the NSO/Inventory item.",
          "type" : "string"
        },
        "label" : {
          "description" : "Label or short description of this item",
          "type" : "string"
        },
        "alt_label" : {
          "description" : "Alternate label to use during invoicing",
          "type" : "string"
        },
        "long_desc" : {
          "description" : "Long description of this order item",
          "type" : "string"
        },
        "units" : {
          "description" : "The number of units of this order item placed on this particular order",
          "type" : "number"
        },
        "unit_amount" : {
          "description" : "The charge per unit",
          "type" : "number"
        },
        "line_amount" : {
          "description" : "The total charge for this line",
          "type" : "number"
        },
        "line_comments" : {
          "description" : "Any client-defined comments, from a CSR or automated system, for this particular line item",
          "type" : "string"
        },
        "item_svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_svc_location_id" : {
          "description" : "The client-defined unique identifier for the origin location for the service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.",
          "type" : "string"
        },
        "item_dest_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the destination contact for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "MasterPlansInfo" : {
      "type" : "object",
      "description" : "If billing groups are not excluded, then this array returns all the associated master plan instances for each billing group (provided this is a self-pay account). If billing groups are excluded (or if this is a parent-pay account), then this array returns all the master plan instances on this account.",
      "properties" : {
        "client_master_plan_instance_id" : {
          "description" : "Client-defined plan instance ID for each assigned master plan.",
          "type" : "string"
        },
        "client_master_plan_id" : {
          "description" : "The client-defined unique ID for plan this line represents",
          "type" : "string"
        },
        "master_plan_instance_description" : {
          "description" : "Description for each assigned master plan",
          "type" : "string"
        },
        "client_dunning_group_id" : {
          "description" : "The client-defined dunning group ID mapped against each master plan.",
          "type" : "string"
        },
        "client_billing_group_id" : {
          "description" : "The client-defined billing group ID mapped against each master plan.",
          "type" : "string"
        },
        "alt_rate_schedule_no" : {
          "description" : "The alternate rate schedule number for the master subscription plan being considered.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_rate_schedule_id" : {
          "description" : "The client-defined alternate rate schedule ID for the master subscription plan being considered.\n",
          "type" : "string"
        },
        "init_free_period_uom_cd" : {
          "description" : "Units associated with the duration of the initial free period (used in conjunction with init_free_period_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "coupon_codes" : {
          "description" : "An array of coupon details for each master plan instance.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CouponCode"
          }
        },
        "master_plan_product_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlanProductField"
          }
        },
        "mp_plan_inst_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MpPlanInstField"
          }
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the master plan instance.",
          "type" : "string"
        },
        "master_plans_services" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlansService"
          }
        },
        "supp_plans_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppPlansInfo"
          }
        },
        "master_plan_instance_no" : {
          "description" : "Unique plan instance number for each assigned master plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_no" : {
          "description" : "The Master Subscription plan number.",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_group_no" : {
          "description" : "The dunning group number mapped against each master plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_group_name" : {
          "description" : "Name of the dunning group.",
          "type" : "string"
        },
        "dunning_group_description" : {
          "description" : "Description of the dunning group.",
          "type" : "string"
        },
        "dunning_process_no" : {
          "description" : "Dunning process.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_process_id" : {
          "description" : "Client-defined dunning process identifier.",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "The billing group number mapped against each master plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_instance_status" : {
          "description" : "This is the status of the object in question for the current API call.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "mp_instance_status_label" : {
          "description" : "Status label associated with master plan instance status code.\n",
          "type" : "string"
        },
        "master_plan_units" : {
          "description" : "This is multiplier variable for the recurring rate on the plan. Generally this value is 1, indicating the face value of the plan's recurring fee is used.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "resp_level_cd" : {
          "description" : "The responsibility level code. These are values 1 through 4 as described in the legend for this argument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_master_plan_inst_no" : {
          "description" : "The system-defined master plan instance number of the parent account. This field is required if the resp_level_cd is not equal to 1",
          "type" : "integer",
          "format" : "int64"
        },
        "promo_cd" : {
          "description" : "This is the code provided the client  and used by the account holder during registration or when executing a transaction. A promotion generally provides access to a custom set of reduced-rate plans.\n",
          "type" : "string"
        },
        "bill_day" : {
          "description" : "Day of the month that the account is billed.",
          "type" : "integer",
          "format" : "int64"
        },
        "last_arrears_bill_thru_date" : {
          "description" : "The most recent date at which the account was fully billed in arrears",
          "type" : "string"
        },
        "last_bill_date" : {
          "description" : "The last date the account was billed",
          "type" : "string"
        },
        "last_bill_thru_date" : {
          "description" : "The date through which the account has been billed.",
          "type" : "string"
        },
        "next_bill_date" : {
          "description" : "The next bill date for the account.",
          "type" : "string"
        },
        "plan_date" : {
          "description" : "The date the plan assigned to the account.",
          "type" : "string"
        },
        "status_date" : {
          "description" : "This is the date the status on the account was set.",
          "type" : "string"
        },
        "master_plan_instance_balance" : {
          "description" : "Stack balance of each master plan",
          "type" : "number"
        },
        "status_degrade_date" : {
          "description" : "Specifies the date, in yyyy-mm-dd format, when the plan instance status was degraded.",
          "type" : "string"
        },
        "recurring_billing_interval" : {
          "description" : "Recurring billing interval associated with the assigned rate schedule.",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_billing_interval" : {
          "description" : "Usage billing interval associated with the assigned rate schedule.",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_plan_status" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status" : {
          "description" : "Status used for the master plan instance at the completion of the rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_duration" : {
          "description" : "Duration of the plan status rollover period, after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status (used in conjuction with rollover_plan_status_uom_cd).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_uom_cd" : {
          "description" : "Units associated with the duration of the plan status rollover period after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status. (used in conjunction with rollover_plan_status_duration).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_duration" : {
          "description" : "Duration of the initial free period (used in conjunction with init_free_period_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_state" : {
          "description" : "Dunning state assigned to the master plan instance. In Progress indicates the master plan is in dunning. None indicates the master plan is not in dunning. Note that dunning state is applicable only for master plans and is set to Complete by the system once the dunning process is completed.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_step" : {
          "description" : "Current dunning step of the plan instance (applicable only for master plans currently in dunning).",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_degrade_date" : {
          "description" : "Next future date on which the plan instance would advance to the next dunning step (applicable only for master plans currently in dunning).",
          "type" : "string"
        },
        "plan_deprovisioned_date" : {
          "description" : "The date on which the current plan on this plan instance was suspended, cancelled or terminated.",
          "type" : "string"
        }
      }
    },
    "GetClientPlanServiceRatesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_service_rates" : {
          "description" : "Represents the rates for the default rate schedule for the default currency for the plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanServiceRate"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetClientItemsAllMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "all_client_item_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllClientItemDetail"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "CollectionAcctGroupsUpdate" : {
      "type" : "object",
      "description" : "Array of account collection groups to update",
      "properties" : {
        "collection_acct_group_no" : {
          "description" : "Array of collections account groups.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_collection_acct_group_id" : {
          "description" : "Array of collections account group IDs to which this account should be assigned",
          "type" : "string"
        },
        "collection_acct_grp_directive" : {
          "description" : "Whether to add or remove the account to or from the specified groups",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetPlansByPromoCodeMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_plans_by_promo_code_m" ],
          "default" : "get_plans_by_promo_code_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "promo_code" : {
          "description" : "This is the code provided the client  and used by the account holder during registration or when executing a transaction.A promotion generally provides\n access to a custom set of reduced-rate plans.\n",
          "type" : "string"
        },
        "include_rs_summary" : {
          "description" : "If set to \"true\", will retrieve all of the rates and rate schedules associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "include_translations" : {
          "description" : "Setting this flag as True will fetch the translated fields in all the locales defined. If not passed it defaults to False.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetCmDetailsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "cm_no_out" : {
          "description" : "The Aria generated credit memo number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_cm_seq_id" : {
          "description" : "The user specified sequence ID created for the credit memo.",
          "type" : "string"
        },
        "credit_ref_type" : {
          "description" : "Credit Memo Type Flag. 0 or NULl - Invoice Based Credit memo, 1 - General, 2 - Price Change, 3 - Cancelation",
          "type" : "string"
        },
        "created_by" : {
          "description" : "User ID that created the credit memo.",
          "type" : "string"
        },
        "created_date" : {
          "description" : "Date the credit memo was created in the system.",
          "type" : "string"
        },
        "credit_reason_code" : {
          "description" : "Reason code for the credit memo.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_comments" : {
          "description" : "Credit memo comments.",
          "type" : "string"
        },
        "orig_invoice_no" : {
          "description" : "The invoice the credit memo was created against and applied to.",
          "type" : "string"
        },
        "cm_total" : {
          "description" : "Total amount of the credit memo.",
          "type" : "number"
        },
        "customer_note" : {
          "description" : "Customer note",
          "type" : "string"
        },
        "cm_line_details" : {
          "description" : "Array of credit transaction details.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CmLineDetail"
          }
        },
        "cm_tax_details" : {
          "description" : "Array of tax details.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CmTaxDetail"
          }
        },
        "cm_applied_details" : {
          "description" : "Array of charges where the Credit Memo is applied.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CmAppliedDetail"
          }
        }
      }
    },
    "SpecificChargeTransactionId" : {
      "type" : "object",
      "description" : "A list of specific charges, see below",
      "properties" : {
        "specific_charge_transaction_id" : {
          "description" : "Unique transaction ID for specific charges, usually when the account holder makes a purchase that is not part of their normal recurring charges.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AccountBalanceTransferDetail" : {
      "type" : "object",
      "description" : "Array of balance transfer details.",
      "properties" : {
        "source_master_plan_instance_no" : {
          "description" : "Source master plan instance no which has balance",
          "type" : "integer",
          "format" : "int64"
        },
        "destination_master_plan_instance_no" : {
          "description" : "Destination master plan instance which has received the balance",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "balance_transfer_amount" : {
          "description" : "The amount of money transferred from the Source to the Target account for this transaction.\n",
          "type" : "number"
        }
      }
    },
    "WriteoffDetail" : {
      "type" : "object",
      "description" : "A multidimensional array containing the details of all writeoffs applied to an Aria account.\\n",
      "properties" : {
        "invoice_no" : {
          "description" : "The unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_bill_date" : {
          "description" : "The date the invoice was originally billed. The date is in the format yyyy-mm-dd.\n",
          "type" : "string"
        },
        "invoice_transaction_id" : {
          "description" : "The line number that is written off.",
          "type" : "integer",
          "format" : "int64"
        },
        "original_transaction_amount" : {
          "description" : "The total invoice line item value that was originally billed.\n",
          "type" : "number"
        },
        "writeoff_transaction_amount" : {
          "description" : "The amount written off from this specific line item.\n",
          "type" : "number"
        },
        "writeoff_transaction_start_date" : {
          "description" : "The effective start date of the original line item that is written off if it was a recurring fee service. The date is in the format yyyy-mm-dd.\n",
          "type" : "string"
        },
        "writeoff_transaction_end_date" : {
          "description" : "The effective end date of the original line item that is written off if it was a recurring fee service. The date is in the format yyyy-mm-dd.\n",
          "type" : "string"
        }
      }
    },
    "GetCmListMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_cm_list_m" ],
          "default" : "get_cm_list_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "BillingGroup" : {
      "type" : "object",
      "description" : "This array contains information about the account's billing groups. A billing group defines the statement configuration, primary payment method, and\\/or backup payment method for one or more master plan instances.\\n",
      "properties" : {
        "billing_group_name" : {
          "description" : "Billing group name.",
          "type" : "string"
        },
        "billing_group_description" : {
          "description" : "Billing group description.",
          "type" : "string"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined billing group ID. This value must be unique across all client accounts. This field can also be used as a reference to assign this billing group to one or more master plan instances within this API request. Either the client_billing_group_id or billing_group_idx must be defined if the billing group is used by one or more master plans within the API request.\n",
          "type" : "string"
        },
        "billing_group_idx" : {
          "description" : "Non-persistent billing group identifier. This numeric identifier (1 for the first billing group, 2 for the second, and etc.) allows the billing group to be assigned to one or more Master Plan Instances within this API request. Either the client_billing_group_id or billing_group_idx must be defined if the billing group is used by one or more master plans within the API request.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_template_group" : {
          "description" : "Notify template number",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_template" : {
          "description" : "Statement template number",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_note_template" : {
          "description" : "Credit note template number",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_option" : {
          "description" : "This allows you to select either payment methods (such as a credit card or other electronic form of payment) or payment terms (such as a physical check) when creating or modifying a billing group'\n",
          "type" : "string"
        },
        "primary_client_payment_method_id" : {
          "description" : "Client-defined identifier for the billing group's primary payment method.\n",
          "type" : "string"
        },
        "primary_payment_method_idx" : {
          "description" : "Non-persistent identifier for the billing group's primary payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "backup_client_payment_method_id" : {
          "description" : "Client-defined identifier for the billing group's backup payment method.",
          "type" : "string"
        },
        "backup_payment_method_idx" : {
          "description" : "Non-persistent identifier for the billing group's backup payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "stmt_contact_idx" : {
          "description" : "For non-persistent referencing of a contact in the contacts array within the API request. If an idx value is specified, inputs provided for other account contact fields will be ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "first_name" : {
          "description" : "First name of the statement contact",
          "type" : "string"
        },
        "mi" : {
          "description" : "Middle initial of the statement contact",
          "type" : "string"
        },
        "last_name" : {
          "description" : "Last name of the statement contact",
          "type" : "string"
        },
        "company_name" : {
          "description" : "Company name of the statement contact",
          "type" : "string"
        },
        "address1" : {
          "description" : "First address line of the contact.",
          "type" : "string"
        },
        "address2" : {
          "description" : "Second address line of the statement contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "address3" : {
          "description" : "The third line of the address",
          "type" : "string"
        },
        "city" : {
          "description" : "City of the statement contact",
          "type" : "string"
        },
        "locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "state_prov" : {
          "description" : "State or Province of the contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "country" : {
          "description" : "Country of the statement contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "postal_cd" : {
          "description" : "Postal/Zip code for the statement contact's address",
          "type" : "string"
        },
        "phone" : {
          "description" : "Phone number of the statement contact",
          "type" : "string"
        },
        "phone_ext" : {
          "description" : "Extension for the statement contact's phone number.\n",
          "type" : "string"
        },
        "cell_phone" : {
          "description" : "Cell phone number of the statement contact",
          "type" : "string"
        },
        "work_phone" : {
          "description" : "Work phone number of the statement contact",
          "type" : "string"
        },
        "work_phone_ext" : {
          "description" : "Extension for the statement contact's work phone.\n",
          "type" : "string"
        },
        "fax" : {
          "description" : "Fax phone number for the statement contact",
          "type" : "string"
        },
        "email" : {
          "description" : "Email for the statement contact",
          "type" : "string"
        },
        "birthdate" : {
          "description" : "Birthdate of the contact in yyyy-mm-dd format.",
          "type" : "string"
        },
        "list_start_master_file" : {
          "description" : "Indicates whether the account is listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_terms_no" : {
          "description" : "Payment terms number assigned to the account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_terms_name" : {
          "description" : "Payment terms name assigned to the account.\n",
          "type" : "string"
        },
        "client_payment_term_id" : {
          "description" : "Client-defined identifier for the billing group's payment term\n",
          "type" : "string"
        },
        "ean_gln_num" : {
          "description" : "'This is the European Article Number or Global Location Number that is a required field if a payment option is terms AND client payment term ID matches a term in which the payment term type equals EAN/GLN. This number is provided by Aria's client's customers and is unique to each customer (account).'\n",
          "type" : "string"
        },
        "ean_gln_requisition_num" : {
          "description" : "'This is the European Article Number requisition number or Global Location Number requisition number that is a required field if a payment option is terms AND client payment term ID matches a term in which the payment term type equals EAN/GLN. This number is provided by Aria's client's customers and is used to track their individual projects similarly to a purchase order. This number is generated by the individual customer (account) and is not provided by any other party'\n",
          "type" : "string"
        },
        "credit_memo_template" : {
          "description" : "Credit template no.",
          "type" : "integer",
          "format" : "int64"
        },
        "rebill_template" : {
          "description" : "Rebill template no.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AdjustAcctPlanBillingDatesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "adjust_acct_plan_billing_dates_m" ],
          "default" : "adjust_acct_plan_billing_dates_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_dates" : {
          "description" : "Array of  master plan instances associated with the account to which billing data is to be modified",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingDate"
          }
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "UpdateAcctDunningGroupMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "AdjustAcctPlanBillingDatesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "InitPaypalBillAgreementMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "return_url" : {
          "description" : "Client configured return_url (aka PayPal Agreement Confirmation URL) to instruct the USS/Reg software what PayPal link it should use to direct the end user to the next step\n",
          "type" : "string"
        },
        "token" : {
          "description" : "PayPal supplied token that maintains the billing agreement session. Valid only for 15 minutes.\n",
          "type" : "string"
        }
      },
      "required" : [ "error_code", "error_msg" ]
    },
    "AccountPaymentTerm" : {
      "type" : "object",
      "description" : "An Array of account payment terms.",
      "properties" : {
        "payment_terms_type" : {
          "description" : "Payment Terms Type from Payment Terms configuration. Can be Net Terms or EAN/GLN.",
          "type" : "string"
        },
        "client_payment_term_id" : {
          "description" : "Client Payment Term ID from Payment Terms configuration.\n",
          "type" : "string"
        },
        "payment_terms_name" : {
          "description" : "Payment Terms Name from Payment Terms configuration.\n",
          "type" : "string"
        },
        "payment_terms_no" : {
          "description" : "Payment Terms Number from Payment Terms configuration.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "ean_gln_num" : {
          "description" : "'EAN or GLN Number from billing group that is only applicable if payment_option=\"Terms\" and pmt_terms_type=\"EAN/GLN\"'\n",
          "type" : "string"
        },
        "ean_gln_requisition_num" : {
          "description" : "'EAN or GLN Requisition Number from billing group that is only applicable if payment_option=\"Terms\" and pmt_terms_type=\"EAN/GLN\"'\n",
          "type" : "string"
        }
      }
    },
    "PlanTranslationDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "plan_name" : {
          "description" : "The short name of this plan.",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "The long description of this plan.",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_scheds_t" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RateSchedsT"
          }
        },
        "plan_services_t" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanServicesT"
          }
        }
      }
    },
    "UpdateAcctCredentialsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_acct_credentials_m" ],
          "default" : "update_acct_credentials_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "password" : {
          "description" : "Password for the given user",
          "type" : "string"
        },
        "secret_question_answer" : {
          "description" : "Response to a users 'secret_question'",
          "type" : "string"
        },
        "secret_question" : {
          "description" : "Secret question recorded to recover a password.",
          "type" : "string"
        },
        "pin" : {
          "description" : "Persinal identification number",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "account_no" ]
    },
    "GetReversibleAuthorizationsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_reversible_authorizations_m" ],
          "default" : "get_reversible_authorizations_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "BillingGroupsInfo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "billing_group_no" : {
          "description" : "The billing group number mapped against each master plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "primary_payment_method_name" : {
          "description" : "Pay Method Name from Pay Methods configuration.",
          "type" : "string"
        },
        "primary_payment_method_no" : {
          "description" : "Pay Method Number from Pay Methods configuration.",
          "type" : "integer",
          "format" : "int64"
        },
        "backup_payment_method_name" : {
          "description" : "Pay Method Name from Pay Methods configuration.",
          "type" : "string"
        },
        "backup_payment_method_no" : {
          "description" : "Backup payment method ID.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "stmt_address_verification_code" : {
          "description" : "The address verification code for billing contact.\n",
          "type" : "string"
        },
        "client_primary_payment_method_id" : {
          "description" : "Client-defined ID of primary payment method on the billing group",
          "type" : "string"
        },
        "client_backup_payment_method_id" : {
          "description" : "Client-defined ID of backup payment method on the billing group",
          "type" : "string"
        },
        "billing_group_name" : {
          "description" : "Billing group name",
          "type" : "string"
        },
        "billing_group_description" : {
          "description" : "Billing group description",
          "type" : "string"
        },
        "client_def_billing_group_id" : {
          "description" : "Client-defined billing group ID.",
          "type" : "string"
        },
        "notify_template_group" : {
          "description" : "Notify template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_template" : {
          "description" : "Statement template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_note_template" : {
          "description" : "Credit note template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_option" : {
          "description" : "This allows you to select either payment methods (such as a credit card or other electronic form of payment) or payment terms (such as a physical check) when creating or modifying a billing group'\n",
          "type" : "string"
        },
        "primary_payment_method_id" : {
          "description" : "The primary payment_method_no of the billing group.",
          "type" : "integer",
          "format" : "int64"
        },
        "backup_payment_method_id" : {
          "description" : "The secondary payment_method_no of billing group.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_term_id" : {
          "description" : "Client Payment Term ID from Payment Terms configuration.\n",
          "type" : "string"
        },
        "payment_terms_name" : {
          "description" : "Payment Terms Name from Payment Terms configuration.\n",
          "type" : "string"
        },
        "payment_terms_no" : {
          "description" : "Payment Terms Number from Payment Terms configuration.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_terms_type" : {
          "description" : "Payment Terms Type from Payment Terms configuration.",
          "type" : "string"
        },
        "ean_gln_num" : {
          "description" : "'EAN or GLN Number from billing group that is only applicable if payment_option=\"Terms\" and pmt_terms_type=\"EAN/GLN\"'\n",
          "type" : "string"
        },
        "ean_gln_requisition_num" : {
          "description" : "'EAN or GLN Requisition Number from billing group that is only applicable if payment_option=\"Terms\" and pmt_terms_type=\"EAN/GLN\"'\n",
          "type" : "string"
        },
        "stmt_first_name" : {
          "description" : "First name of the billing contact",
          "type" : "string"
        },
        "stmt_mi" : {
          "description" : "Middle Initial of the billing contact",
          "type" : "string"
        },
        "stmt_last_name" : {
          "description" : "Last name of the billing contact",
          "type" : "string"
        },
        "stmt_company_name" : {
          "description" : "Company name of the billing contact",
          "type" : "string"
        },
        "stmt_address1" : {
          "description" : "First address line of the billing contact",
          "type" : "string"
        },
        "stmt_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "stmt_address3" : {
          "description" : "Third address line of the billing contact",
          "type" : "string"
        },
        "stmt_city" : {
          "description" : "City of the billing contact",
          "type" : "string"
        },
        "stmt_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "stmt_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "stmt_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "stmt_postal_cd" : {
          "description" : "This is the postal code for the billing contact address.",
          "type" : "string"
        },
        "stmt_phone" : {
          "description" : "Phone of the billing contact",
          "type" : "string"
        },
        "stmt_phone_ext" : {
          "description" : "This is the billing contacts extension for the phone given.\n",
          "type" : "string"
        },
        "stmt_cell_phone" : {
          "description" : "Cell phone of the billing contact",
          "type" : "string"
        },
        "stmt_work_phone" : {
          "description" : "Work phone of the billing contact",
          "type" : "string"
        },
        "stmt_work_phone_ext" : {
          "description" : "This is the work phone extension for the billing contact work phone.\n",
          "type" : "string"
        },
        "stmt_fax" : {
          "description" : "Specifies the FAX phone number for the billing contact.",
          "type" : "string"
        },
        "stmt_email" : {
          "description" : "Email of the billing contact",
          "type" : "string"
        },
        "stmt_birthdate" : {
          "description" : "The birthdate, in yyyy-mm-dd format, of the statement contact.",
          "type" : "string"
        },
        "bg_list_start_master_file" : {
          "description" : "Indicates whether or not the account shall be listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "stmt_address_match_score" : {
          "description" : "The score of match for billing contact verification code\n",
          "type" : "number"
        },
        "stmt_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the statement contact associated with a billing group on the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_memo_template" : {
          "description" : "Credit memo template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "rebill_template" : {
          "description" : "Rebill template No.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ItemsBasicDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "item_no" : {
          "description" : "The unique ID of the item being retrieved",
          "type" : "integer",
          "format" : "int64"
        },
        "item_label" : {
          "description" : "The name or label for this item",
          "type" : "string"
        },
        "service_no" : {
          "description" : "The service number associated with this item, which will be used during invoicing",
          "type" : "integer",
          "format" : "int64"
        },
        "service_desc" : {
          "description" : "The long description of the service associated with this item",
          "type" : "string"
        },
        "client_sku" : {
          "description" : "",
          "type" : "string"
        },
        "item_plan" : {
          "description" : "The plan associated with this item to assign when the item is purchased",
          "type" : "integer",
          "format" : "int64"
        },
        "item_months" : {
          "description" : "The months to stack for this item",
          "type" : "integer",
          "format" : "int64"
        },
        "stock_level" : {
          "description" : "The remaining number of units of this item",
          "type" : "number"
        },
        "avg_ratings" : {
          "description" : "(DEPRECATED) The average user rating of this item",
          "type" : "integer",
          "format" : "int64"
        },
        "num_ratings" : {
          "description" : "(DEPRECATED) The number of total ratings for this item",
          "type" : "integer",
          "format" : "int64"
        },
        "num_reviews" : {
          "description" : "(DEPRECATED) The number of user reviews for this item",
          "type" : "integer",
          "format" : "int64"
        },
        "item_type" : {
          "description" : "The type of item, see allowable values legend",
          "type" : "integer",
          "format" : "int64"
        },
        "item_desc" : {
          "description" : "The long description of the item",
          "type" : "string"
        },
        "active_ind" : {
          "description" : "Whether or not this item is considered an active, in-stock item",
          "type" : "integer",
          "format" : "int64"
        },
        "modify_price_ind" : {
          "description" : "Whether or not the item price can be modified at sale time",
          "type" : "string"
        },
        "subunit_qty" : {
          "description" : "Allows the client to associate a quantity of an arbitrary virtual item which is associated with a single unit of this item (e.g. 500 gold pieces)",
          "type" : "number"
        },
        "subunit_label" : {
          "description" : "The item name of the subunit represented by a single quantity of this item",
          "type" : "string"
        },
        "service_type" : {
          "description" : "(DEPRECATED) This field is no longer used",
          "type" : "string"
        },
        "coa_id" : {
          "description" : "The system internal Chart-of-Accounts ID for this item",
          "type" : "string"
        },
        "client_coa_code" : {
          "description" : "The client-specified Chart-of-Accounts ID for this item",
          "type" : "string"
        },
        "taxable_ind" : {
          "description" : "Whether or not taxes apply to this item",
          "type" : "integer",
          "format" : "int64"
        },
        "tax_group" : {
          "description" : "If taxable, the tax group this item belongs to",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type" : {
          "description" : "(DEPRECATED) This field is no longer used, as there are no usage fees for items",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_id" : {
          "description" : "The client-defined item ID to search for images",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "A multidimensional array of client-defined Service ID for this plan.\n",
          "type" : "string"
        },
        "client_item_plan_id" : {
          "description" : "client-defined item plan ID the item appears on",
          "type" : "string"
        },
        "usage_type_cd" : {
          "description" : "An array containing usage_type_cd(s) to denote which usage type(s) to record.",
          "type" : "string"
        },
        "purchase_scope" : {
          "description" : "Purchase scope for inventory item, default is null (both 0 and 1)",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAcctCouponDetailsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "coupons_detail" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CouponsDetail"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "string"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "PlanNsoItem" : {
      "type" : "object",
      "description" : "Non-Subscription Offerings that are bundled with the plan.",
      "properties" : {
        "item_no" : {
          "description" : "Inventory item number that is bundled with the plan",
          "type" : "integer",
          "format" : "int64"
        },
        "active_ind" : {
          "description" : "Inventory item status.",
          "type" : "integer",
          "format" : "int64"
        },
        "min_qty" : {
          "description" : "Minimum NSO quantity needed during plan purchase",
          "type" : "string"
        },
        "max_qty" : {
          "description" : "Maximum NSO quantity needed during plan purchase",
          "type" : "string"
        },
        "item_scope" : {
          "description" : "Scope of bundled NSO during plan purchase.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_nso_price_override" : {
          "description" : "Overridden prices for NSO items.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanNsoPriceOverride"
          }
        }
      },
      "required" : [ "plan_nso_price_override" ]
    },
    "GetItemsByClassMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "class_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClassItem"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "ToggleTestAccountMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "toggle_test_account_m" ],
          "default" : "toggle_test_account_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "test_acct_ind" : {
          "description" : "This argument indicates the account is a test account and is treated as such in the system.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "account_no" ]
    },
    "KeepAliveMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "keep_alive_m" ],
          "default" : "keep_alive_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "session_id" : {
          "description" : "A session ID is a unique number that a Web site's server assigns a specific user for the duration of that user's visit (session).\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "UpdateAcctNotifyMethodMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_acct_notify_method_m" ],
          "default" : "update_acct_notify_method_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "list_start_master_file" : {
          "description" : "Indicates whether the account is listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "account_no", "notify_method" ]
    },
    "GetAcctMessageSizeMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "num_chars" : {
          "description" : "The number of characters of the message_id requested.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetChildAcctsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_child_accts_m" ],
          "default" : "get_child_accts_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "parent_acct_no" : {
          "description" : "The parent account for this child account. Designating a parent account number implies the account holder is under a parent account umbrella.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "do_multi_level" : {
          "description" : "Allow multi-level account hierarchies.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "parent_acct_no" ]
    },
    "GetAcctGroupsByClientMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_groups" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctGroup"
          }
        }
      }
    },
    "GetRateSchedulesForPlanMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_rate_schedules_for_plan_m" ],
          "default" : "get_rate_schedules_for_plan_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "plan_no" : {
          "description" : "The unique plan identifier.",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for which to query available child plans",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "include_translations" : {
          "description" : "Setting this flag as True will fetch the translated fields in all the locales defined. If not passed it defaults to False.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetAcctBillingGroupDetailsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_billing_group_details_m" ],
          "default" : "get_acct_billing_group_details_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined identifier for the master plan instance.",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "Billing group number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined unique identifier for billing group",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "PaymentApplicationDetail" : {
      "type" : "object",
      "description" : "An Array of account payment application details.",
      "properties" : {
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_date" : {
          "description" : "Specifies Invoice Date. The date is in the format yyyy-mm-dd.",
          "type" : "string"
        },
        "invoice_from_date" : {
          "description" : "Specifies Invoice From Date. The date is in the format yyyy-mm-dd.",
          "type" : "string"
        },
        "invoice_to_date" : {
          "description" : "Specifies Invoice To Date. The date is in the format yyyy-mm-dd.",
          "type" : "string"
        },
        "invoice_pay_applied_amount" : {
          "description" : "Specifies the payment amount applied on the invoice by this transaction.\n",
          "type" : "number"
        },
        "invoice_overall_paid_amount" : {
          "description" : "Specifies the total payment amount applied on the invoice by all transactions\n",
          "type" : "number"
        },
        "invoice_charge" : {
          "description" : "Specifies the Invoice Charge Amount.",
          "type" : "number"
        },
        "invoice_credit" : {
          "description" : "Specifies the Invoice Credit Amount.",
          "type" : "number"
        },
        "invoice_bal_due" : {
          "description" : "Specifies the Invoice Balance Amount.",
          "type" : "number"
        },
        "applied_transactions" : {
          "description" : "Array of specific invoice transactions that the payment was applied to.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AppliedTransaction"
          }
        }
      }
    },
    "RecurringCreditNo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "recurring_credit_no" : {
          "description" : "The identifier for the recurring credit.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "BillingContact" : {
      "type" : "object",
      "description" : "Array of billing contacts",
      "properties" : {
        "bill_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact on this account to be used as the billing contact for the payment method. If bill_contact_no is included in the API request, all other billing contact parameters are ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_postal_cd" : {
          "description" : "Postal code for the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_ext" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_ext" : {
          "description" : "Work phone extension of the billing contact",
          "type" : "string"
        },
        "bill_fax" : {
          "description" : "Fax number of the billing contact.",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_birthdate" : {
          "description" : "Birthdate of the billing contact.\n",
          "type" : "string"
        },
        "bill_address_verification_code" : {
          "description" : "Verification code for the billing contact address",
          "type" : "string"
        },
        "bill_address_match_score" : {
          "description" : "Match score for the billing contact address",
          "type" : "number"
        },
        "bill_billing_group_no" : {
          "description" : "System-defined billing group number for the billing contact",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_client_billing_group_id" : {
          "description" : "Client-defined billing group identifier for the billing contact",
          "type" : "string"
        }
      }
    },
    "SuppPlansInfo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "client_supp_plan_instance_id" : {
          "description" : "Client-defined plan instance ID for each assigned supplemental plan.",
          "type" : "string"
        },
        "client_supp_plan_id" : {
          "description" : "Client-defined supplemental plan ID.",
          "type" : "string"
        },
        "alt_rate_schedule_no" : {
          "description" : "The unique ID for the alternate rate schedules to assign to this account, by supplemental plan above",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_rate_schedule_id" : {
          "description" : "The client alternate rate schedule ID for the supplementary subscription plan being considered.",
          "type" : "string"
        },
        "last_arrears_bill_thru_date" : {
          "description" : "The most recent date at which the account was fully billed in arrears",
          "type" : "string"
        },
        "last_bill_date" : {
          "description" : "The last date the account was billed",
          "type" : "string"
        },
        "last_bill_thru_date" : {
          "description" : "The date through which the account has been billed.",
          "type" : "string"
        },
        "next_bill_date" : {
          "description" : "The next bill date for the account.",
          "type" : "string"
        },
        "plan_date" : {
          "description" : "The date the plan assigned to the account.",
          "type" : "string"
        },
        "status_date" : {
          "description" : "This is the date the status on the account was set.",
          "type" : "string"
        },
        "supp_plan_instance_status_cd" : {
          "description" : "Status code associated with supplemental plan instance status.",
          "type" : "integer",
          "format" : "int64"
        },
        "recurring_billing_interval" : {
          "description" : "Recurring billing interval associated with the assigned rate schedule.",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_billing_interval" : {
          "description" : "Usage billing interval associated with the assigned rate schedule.",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status" : {
          "description" : "Status used for the master plan instance at the completion of the rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_duration" : {
          "description" : "Duration of the plan status rollover period, after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status (used in conjuction with rollover_plan_status_uom_cd).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_uom_cd" : {
          "description" : "Units associated with the duration of the plan status rollover period after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status. (used in conjunction with rollover_plan_status_duration).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_deprovisioned_date" : {
          "description" : "The date on which the current plan on this plan instance was suspended, cancelled or terminated.",
          "type" : "string"
        },
        "supp_plan_product_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppPlanProductField"
          }
        },
        "supp_plan_plan_inst_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppPlanPlanInstField"
          }
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the supplemental plan instance.",
          "type" : "string"
        },
        "supp_plans_services" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppPlansService"
          }
        },
        "supp_plan_instance_no" : {
          "description" : "Unique plan instance number for each assigned supplemental plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "supp_plan_no" : {
          "description" : "The Aria-assigned identifier for a supplemental service plan. Allowable values are limited to valid custom plan numbers for client.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "supp_plan_instance_description" : {
          "description" : "Description for each assigned supplemental plan instance",
          "type" : "string"
        },
        "supp_plan_units" : {
          "description" : "The units of each plan in the above supp_plan_instance array to assign to this account",
          "type" : "integer",
          "format" : "int64"
        },
        "supp_plan_instance_status" : {
          "description" : "Supplemental Plan Instance Status",
          "type" : "string"
        },
        "parent_plan_instance_no" : {
          "description" : "Aria internal ID of parent plan instance",
          "type" : "integer",
          "format" : "int64"
        },
        "client_parent_plan_instance_id" : {
          "description" : "Client-defined ID of parent plan instance no",
          "type" : "string"
        }
      }
    },
    "InvoiceDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_date" : {
          "description" : "Invoice bill date",
          "type" : "string"
        },
        "due_date" : {
          "description" : "Invoice due date",
          "type" : "string"
        },
        "days_past_due" : {
          "description" : "Number of days for due",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_amount" : {
          "description" : "Invoice amount",
          "type" : "number"
        },
        "total_paid" : {
          "description" : "Total paid amount",
          "type" : "number"
        },
        "balance_due" : {
          "description" : "Balance due amount",
          "type" : "number"
        },
        "invoice_type_cd" : {
          "description" : "This field identifies the type of the invoice generated",
          "type" : "string"
        }
      }
    },
    "CmDetailsAll" : {
      "type" : "object",
      "description" : "Array of returned credit memo numbers and relevand details for each credit memo",
      "properties" : {
        "cm_no" : {
          "description" : "The unique Aria-generated number for the credit memo",
          "type" : "integer",
          "format" : "int64"
        },
        "created_by" : {
          "description" : "User ID that created the credit memo.",
          "type" : "string"
        },
        "created_date" : {
          "description" : "Date the credit memo was created.",
          "type" : "string"
        },
        "cm_total" : {
          "description" : "Amount of the credit memo",
          "type" : "number"
        },
        "cm_tax_total" : {
          "description" : "Total amount of tax credit with the Credit Memo. This is a aum of the tax lines for a given CM.",
          "type" : "number"
        },
        "cm_reason_code" : {
          "description" : "Reason code",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "is_voided" : {
          "description" : "Returns whether or not the invoice was voided.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AcctSurchargesInfo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "surcharge_no" : {
          "description" : "The Surcharge number to be attached to the account",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_schedule_no" : {
          "description" : "The Rate Schedule Number for the Surcharge",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAcctUuidsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_uuids_m" ],
          "default" : "get_acct_uuids_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "GetAcctCouponDetailsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_coupon_details_m" ],
          "default" : "get_acct_coupon_details_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts. If passed, only the coupons assigned to this account will be returned.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "coupon_cd" : {
          "description" : "If passed, only the details for the coupon specified will be returned.\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "SetSessionAuthMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "set_session_auth_m" ],
          "default" : "set_session_auth_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "user_id" : {
          "description" : "Account's user ID.",
          "type" : "string"
        },
        "password" : {
          "description" : "Password for the given user",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "User ID given by user when creating the session.",
          "type" : "string"
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "DiscountBundle" : {
      "type" : "object",
      "description" : "All of the bundles to which this coupon belongs",
      "properties" : {
        "bundle_no" : {
          "description" : "The unique ID of the discount bundle",
          "type" : "integer",
          "format" : "int64"
        },
        "client_bundle_id" : {
          "description" : "Client-defined discount bundle ID",
          "type" : "string"
        },
        "bundle_name" : {
          "description" : "The name of the discount bundle",
          "type" : "string"
        },
        "description" : {
          "description" : "The long description of the discount bundle",
          "type" : "string"
        }
      }
    },
    "AcctBillingGroup" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "billing_group_directive" : {
          "description" : "Indicates what operation to perform on each billing group specified. This field is required when performing any action on a billing group.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "existing_billing_group_no" : {
          "description" : "The unique identifier of the billing group. Either this field, or existing_client_billing_group_id is required when updating or removing the billing group.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "existing_client_billing_group_id" : {
          "description" : "The client-defined identifier of the billing group.\n",
          "type" : "string"
        },
        "billing_group_name" : {
          "description" : "Name of the billing group.\n",
          "type" : "string"
        },
        "billing_group_description" : {
          "description" : "Description of the billing group.\n",
          "type" : "string"
        },
        "new_client_billing_group_id" : {
          "description" : "Unique client-defined identifier of the billing group. If provided for an existing billing group, this value will overwrite the existing client-defined ID for that billing group.\n",
          "type" : "string"
        },
        "billing_group_idx" : {
          "description" : "For non-persistent referencing of a billing group within the API request.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_template_group" : {
          "description" : "Notify template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_template" : {
          "description" : "Statement template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_note_template" : {
          "description" : "Credit note template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_option" : {
          "description" : "This allows you to select either payment methods (such as a credit card or other electronic form of payment) or payment terms (such as a physical check) when creating or modifying a billing group'\n",
          "type" : "string"
        },
        "primary_payment_method_no" : {
          "description" : "Unique identifier associated with an existing payment method for the specified account to be used as the primary payment method on the billing group\n",
          "type" : "integer",
          "format" : "int64"
        },
        "primary_client_payment_method_id" : {
          "description" : "Unique client-defined identifier associated with an existing payment method for the specified account to be used as the primary payment method on the billing group\n",
          "type" : "string"
        },
        "primary_payment_method_idx" : {
          "description" : "For non-persistent referencing of a payment method within the API request to be used as the primary payment method on the billing group.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "backup_payment_method_no" : {
          "description" : "Unique identifier associated with an existing payment method for the specified account to be used as the backup payment method on the billing group.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "backup_client_payment_method_id" : {
          "description" : "Unique client-defined identifier associated with an existing payment method for the specified account to be used as the backup payment method on the billing group.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "backup_payment_method_idx" : {
          "description" : "For non-persistent referencing of a payment method within the API request to be used as the backup payment method on the billing group.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "stmt_first_name" : {
          "description" : "Statement contact first name",
          "type" : "string"
        },
        "stmt_mi" : {
          "description" : "The Middle Initial of the statement contact.",
          "type" : "string"
        },
        "stmt_last_name" : {
          "description" : "",
          "type" : "string"
        },
        "stmt_company_name" : {
          "description" : "Company name of the statement contact",
          "type" : "string"
        },
        "stmt_address1" : {
          "description" : "First address line of the statement contact",
          "type" : "string"
        },
        "stmt_address2" : {
          "description" : "Second address line of the statement contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "stmt_address3" : {
          "description" : "Third address line of the statement contact",
          "type" : "string"
        },
        "stmt_city" : {
          "description" : "City of the statement contact",
          "type" : "string"
        },
        "stmt_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "stmt_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "stmt_country" : {
          "description" : "Country of the contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "stmt_postal_cd" : {
          "description" : "Postal/Zip code for the statement contact address.",
          "type" : "string"
        },
        "stmt_phone" : {
          "description" : "The phone number of the statement contact",
          "type" : "string"
        },
        "stmt_phone_ext" : {
          "description" : "The extension for the statement contact phone",
          "type" : "string"
        },
        "stmt_cell_phone" : {
          "description" : "The contact cell phone of the statement contact.",
          "type" : "string"
        },
        "stmt_work_phone" : {
          "description" : "Work phone number of the statement contact.",
          "type" : "string"
        },
        "stmt_work_phone_ext" : {
          "description" : "The extension for the statement contact work phone",
          "type" : "string"
        },
        "stmt_fax" : {
          "description" : "The fax number for the statement contact.",
          "type" : "string"
        },
        "stmt_email" : {
          "description" : "Email of the statement contact",
          "type" : "string"
        },
        "stmt_birthdate" : {
          "description" : "The birthdate, in yyyy-mm-dd format, of the statement contact.",
          "type" : "string"
        },
        "bg_list_start_master_file" : {
          "description" : "Indicates whether or not the account shall be listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "stmt_contact_idx" : {
          "description" : "For non-persistent referencing of a contact in the contacts array within the API request. If an idx value is specified, inputs provided for other statement contact fields will be ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "stmt_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the statement contact associated with a billing group on the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_terms_no" : {
          "description" : "Payment terms number assigned to the account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_terms_name" : {
          "description" : "Payment terms name assigned to the account.\n",
          "type" : "string"
        },
        "client_payment_term_id" : {
          "description" : "Client-defined identifier for the billing group's payment term\n",
          "type" : "string"
        },
        "ean_gln_num" : {
          "description" : "'This is the European Article Number or Global Location Number that is a required field if a payment option is terms AND client payment term ID matches a term in which the payment term type equals EAN/GLN.\n This number should be provided by Aria's client's customers and is unique to each customer (account).'\n",
          "type" : "string"
        },
        "ean_gln_requisition_num" : {
          "description" : "'This is the European Article Number requisition number or Global Location Number requisition number that is a required field if a payment option is terms AND client payment term ID matches a term in which the payment term type equals EAN/GLN.\n This number should be provided by Aria's client's customers and is used to track their individual projects similarly to a purchase order.\n This number is generated by the individual customer (account) and is not provided by any other party'\n",
          "type" : "string"
        },
        "credit_memo_template" : {
          "description" : "Credit template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "rebill_template" : {
          "description" : "Rebill template No.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetChildForItemClassMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_child_for_item_class_m" ],
          "default" : "get_child_for_item_class_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "filter_class_no" : {
          "description" : "An item class number to use to filter results.",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "filter_class_no" ]
    },
    "UsageQualifier1" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "usage_qualifier_1" : {
          "description" : "Optional list of filters to apply against usage qualifier number 1, stored in the Aria system",
          "type" : "string"
        }
      }
    },
    "AccountPaymentMethod" : {
      "type" : "object",
      "description" : "An Array of account payment methods.",
      "properties" : {
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_postal_cd" : {
          "description" : "Postal code for the billing contact.",
          "type" : "string"
        },
        "bill_address_verification_code" : {
          "description" : "Billing address verification code for the billing contact address.",
          "type" : "string"
        },
        "bill_address_match_score" : {
          "description" : "Billing address match score for the billing contact address.",
          "type" : "number"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_ext" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_ext" : {
          "description" : "This is the work phone extension for the billing contact work phone.\n",
          "type" : "string"
        },
        "bill_fax" : {
          "description" : "Fax number of the billing contact.",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_birthdate" : {
          "description" : "Birthdate of the billing contact.\n",
          "type" : "string"
        },
        "pay_method_name" : {
          "description" : "The name of this payment method",
          "type" : "string"
        },
        "client_payment_method_id" : {
          "description" : "The method ID for the payment method.",
          "type" : "string"
        },
        "pay_method_description" : {
          "description" : "Description for the pay method.",
          "type" : "string"
        },
        "pay_method_type" : {
          "description" : "This is the method_id corresponding to a payment method such as credit card, Electronic Check, Pre-Paid, Net Terms, etc. nullable: true default: -1\n",
          "type" : "integer",
          "format" : "int64"
        },
        "suffix" : {
          "description" : "The last 4 digits of the account number",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_type" : {
          "description" : "The type of credit card used for the original payment.",
          "type" : "string"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "status" : {
          "description" : "The staus is \"1\", the payment method is enabled for the account, if the status is as \"0\" the payment method is disabled for this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "persistent_ind" : {
          "description" : "If true, this payment method persists on the account. Otherwise it was  used for a one-time payment.",
          "type" : "integer",
          "format" : "int64"
        },
        "from_date" : {
          "description" : "The beginning effective date with time for this payment method on this account.",
          "type" : "string"
        },
        "to_date" : {
          "description" : "The ending effective date with time for this payment method on this account.  If none, this is the current form of payment.",
          "type" : "string"
        },
        "bill_info_api_receipt_id" : {
          "description" : "The receipt ID used in the initial API call which created this billing info record.",
          "type" : "string"
        }
      }
    },
    "AllClientPlanDtl" : {
      "type" : "object",
      "description" : "A multidimensional array containing all client plans.\\n",
      "properties" : {
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "Plan Name",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "Text description of this plan",
          "type" : "string"
        },
        "supp_plan_ind" : {
          "description" : "Indicates whether or not this plan is a supplemental plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_ind" : {
          "description" : "Indicates whether or not this plan is billable. This applies to Master Plans only. Supplemental plans inherit this property from their associated Master Plans.",
          "type" : "integer",
          "format" : "int64"
        },
        "display_ind" : {
          "description" : "Indicates whether or not the plan is marked as \"displayable\". 0 means not displayable. 1 means displayable.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_months" : {
          "description" : "Number of months in which the account will change from the current plan to the pre-defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_no" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "early_cancel_fee" : {
          "description" : "Fee charged for early cancellations.",
          "type" : "number"
        },
        "early_cancel_min_months" : {
          "description" : "Number of months during which early cancellation fees would apply on plan cancellation.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "suspension_period" : {
          "description" : "Pre-defined period in days in which an account will degrade to Suspended status (-1) if action is not taken such as a plan or status change.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "new_acct_status" : {
          "description" : "The status code to assert for the new account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_acct_status" : {
          "description" : "Default status for new accounts created on this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_acct_status_days" : {
          "description" : "Number of days in which an account will change from the initial status code to the pre-defined rollover status code.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_months" : {
          "description" : "Initial free months.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_2_assign_on_susp" : {
          "description" : "Plan to assign when an account on this plan is suspended.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "default_notify_method" : {
          "description" : "Default notification method given to an account that is assigned to this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "prepaid_ind" : {
          "description" : "Indicates whether or not this plan is prepaid",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "Client assigned unique plan identifier",
          "type" : "string"
        },
        "client_rollover_plan_id" : {
          "description" : "Pre-defined client rollover plan ID to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined client rollover plan ID.\n",
          "type" : "string"
        },
        "proration_invoice_timing_cd" : {
          "description" : "Indicates whether to defer the pro-rated charges to the next anniversary date or to create a seperate invoice immediately.\n",
          "type" : "string"
        },
        "rollover_plan_duration" : {
          "description" : "Duration of the plan rollover period (used in conjunction with rollover_plan_uom_cd).",
          "type" : "string"
        },
        "rollover_plan_uom_cd" : {
          "description" : "Units associated with the duration of the plan rollover period (used in conjunction with rollover_plan_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_duration" : {
          "description" : "Duration of the initial free period (used in conjunction with init_free_period_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_uom_cd" : {
          "description" : "Units associated with the duration of the initial free period (used in conjunction with init_free_period_duration).",
          "type" : "string"
        },
        "initial_plan_status_cd" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_duration" : {
          "description" : "Duration of the plan status rollover period, after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status (used in conjuction with rollover_plan_status_uom_cd).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_uom_cd" : {
          "description" : "Units associated with the duration of the plan status rollover period after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status. (used in conjunction with rollover_plan_status_duration).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_cd" : {
          "description" : "Status used for the master plan instance at the completion of the plan status rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "nso_incl_list_scope" : {
          "description" : "Scope of additional NSO as part of inclusion list.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_services" : {
          "description" : "A multidimensional array of Services for this plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanService"
          }
        },
        "plan_rate_schedules_details" : {
          "description" : "An array of the rate schedules for the requested plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanRateSchedulesDetail"
          }
        },
        "contract_rollover_plan_no" : {
          "description" : "Pre-defined plan to be used as the rollover plan at the completion of the contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_plan_id" : {
          "description" : "Client-defined ID of the pre-defined plan to be used as the rollover plan at the completion of a contract.\n",
          "type" : "string"
        },
        "contract_rollover_rate_sched" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractRolloverRateSched"
          }
        },
        "plan_nso_incl_list" : {
          "description" : "Non-Subscription Offerings inclusion list that is in addition to NSOs that are  bundled with the plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanNsoInclList"
          }
        },
        "plan_groups" : {
          "description" : "A grouping of plans which can be used for plan assignment",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanGroup"
          }
        },
        "promotional_plan_sets" : {
          "description" : "A grouping of plans based on promo code",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PromotionalPlanSet"
          }
        },
        "parent_plans" : {
          "description" : "The plans which are mapped as parents of this plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ParentPlan"
          }
        },
        "plan_supp_fields" : {
          "description" : "Supplemental object fields associated with this plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanSuppField"
          }
        },
        "first_retrieval_level_ind" : {
          "description" : "If true, this plan met the initial filtering criteria used to retrieve this list of plans. If false, this plan is a child plan (or other decendant) of a plan which met the initial criteria\n",
          "type" : "string"
        },
        "child_plans" : {
          "description" : "The plans which are mapped as children of this plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChildPlan"
          }
        },
        "plan_nso_items" : {
          "description" : "Non-Subscription Offerings that are bundled with the plan.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanNsoItem"
          }
        },
        "plan_nso_group" : {
          "description" : "Non-Subscription Offerings that are bundled with the plan as part of NSO group",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanNsoGroup"
          }
        },
        "nso_group_min_qty" : {
          "description" : "Minimum NSO quantity needed during plan purchase for the NSO group.",
          "type" : "string"
        },
        "nso_group_max_qty" : {
          "description" : "Maximum NSO quantity needed during plan purchase for the NSO group.",
          "type" : "string"
        },
        "nso_group_item_scope" : {
          "description" : "Scope of bundled NSO group during plan purchase.",
          "type" : "string"
        },
        "plan_translation_dtls" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanTranslationDtl"
          }
        }
      }
    },
    "PlanServiceT" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "service_no" : {
          "description" : "The unique ID for the service this line represents.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_desc" : {
          "description" : "The name of the service this line represents.",
          "type" : "string"
        },
        "all_service_supp_fields_t" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllServiceSuppFieldsT"
          }
        },
        "plan_service_rates_t" : {
          "description" : "Represents the rates for the default rate schedule for the default currency for the plan.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanServiceRatesT"
          }
        },
        "usage_type_name" : {
          "description" : "The human-readable name of this usage type\n",
          "type" : "string"
        },
        "usage_type_desc" : {
          "description" : "The long description of this usage type\n",
          "type" : "string"
        },
        "usage_unit_label" : {
          "description" : "The display-level description of the units this usage represents.\n",
          "type" : "string"
        },
        "plan_supp_fields_t" : {
          "description" : "Supplemental object fields associated with this plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanSuppFieldsT"
          }
        }
      }
    },
    "CreateAcctDunningGroupMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "create_acct_dunning_group_m" ],
          "default" : "create_acct_dunning_group_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_group_name" : {
          "description" : "Dunning Group name",
          "type" : "string"
        },
        "dunning_group_description" : {
          "description" : "Dunning group description",
          "type" : "string"
        },
        "client_dunning_group_id" : {
          "description" : "Client-defined unique identifier for dunning group",
          "type" : "string"
        },
        "dunning_process_no" : {
          "description" : "Dunning Process code",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_process_id" : {
          "description" : "Client-defined dunning process identifier.",
          "type" : "string"
        },
        "master_plans_summary" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlansSummary"
          }
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "ApplyServiceCreditMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "apply_service_credit_m" ],
          "default" : "apply_service_credit_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "credit_amount" : {
          "description" : "The amount of credit to be applied to the account.",
          "type" : "number"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "credit_reason_code" : {
          "description" : "The reason a given credt was/is to be applied to the account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "credit_amount", "credit_reason_code" ]
    },
    "MpSurcharge" : {
      "type" : "object",
      "description" : "Surcharge for master plan",
      "properties" : {
        "mp_surcharge_no" : {
          "description" : "",
          "type" : "integer",
          "format" : "int64"
        },
        "mp_surcharge_directive" : {
          "description" : "The surcharge directive to assign/remove the surcharge from the master plan instance",
          "type" : "integer",
          "format" : "int64"
        },
        "mp_rate_schedule_no" : {
          "description" : "",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "MultiPlanInvoiceDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "billing_group_no" : {
          "description" : "The unique identifier of the billing group.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "The client-defined identifier of the billing group.\n",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation.\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description.\n",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID.\n",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank.\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor.\n",
          "type" : "string"
        },
        "invoice_charges_before_tax" : {
          "description" : "Total charges on this invoice before taxes are applied.\n",
          "type" : "number"
        },
        "invoice_tax_charges" : {
          "description" : "Total amount of taxes charged.\n",
          "type" : "number"
        },
        "invoice_charges_after_tax" : {
          "description" : "Subtotal combining the total pre-tax charges and the total taxes charged.\n",
          "type" : "number"
        },
        "invoice_credit_before_tax" : {
          "description" : "Credit to be applied before tax is taken into account.\n",
          "type" : "number"
        },
        "invoice_tax_credits" : {
          "description" : "Tax amount of the credit to be applied to the account.\n",
          "type" : "number"
        },
        "invoice_credits" : {
          "description" : "Credit to be applied after tax is taken into account.\n",
          "type" : "number"
        },
        "invoice_total_amount" : {
          "description" : "The total owed on the initial invoice for this account.\n",
          "type" : "number"
        },
        "expectd_activation_fee" : {
          "description" : "Predicted activation fee based on activation fee charges on supplemental plans on this invoice.\n",
          "type" : "number"
        },
        "expectd_mthly_recurring_cost" : {
          "description" : "Predicted monthly recurring cost of the items and plans on this invoice.\n",
          "type" : "number"
        },
        "expectd_annu_recurring_cost" : {
          "description" : "Predicted annual recurring cost of the items and plans on this invoice.\n",
          "type" : "number"
        },
        "invoice_item_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceItemDetail"
          }
        },
        "tax_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TaxDetail"
          }
        }
      }
    },
    "GetUsageHistoryMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "usage_history_recs" : {
          "description" : "A multidimensional array of usage history records attached to the account (and optional specified usage type) for given date range\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageHistoryRec"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "StatHist" : {
      "type" : "object",
      "description" : "An array of status history records for the account.",
      "properties" : {
        "date_entered" : {
          "description" : "The date this status was entered",
          "type" : "string"
        },
        "acct_status" : {
          "description" : "The previous account status",
          "type" : "string"
        },
        "new_status" : {
          "description" : "The status the account was changed to.  The \"current\" status for this line",
          "type" : "string"
        },
        "comments" : {
          "description" : "Any CSR comments which were entered when this status was changed",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "If an API call forces the change of an account status, the receipt ID for that call will be returned here",
          "type" : "string",
          "maxLength" : 50
        }
      }
    },
    "GetInvoiceHistoryMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "invoice_hist" : {
          "description" : "Array of invoices.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceHist"
          }
        }
      }
    },
    "GetAcctStatementHistoryMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_statement_history_m" ],
          "default" : "get_acct_statement_history_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "user_id" : {
          "description" : "Account's user ID. Alternative to using acct_no.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "start_date" : {
          "description" : "Specifies start date. The date is in the format yyyy-mm-dd",
          "type" : "string"
        },
        "end_date" : {
          "description" : "Specifies end date. The date is in the format yyyy-mm-dd",
          "type" : "string"
        },
        "include_invoice_activity_eligibility" : {
          "description" : "Specifies whether the statement is eligible to send or not",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "AcctGroup" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "group_no" : {
          "description" : "The unique ID of the account group",
          "type" : "integer",
          "format" : "int64"
        },
        "group_name" : {
          "description" : "The name of the account group",
          "type" : "string"
        },
        "group_desc" : {
          "description" : "The long description of the account group",
          "type" : "string"
        },
        "group_type" : {
          "description" : "Whether this is a functional (F) or collections (C) account group",
          "type" : "string"
        },
        "group_mask" : {
          "description" : "The mask used to display the account group on invoices and statements",
          "type" : "string"
        },
        "group_seq_no" : {
          "description" : "The sequential number for display the account groups",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_group_id" : {
          "description" : "The client-assigned group ID",
          "type" : "string"
        }
      }
    },
    "GetCcVelocityInfoMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "velocity_data" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VelocityData"
          }
        }
      }
    },
    "GetAcctUniversalContractMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "type_no" : {
          "description" : "The type of contract \"end action\" to be enforced by this contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "length_months" : {
          "description" : "The number of months, starting from start_date, that the given contract will be in effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "create_comments" : {
          "description" : "CSR or API-provided comments provided at time of contract creation.\n",
          "type" : "string"
        },
        "update_comments" : {
          "description" : "Comments provided at time of last contract update.",
          "type" : "string"
        },
        "create_date" : {
          "description" : "The date the contract was created.",
          "type" : "string"
        },
        "update_date" : {
          "description" : "The date the contract was last modified.",
          "type" : "string"
        },
        "start_date" : {
          "description" : "Specifies contract start date. The date is in the format yyyy-mm-dd\n",
          "type" : "string"
        },
        "end_date" : {
          "description" : "Contract end date",
          "type" : "string"
        },
        "status_code" : {
          "description" : "Status code of this contract.",
          "type" : "string"
        },
        "contract_no" : {
          "description" : "Aria-assigned unique contract identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "client_contract_id" : {
          "description" : "Client assigned unique contract identifier",
          "type" : "string"
        }
      },
      "required" : [ "contract_no" ]
    },
    "RecordUsageMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "usage_rec_no" : {
          "description" : "Aria-assigned usage record identifier",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "UpdateAcctCredentialsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetAcctPaymentHistoryMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_payment_history" : {
          "description" : "An Array of payment details.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctPaymentHistory"
          }
        }
      }
    },
    "BillingDate" : {
      "type" : "object",
      "description" : "Array of  master plan instances associated with the account to which billing data is to be modified",
      "properties" : {
        "master_plan_instance_no" : {
          "description" : "The unique identifier of the plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "The client-defined identifier of the plan instance.",
          "type" : "string"
        },
        "action_directive" : {
          "description" : "Determines whether the billing date is adjusted forward or backward.",
          "type" : "integer",
          "format" : "int64"
        },
        "adjustment_days" : {
          "description" : "Number of days to adjust the billing date. A value for this field is required when action_directive=1 or 2.",
          "type" : "integer",
          "format" : "int64"
        },
        "adjustment_date" : {
          "description" : "The date to set the next billing date.  The adjustment date cannot exceed 27 days before or after the current next billing date. This field is required when action_directive=3.\n",
          "type" : "string"
        }
      },
      "required" : [ "action_directive" ]
    },
    "GetPaypalAvsStatusMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier.0 indicates no error.",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred. \"OK\" if there was no error.",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "email" : {
          "description" : "Email address of the PayPal member",
          "type" : "string"
        },
        "paypal_confirmationcode" : {
          "description" : "Indicates whether the address is a confirmed address on file at PayPal. It is one of the following values: Note: The values Confirmed and Unconfirmed both indicate that the member email address passed verification. None - The request value of the Email element does not match any email address on file at PayPal. Confirmed - If the response value of the StreetMatch element is Matched, the entire postal address is confirmed. Unconfirmed - PayPal responds that the postal address is unconfirmed.\n",
          "type" : "string"
        },
        "paypal_streetmatch" : {
          "description" : "Indicates whether the street address matches address information on file at PayPal. It is one of the following values: None - The request value of the Email element does not match any email address on file at PayPal. No comparison of other request values was made. Matched - The request value of the Street element matches the first 3 single-byte characters of a postal address on file for the PayPal member. Unmatched - The request value of the Street element does not match any postal address on file for the PayPal member.\n",
          "type" : "string"
        },
        "paypal_zipmatch" : {
          "description" : "Indicates whether the zip address matches address information on file at PayPal. It is one of the following values: None - The request value of the Street element was unmatched. No comparison of the Zip element was made. Matched - The request value of the Zip element matches the ZIP code of the postal address on file for the PayPal member. Unmatched - The request value of the Zip element does not match the ZIP code of the postal address on file for the PayPal member.\n",
          "type" : "string"
        },
        "paypal_countrycode" : {
          "description" : "Country code (ISO 3166) on file for the PayPal email address.",
          "type" : "string"
        },
        "paypal_token" : {
          "description" : "The token contains encrypted information about the member's email address and postal address. If you pass the value of the token in the HTML variable address_api_token of Buy Now buttons, PayPal prevents the buyer from using an email address or postal address other than those that PayPal verified with this API call. The token is valid for 24 hours.\n",
          "type" : "string"
        }
      },
      "required" : [ "bill_agreement_id", "email", "paypal_confirmationcode", "paypal_streetmatch", "paypal_zipmatch", "paypal_countrycode", "paypal_token" ]
    },
    "RecordMandateApprovalMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "record_mandate_approval_m" ],
          "default" : "record_mandate_approval_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "userid" : {
          "description" : "User's unique identifier. If account_no is valued, this value must be blank.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "The client-defined billing primary payment method ID.",
          "type" : "string"
        },
        "mandate_signature_date" : {
          "description" : "The date, in yyyy-mm-dd format, on which the mandate was signed.\n",
          "type" : "string"
        },
        "mandate_signature_place" : {
          "description" : "This describes the city or other designation where the mandate was signed.\n",
          "type" : "string"
        },
        "mandate_signed" : {
          "description" : "This should be set to 'true' to indicate that the mandate has been signed by the debtor.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "mandate_signature_date", "mandate_signature_place", "mandate_signed" ]
    },
    "AcctReceipt" : {
      "type" : "object",
      "description" : "An array of account receipt records.",
      "properties" : {
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "receipt_date" : {
          "description" : "Date of receipt",
          "type" : "string"
        }
      }
    },
    "CopyAcctPaymentMethodMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "copy_acct_payment_method_m" ],
          "default" : "copy_acct_payment_method_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "source_acct_no" : {
          "description" : "Aria-assigned account identifier associated with the account from which the payment method will be copied.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_source_acct_id" : {
          "description" : "Client-defined account identifier associated with the account from which the payment method will be copied.\n",
          "type" : "string"
        },
        "target_acct_no" : {
          "description" : "Aria-assigned account identifier associated with the account to which the payment method will be copied.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_target_acct_id" : {
          "description" : "Client-defined account identifier associated with the account to which the payment method will be copied.\n",
          "type" : "string"
        },
        "payment_methods" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentMethod"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "ToggleTestAccountMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "UnsubscribeEventClassMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "events" : {
          "description" : "An Array of events being unsubscribed to.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Event"
          }
        }
      }
    },
    "SendArcThresholdEmailMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "send_arc_threshold_email_m" ],
          "default" : "send_arc_threshold_email_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "resource_name" : {
          "description" : "The human-readable resource name (e.g.money, time, access, etc.)\n",
          "type" : "string"
        },
        "resource_units_label" : {
          "description" : "The label for resource units (e.g. peices, tokens, credits, etc.)\n",
          "type" : "string"
        },
        "resource_threshold_level" : {
          "description" : "The value at which resources should be replenished.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "resource_balance" : {
          "description" : "The remaining units left of the resource",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no", "resource_threshold_level", "resource_balance" ]
    },
    "DunningGroupsUpdated" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "dunning_group_no" : {
          "description" : "The dunning group number mapped against each master plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_groups_id" : {
          "description" : "The client-defined dunning group ID mapped against each master plan.\n",
          "type" : "string"
        },
        "dunning_group_operation" : {
          "description" : "If a collection is attempted, returns the error code associated with the collection.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CreditTemplate" : {
      "type" : "object",
      "description" : "The credit templates mapped to this coupon",
      "properties" : {
        "credit_template_no" : {
          "description" : "The unique ID of this credit template",
          "type" : "integer",
          "format" : "int64"
        },
        "template_name" : {
          "description" : "The name of this credit template",
          "type" : "string"
        },
        "flat_amount" : {
          "description" : "An indiscriminate flat discount for this credit template",
          "type" : "number"
        },
        "percent_amount" : {
          "description" : "An indiscriminate percentage discount for this credit template",
          "type" : "number"
        },
        "percent_eval_plan_no" : {
          "description" : "The plan number which is being discounted if this credit template is percentage based",
          "type" : "integer",
          "format" : "int64"
        },
        "percent_eval_service_no" : {
          "description" : "The service number which is being discounted if this credit template is percentage based",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The currency code to which this credit template applies",
          "type" : "string"
        },
        "eligible_plan_no" : {
          "description" : "The plan number which must be present for this credit template to apply",
          "type" : "integer",
          "format" : "int64"
        },
        "eligible_service_no" : {
          "description" : "The service number which must be present for this credit template to apply",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_service_no_2_apply" : {
          "description" : "The alternate service number to use on the eventual invoice for this credit",
          "type" : "integer",
          "format" : "int64"
        },
        "num_credits_required" : {
          "description" : "Number of times a credit will be created from this template",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_interval_months" : {
          "description" : "How long in between applications of this credit",
          "type" : "integer",
          "format" : "int64"
        },
        "eligible_service_types" : {
          "description" : "A list of eligible service types",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EligibleServiceType"
          }
        }
      }
    },
    "SetAcctNotifyTmpltGrpMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "AmountThresholdBalanceType" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "threshold_balance_type" : {
          "description" : "Returns a string representing the threshold balance type either month-to-date or billing-period-to-date.\n",
          "type" : "string"
        },
        "amount" : {
          "description" : "The threshold amount which, when crossed over or under unbilled usage balance, triggers an email notification or events.\n",
          "type" : "number"
        }
      }
    },
    "GetAcctCommentsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_comments" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctComment"
          }
        }
      }
    },
    "SetSessionMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "set_session_m" ],
          "default" : "set_session_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "user_id" : {
          "description" : "Account's user ID. Alternative to using acct_no.",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_caller_id" : {
          "description" : "User ID given by user when creating the session.",
          "type" : "string"
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetClientItemsBasicMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_client_items_basic_m" ],
          "default" : "get_client_items_basic_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "filter_currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "return_no_cost_items" : {
          "description" : "A boolean value that asserts the API call should include no-cost items in its returned results (true/1=yes, false/0=no).\n",
          "type" : "string"
        },
        "filter_item_no" : {
          "description" : "Aria-assigned unique identifier indicating Client Inventory Item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "include_inactive_items" : {
          "description" : "Specifies whether inactive inventory items need to be included or not",
          "type" : "string"
        },
        "filter_client_item_id" : {
          "description" : "Client assigned unique identifier indicating client Inventory Item.\n",
          "type" : "string"
        },
        "purchase_scope" : {
          "description" : "Purchase scope for inventory item, default is null (both 0 and 1)",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "AllPlanDetail" : {
      "type" : "object",
      "description" : "This return value is a multidimensional array describing the detail of all available plans.\\n",
      "properties" : {
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "Plan Name",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "Text description of this plan",
          "type" : "string"
        },
        "billing_ind" : {
          "description" : "Indicates whether or not this plan is billable\n",
          "type" : "integer",
          "format" : "int64"
        },
        "display_ind" : {
          "description" : "Indicates whether or not the plan is marked as \"displayable\". 0 means not displayable. 1 means displayable.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_months" : {
          "description" : "Number of months in which the account will change from the current plan to the pre-defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_no" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "early_cancel_fee" : {
          "description" : "Fee charged for early cancellations.",
          "type" : "number"
        },
        "early_cancel_min_months" : {
          "description" : "Number of months during which early cancellation fees would apply on plan cancellation.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "suspension_period" : {
          "description" : "Pre-defined period in days in which an account will degrade to Suspended status (-1) if action is not taken such as a plan or status change.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "new_acct_status" : {
          "description" : "The status code to assert for the new account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_acct_status" : {
          "description" : "Default status for new accounts created on this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_acct_status_days" : {
          "description" : "Number of days in which an account will change from the initial status code to the pre-defined rollover status code.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_months" : {
          "description" : "Initial free months.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_2_assign_on_susp" : {
          "description" : "Plan to assign when an account on this plan is suspended.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "default_notify_method" : {
          "description" : "Default notification method given to an account that is assigned to this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "prepaid_ind" : {
          "description" : "Indicates whether or not this plan is prepaid",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for which to query available child plans",
          "type" : "string"
        },
        "client_rollover_plan_id" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined client rollover plan ID.\n",
          "type" : "string"
        },
        "client_plan_id_2_assign_on_susp" : {
          "description" : "Client-defined Plan ID to assign when an account on this plan is suspended.\n",
          "type" : "string"
        },
        "proration_invoice_timing_cd" : {
          "description" : "Indicates whether to defer the pro-rated charges to the next anniversary date or to create a seperate invoice immediately.\n",
          "type" : "string"
        },
        "rollover_plan_duration" : {
          "description" : "Duration of the plan rollover period (used in conjunction with rollover_plan_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_uom_cd" : {
          "description" : "Units associated with the duration of the plan rollover period (used in conjunction with rollover_plan_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_duration" : {
          "description" : "Duration of the initial free period (used in conjunction with init_free_period_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_uom_cd" : {
          "description" : "Units associated with the duration of the initial free period (used in conjunction with init_free_period_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_plan_status_cd" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_duration" : {
          "description" : "Duration of the plan status rollover period, after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status (used in conjuction with rollover_plan_status_uom_cd).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_uom_cd" : {
          "description" : "Units associated with the duration of the plan status rollover period after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status. (used in conjunction with rollover_plan_status_duration).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_cd" : {
          "description" : "Status used for the master plan instance at the completion of the plan status rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "nso_incl_list_scope" : {
          "description" : "Scope of additional NSO as part of inclusion list.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_services" : {
          "description" : "A multidimensional array of Services for this plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanService"
          }
        },
        "plan_rate_schedules_details" : {
          "description" : "An array of the rate schedules for the requested plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanRateSchedulesDetail"
          }
        },
        "contract_rollover_plan_no" : {
          "description" : "Pre-defined plan to be used as the rollover plan at the completion of the contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_plan_id" : {
          "description" : "Client-defined ID of the pre-defined plan to be used as the rollover plan at the completion of a contract.\n",
          "type" : "string"
        },
        "contract_rollover_rate_sched" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractRolloverRateSched"
          }
        },
        "plan_nso_items" : {
          "description" : "Non-Subscription Offerings that are bundled with the plan.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanNsoItem"
          }
        },
        "plan_nso_group" : {
          "description" : "Non-Subscription Offerings that are bundled with the plan as part of NSO group",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanNsoGroup"
          }
        },
        "nso_group_min_qty" : {
          "description" : "Minimum NSO quantity needed during plan purchase for the NSO group.",
          "type" : "string"
        },
        "nso_group_max_qty" : {
          "description" : "Maximum NSO quantity needed during plan purchase for the NSO group.",
          "type" : "string"
        },
        "nso_group_item_scope" : {
          "description" : "Scope of bundled NSO group during plan purchase.",
          "type" : "string"
        },
        "plan_nso_incl_list" : {
          "description" : "Non-Subscription Offerings inclusion list that is in addition to NSOs that are  bundled with the plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanNsoInclList"
          }
        },
        "plan_translation_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanTranslationDetail"
          }
        }
      }
    },
    "GetUseridHasOrderedSkuMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_userid_has_ordered_sku_m" ],
          "default" : "get_userid_has_ordered_sku_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "user_id" : {
          "description" : "The user ID of the account in question",
          "type" : "string"
        },
        "sku" : {
          "description" : "Client-assigned SKU code for product or service being referenced.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "user_id", "sku" ]
    },
    "GetStatementForInvSizeMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_statement_for_inv_size_m" ],
          "default" : "get_statement_for_inv_size_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "do_encoding" : {
          "description" : "True indicates to acquire the message size after doing MIME encoding, False acquires message size without MIME encoding.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "invoice_no" ]
    },
    "RecordMandateApprovalMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetAcctMessageMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "message_body" : {
          "description" : "Content of the message sent to the account holder.\n",
          "type" : "string"
        },
        "mime_type" : {
          "description" : "The mime type of the message, e.g.\"text/plain\" or \"text/html\".\n",
          "type" : "string"
        }
      }
    },
    "PromotionsForSet" : {
      "type" : "object",
      "description" : "The promo codes associated with this group of plans",
      "properties" : {
        "promo_code" : {
          "description" : "The promo code itself",
          "type" : "string"
        },
        "promo_code_desc" : {
          "description" : "A long description of this promo code",
          "type" : "string"
        }
      }
    },
    "GetExtendedTransactionInfoMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "trans_create_user" : {
          "description" : "Specifies the user ID that created the transaction.",
          "type" : "string"
        },
        "trans_create_date" : {
          "description" : "Specifies the date/time on which the transaction was created. The date is in the format yyyy-mm-dd hh24:mi:ss.\n",
          "type" : "string"
        },
        "extended_transaction_qualifiers" : {
          "description" : "An  Array of optional transaction qualifiers for the given transaction ID.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExtendedTransactionQualifier"
          }
        }
      }
    },
    "GetAcctTransHistoryMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_trans_history_m" ],
          "default" : "get_acct_trans_history_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The responsibility level code. These are values 1 through 3 as described in the legend for this argument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "The client-defined identifier of the master plan instance on the child account for which payment responsibility is being set.\n",
          "type" : "string"
        },
        "transaction_type" : {
          "description" : "Transaction type to search account history for.",
          "type" : "integer",
          "format" : "int64"
        },
        "start_date" : {
          "description" : "Specifies start date. The date is in the format yyyy-mm-dd",
          "type" : "string"
        },
        "end_date" : {
          "description" : "Specifies end date. The date is in the format yyyy-mm-dd",
          "type" : "string"
        },
        "record_limit" : {
          "description" : "This is the maximum number of records to retrieve from the query.",
          "type" : "integer",
          "format" : "int64"
        },
        "filter_statement_no" : {
          "description" : "Statement number filter to use when querying for account transaction history.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "include_void_transactions" : {
          "description" : "Allows whether or not to include void transactions.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "SuppPlansService" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "service_no" : {
          "description" : "The Aria-assigned unique identifier for the service associated with the plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "The client-defined identifier for the service associated with the plan.",
          "type" : "string"
        },
        "svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_svc_location_id" : {
          "description" : "The client-defined unique identifier for the origin location for the service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.",
          "type" : "string"
        },
        "dest_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the destination contact for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "UpdateAcctPlanUnitInstanceMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_acct_plan_unit_instance_m" ],
          "default" : "update_acct_plan_unit_instance_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "plan_unit_inst_no" : {
          "description" : "Aria unique Plan Unit Instance Number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_unit_inst_id" : {
          "description" : "Client-assigned identifier for the plan unit instance.",
          "type" : "string"
        },
        "new_client_plan_unit_inst_id" : {
          "description" : "New client-assigned identifier for the plan unit instance, which will replace the existing client-assigned identifier currently on the plan unit instance.'\n",
          "type" : "string"
        },
        "plan_unit_instance_services" : {
          "description" : "This return value of array of plan unit instance.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstanceService"
          }
        },
        "plan_unit_inst_fields" : {
          "description" : "Array of client-defined plan unit instance fields.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstField"
          }
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "proration_invoice_timing" : {
          "description" : "Determines whether to create a separate invoice for prorated charges immediately, or defer to the next anniversary date. Note that this will override the Proration Invoice Timing configuration saved with the plan in the product catalog.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetClientPlansBasicMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "plan_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanDetail"
          }
        }
      }
    },
    "BillingContactInfo" : {
      "type" : "object",
      "description" : "Array",
      "properties" : {
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact on this account to be used as the billing contact for the payment method. If bill_contact_no is included in the API request, all other billing contact parameters are ignored.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AppliedCmLineDetail" : {
      "type" : "object",
      "description" : "Array of credit memo line application.",
      "properties" : {
        "applied_to_invoice_no" : {
          "description" : "The invoice number this credit applied to.",
          "type" : "integer",
          "format" : "int64"
        },
        "applied_to_invoice_line_no" : {
          "description" : "The invoice line number this credit applied to.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_line_transaction_id" : {
          "description" : "The invoice line transaction id.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_no_out" : {
          "description" : "The unique Aria-generated number for the credit memo.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_line_no_out" : {
          "description" : "Credit memo line number.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_transaction_id_out" : {
          "description" : "Credit memo line transaction id.",
          "type" : "integer",
          "format" : "int64"
        },
        "line_amt_applied" : {
          "description" : "Credit amount applied against the invoice service line.",
          "type" : "number"
        },
        "line_tax_amt_applied" : {
          "description" : "Credit amount applied against taxes of the invoice service line.",
          "type" : "number"
        }
      },
      "required" : [ "applied_to_invoice_no", "applied_to_invoice_line_no", "invoice_line_transaction_id", "cm_no_out", "cm_line_no_out", "cm_transaction_id_out", "line_amt_applied", "line_tax_amt_applied" ]
    },
    "GetAcctSuppFieldsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "supp_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppField"
          }
        }
      }
    },
    "RecordExternalPaymentMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction.",
          "type" : "integer",
          "format" : "int64"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "SuppPlan" : {
      "type" : "object",
      "description" : "Supplemental plan instances assigned directly under a master plan instance\\n",
      "properties" : {
        "supp_plan" : {
          "description" : "Supplemental plan instances assigned under another supplemental plan instance. This contains the same set of fields as the supplemental plan instances located directly under a master plan instance. This supports the creation of a master/supplemental plan structure, with a top-level master plan instance containing a hierarchy of supplemental plan instances.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppPlan"
          }
        },
        "plan_no" : {
          "description" : "Aria-assigned identifier for a supplemental service plan. Allowable values are limited to valid custom plan numbers for a client. Entering a value in this field assigns a supplemental plan to a master plan instance on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client-defined supplemental plan ID",
          "type" : "string"
        },
        "plan_instance_description" : {
          "description" : "Description for each assigned master plan",
          "type" : "string"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined ID for each assigned master plan",
          "type" : "string"
        },
        "plan_instance_idx" : {
          "description" : "Used for non-persistent referencing of a plan instance within the API request. Entering a value in this field is required to map the supplemental plan to its parent plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_units" : {
          "description" : "Multiplier variable for the recurring rate on the plan. Generally this value is 1, indicating the face value of the plan's recurring fee is used.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "supp_plan_services" : {
          "description" : "List of services associated with the master plan being assigned on the account",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppPlanService"
          }
        },
        "plan_unit_instances" : {
          "description" : "Array of plan unit instances\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstance"
          }
        },
        "supp_plan_nso_list" : {
          "description" : "Non-Subscription offerings that are purchased with the plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppPlanNsoList"
          }
        },
        "plan_instance_fields_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanInstanceFieldsInfo"
          }
        },
        "alt_rate_schedule_no" : {
          "description" : "Aria-assigned identifier for an alternative rate schedule that is assigned to the supplemental plan in place of the default rate schedule\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_rate_schedule_id" : {
          "description" : "Client-defined alternate rate schedule ID",
          "type" : "string"
        },
        "usage_accumulation_reset_months" : {
          "description" : "Number of reset months for each plan",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_pooling" : {
          "description" : "Indicates whether usage pooling is enabled for this plan instance. Allowable values are 'true' and 'false'.\n",
          "type" : "string"
        },
        "usage_threshold_applicability" : {
          "description" : "Usage tracking options on the plans in the account",
          "type" : "string"
        },
        "custom_rates" : {
          "description" : "Array of custom rates for the services provided in the supplemental plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomRate"
          }
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the plan instance",
          "type" : "string"
        }
      }
    },
    "RecordOutGoingPaymentMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "ChildAcct" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetMasterPlansBySuppFieldMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "master_plans_dtl_by_supp_field" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlansDtlBySuppField"
          }
        }
      }
    },
    "ContractPlanInstanceInfo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_no" : {
          "description" : "The unique numberic identifier of the plan instance..\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The name of the plan this line represents",
          "type" : "string"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined ID for each assigned master plan.",
          "type" : "string"
        },
        "plan_instance_status_cd" : {
          "description" : "The status code of the plan instance associated with this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_status_label" : {
          "description" : "This is the status for each plan instance associated with the contract. (ex: Active, Terminated etc.).\n",
          "type" : "string"
        },
        "rollover_plan_no" : {
          "description" : "Note that if the target rollover plan has a surcharge that has already been associated with this account, when the plan rollover occurs at the completion of this contract, the surcharge for this plan may be ignored (depending on the client parameter determining whether duplicate surcharges are permitted). The surcharge at the account level will remain in effect.",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_client_plan_id" : {
          "description" : "Note that if the target rollover plan has a surcharge that has already been associated with this account, when the plan rollover occurs at the completion of this contract, the surcharge for this plan may be ignored (depending on the client parameter determining whether duplicate surcharges are permitted). The surcharge at the account level will remain in effect.",
          "type" : "string"
        },
        "rollover_rate_sched_no" : {
          "description" : "Pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_client_rate_sched_id" : {
          "description" : "Client-defined ID of the pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract",
          "type" : "string"
        },
        "contract_rollover_custom_rate_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractRolloverCustomRateInfo"
          }
        }
      }
    },
    "SetUsgThresholdMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "InRegUssConfigParam" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "param_name" : {
          "description" : "The name of the config param to replace",
          "type" : "string"
        },
        "param_val" : {
          "description" : "The value to replace the parameter contents with",
          "type" : "string"
        }
      },
      "required" : [ "param_name", "param_val" ]
    },
    "DunningGroup" : {
      "type" : "object",
      "description" : "This array contains information about the account's dunning groups. A dunning group defines the process followed for delinquent payments associated with one or more master plan instances. Each account must have at least one master plan instance, and each master plan instance must have a dunning group. Therefore, you must define at least one dunning group for each account in the API request.\\n",
      "properties" : {
        "dunning_group_name" : {
          "description" : "Name of the dunning group",
          "type" : "string"
        },
        "dunning_group_description" : {
          "description" : "Description of the dunning group",
          "type" : "string"
        },
        "client_dunning_group_id" : {
          "description" : "Client-defined dunning group ID. This value must be unique across all client accounts. This field can also be used as a reference to assign this dunning group to one or more master plan instances within this API request. Either the client_dunning_group_id or dunning_group_idx must be defined if the dunning group is used by one or more master plans within the API request.\n",
          "type" : "string"
        },
        "dunning_group_idx" : {
          "description" : "Non-persistent dunning group identifier. This numeric identifier (1 for the first dunning group, 2 for the second, and etc.) allows the dunning group to be assigned to one or more Master Plan Instances within this API request. Either the client_dunning_group_id or dunning_group_idx must be defined if the dunning group is used by one or more master plans within the API request.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_process_no" : {
          "description" : "Dunning process.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_process_id" : {
          "description" : "Client-defined dunning process identifier.",
          "type" : "string"
        }
      }
    },
    "VoidCreditMemoMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "cm_void_transactions" : {
          "description" : "Array of voided transactions.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CmVoidTransaction"
          }
        },
        "created_by" : {
          "description" : "User ID that created the credit memo.",
          "type" : "string"
        },
        "created_date" : {
          "description" : "Date the credit memo was created in the system.",
          "type" : "string"
        },
        "comments_out" : {
          "description" : "Explanatory text for the void.",
          "type" : "string"
        }
      }
    },
    "SetExternalObjectIdMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "ReplaceRegUssParamsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "SetRegUssParamsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "ProductField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "field_name" : {
          "description" : "Name of the product field associated with the plan in the product catalog.",
          "type" : "string"
        },
        "field_value" : {
          "description" : "Value associated with the product field as defined in the product catalog.",
          "type" : "string"
        }
      }
    },
    "PreCalcPlan" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_item_service_no" : {
          "description" : "Service number for the item on this plan",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_item_plan_no" : {
          "description" : "Plan number the item appears on",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_item_units" : {
          "description" : "Number of units for the item on this plan",
          "type" : "number"
        },
        "plan_item_unit_amount" : {
          "description" : "The per unit amount for the item on this plan",
          "type" : "number"
        },
        "client_plan_item_service_id" : {
          "description" : "Client-defined service ID for the item on this plan",
          "type" : "string"
        },
        "client_plan_item_plan_id" : {
          "description" : "Client-defined plan ID the item appears on",
          "type" : "string"
        }
      }
    },
    "ValidateAcctFraudScoringMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor",
          "type" : "string"
        },
        "proc_payer_auth_request" : {
          "description" : "The unique number for a given authorization.",
          "type" : "string"
        },
        "proc_redirect_issuer_url" : {
          "description" : "The URL where you must post the 3DS data to. This will redirect the shopper.",
          "type" : "string"
        },
        "proc_fraud_scoring_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudScoringInfo"
          }
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        }
      }
    },
    "GetPaymentsOnInvoiceMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_payments_on_invoice_m" ],
          "default" : "get_payments_on_invoice_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "invoice_no" ]
    },
    "GetCountryFromIpMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_country_from_ip_m" ],
          "default" : "get_country_from_ip_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "ip_address" : {
          "description" : "IP address of the account holder, derived from their current session.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "ip_address" ]
    },
    "SuppPlanPlanInstField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_field_name" : {
          "description" : "The plan instance field name",
          "type" : "string"
        },
        "plan_instance_field_value" : {
          "description" : "The plan instance field value",
          "type" : "string"
        }
      }
    },
    "AccountSurcharge" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "surcharge_no" : {
          "description" : "The Surcharge number to be attached to the account",
          "type" : "integer",
          "format" : "int64"
        },
        "surcharge_directive" : {
          "description" : "The surcharge directive to assign/remove the surcharge from the account",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_schedule_no" : {
          "description" : "The Schedule number for this surcharge",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AssignCustomAcctPlanRatesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "EditAcctPlanQueuedChangesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "edit_acct_plan_queued_changes_m" ],
          "default" : "edit_acct_plan_queued_changes_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "edit_queued_changes" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EditQueuedChange"
          }
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "edit_queued_changes" ]
    },
    "UpdateAcctDunningGroupMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_acct_dunning_group_m" ],
          "default" : "update_acct_dunning_group_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "dunning_group_no" : {
          "description" : "The unique identifier of the dunning group.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_group_id" : {
          "description" : "The client-defined identifier of the dunning group.",
          "type" : "string"
        },
        "new_client_dunning_group_id" : {
          "description" : "Client-defined unique identifier for dunning group",
          "type" : "string"
        },
        "dunning_group_name" : {
          "description" : "Dunning Group name",
          "type" : "string"
        },
        "dunning_group_description" : {
          "description" : "Dunning group description",
          "type" : "string"
        },
        "dunning_process_no" : {
          "description" : "Dunning Process code",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_process_id" : {
          "description" : "Client-defined dunning process identifier.",
          "type" : "string"
        },
        "dunning_group_directive" : {
          "description" : "Directive to update / disable the specified dunning group",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plans_summary" : {
          "description" : "Array of master plan numbers associated with the input dunning group or plan instance",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlansSummary"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "WriteoffDisputeInfo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rec_no" : {
          "description" : "Write-off/dispute record number.",
          "type" : "integer",
          "format" : "int64"
        },
        "created_by" : {
          "description" : "Write-off/dispute creator name.",
          "type" : "string"
        },
        "created_date" : {
          "description" : "write-off/dispute created date and format is yyyy-mm-dd hh24:mi:ss.",
          "type" : "string"
        },
        "amount" : {
          "description" : "Write-off/dispute amount.",
          "type" : "number"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_date" : {
          "description" : "Invoice date.",
          "type" : "string"
        },
        "invoice_amt" : {
          "description" : "Invoice amount.",
          "type" : "number"
        },
        "writeoff_detail" : {
          "description" : "A multidimensional array containing the details of all writeoffs applied to an Aria account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WriteoffDetail"
          }
        },
        "dispute_creation_date" : {
          "description" : "Dispute create date",
          "type" : "string"
        },
        "dispute_exp_date" : {
          "description" : "Dispute expiration date.",
          "type" : "string"
        },
        "reason_code" : {
          "description" : "Write-off/dispute reason code.",
          "type" : "integer",
          "format" : "int64"
        },
        "secondary_reason_code" : {
          "description" : "Dispute reason code.",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Write-off/dispute comments",
          "type" : "string"
        },
        "dispute_ind" : {
          "description" : "Specifies  Write-off or dispute.",
          "type" : "integer",
          "format" : "int64"
        },
        "can_unsettle" : {
          "description" : "Specifies if this dispute can be unsettled.",
          "type" : "string"
        }
      }
    },
    "UsageQualifier3" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "usage_qualifier_3" : {
          "description" : "Optional list of filters to apply against usage qualifier number 3, stored in the Aria system",
          "type" : "string"
        }
      }
    },
    "PlanUnitInstFieldValue" : {
      "type" : "object",
      "description" : "Array of client-defined plan unit instance fields.\\n",
      "properties" : {
        "field_value" : {
          "description" : "The value stored under this field.",
          "type" : "string"
        },
        "plan_unit_inst_field_val_directive" : {
          "description" : "The directive is mandatory if field name/value pair are specified.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAcctHierarchyDetailsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_hierarchy_details_m" ],
          "default" : "get_acct_hierarchy_details_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "hierarchy_filter" : {
          "description" : "Specifies the filter which may be parent only, child only or complete hierarchy.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "include_current_acct" : {
          "description" : "Specifies the current account to be included or not.",
          "type" : "integer",
          "format" : "int64"
        },
        "include_supp_plans" : {
          "description" : "Indicates whether to include the supplemental plan instance while retreving the accound details.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "include_billing_groups" : {
          "description" : "Indicates whether to include the billing groups while retreving the accound details.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "include_payment_methods" : {
          "description" : "Indicates whether to include payment methods while retreving the accound details.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "UsageQualifier4" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "usage_qualifier_4" : {
          "description" : "Optional list of filters to apply against usage qualifier number 4, stored in the Aria system",
          "type" : "string"
        }
      }
    },
    "UseridExistsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "ModifyAcctUniversalContractMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "ClientHasEventClassMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "client_has_event_class_m" ],
          "default" : "client_has_event_class_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "class_no" : {
          "description" : "The event class to query of the superclass",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "class_no" ]
    },
    "BillingContactDetail" : {
      "type" : "object",
      "description" : "List of billing contacts saved on the account.",
      "properties" : {
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact on this account to be used as the billing contact for the payment method. If bill_contact_no is included in the API request, all other billing contact parameters are ignored.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ChildAcctNo" : {
      "type" : "object",
      "description" : "An Array of account number of immediate child of the given account number.\\n",
      "properties" : {
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AcctDunningGroup" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "dunning_group_directive" : {
          "description" : "Indicates what operation to perform on each dunning group specified.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "existing_dunning_group_no" : {
          "description" : "The dunning group number mapped against each master plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "existing_client_dunning_group_id" : {
          "description" : "The client-defined dunning group ID mapped against each master plan.",
          "type" : "string"
        },
        "dunning_group_name" : {
          "description" : "Name of the dunning group.",
          "type" : "string"
        },
        "dunning_group_description" : {
          "description" : "Description of the dunning group.",
          "type" : "string"
        },
        "new_client_dunning_group_id" : {
          "description" : "Client-defined dunning group identifier.",
          "type" : "string"
        },
        "dunning_group_idx" : {
          "description" : "Overrides the client-level setting that determines whether or not master plan billing dates should be reset when assigning a new supplemental plan. If this value is left empty, the client-level setting will take effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_process_no" : {
          "description" : "Dunning process code.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_process_id" : {
          "description" : "Client-defined dunning process identifier.",
          "type" : "string"
        }
      }
    },
    "UseridExistsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "userid_exists_m" ],
          "default" : "userid_exists_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "user_id" : {
          "description" : "Account's user ID.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "user_id" ]
    },
    "ServiceOutageLineItem" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "The unique plan identifier of a plan passed into plans_to_get_outage",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The name of the plan",
          "type" : "string"
        },
        "service_no" : {
          "description" : "The invoicing service number",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name" : {
          "description" : "The name of the service",
          "type" : "string"
        },
        "outage_duration" : {
          "description" : "Number of days in outage period",
          "type" : "number"
        },
        "credit_amount" : {
          "description" : "Amount of the outage credit",
          "type" : "number"
        },
        "client_plan_id" : {
          "description" : "Client-defined unique identifier for plan number",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "Client-defined unique identifier for service number.\n",
          "type" : "string"
        },
        "out_acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "out_master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_mp_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        }
      }
    },
    "ApplyCmMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "apply_cm_m" ],
          "default" : "apply_cm_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "This is the client-assigned identifier for the account.\n",
          "type" : "string",
          "maxLength" : 50
        },
        "credit_application_details" : {
          "description" : "Array of credit memo line application.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CreditApplicationDetail"
          }
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "credit_application_details" ]
    },
    "GetAcctNotificationDetailsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_notification_details_m" ],
          "default" : "get_acct_notification_details_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_user_id" : {
          "description" : "Client (or user)-assigned unique account identifier.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "UpdateRefundCheckNoMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "CustomAcctRate" : {
      "type" : "object",
      "description" : "This is a multidimensional array containing elements with the attributes rate_seq_no, rate_per_unit, from_unit, to_unit.\\n",
      "properties" : {
        "rate_seq_no" : {
          "description" : "The Aria-assigned rate sequence number for this rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_per_unit" : {
          "description" : "The rate per unit value for this rate schedule",
          "type" : "number"
        },
        "from_unit" : {
          "description" : "The beginning of the rate tier volume of units for this rate_per_unit",
          "type" : "integer",
          "format" : "int64"
        },
        "to_unit" : {
          "description" : "The end of the rate tier volume of units to relevant to this rate_per_unit",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "rate_seq_no" ]
    },
    "GetAcctPlanBalanceMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_plan_balance_m" ],
          "default" : "get_acct_plan_balance_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the master plan instance.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "AllCredit" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "out_acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "out_master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_mp_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "credit_no" : {
          "description" : "Aria-assigned unique identifier.",
          "type" : "integer",
          "format" : "int64"
        },
        "created_by" : {
          "description" : "Specifies the user ID that created the transaction.",
          "type" : "string"
        },
        "created_date" : {
          "description" : "Specifies the date the credit was created.",
          "type" : "string"
        },
        "amount" : {
          "description" : "The amount of service credit to create on the account.",
          "type" : "number"
        },
        "credit_type" : {
          "description" : "The type of credit: e.g. service or cash.",
          "type" : "string"
        },
        "applied_amount" : {
          "description" : "The amount of credit to be applied to the account.",
          "type" : "number"
        },
        "unapplied_amount" : {
          "description" : "Amount remaining of the total credit to apply to account.",
          "type" : "number"
        },
        "reason_code" : {
          "description" : "Reason code for why the credit was created.",
          "type" : "integer",
          "format" : "int64"
        },
        "reason_text" : {
          "description" : "The text description of the credit reason code.",
          "type" : "string"
        },
        "transaction_id" : {
          "description" : "Unique transaction ID for this cash credit.",
          "type" : "integer",
          "format" : "int64"
        },
        "void_transaction_id" : {
          "description" : "Unique transaction ID if cash credit was voided.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetUsageSummaryByTypeMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_usage_summary_by_type_m" ],
          "default" : "get_usage_summary_by_type_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "user_id" : {
          "description" : "Account's user ID. Alternative to using acct_no.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "usage_type_filter" : {
          "description" : "The Aria-assigned usage type number used to search for usage history records.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "date_filter_start_date" : {
          "description" : "Specifies the start-date of the given date range. The date is in the format yyyy-mm-dd.\n",
          "type" : "string"
        },
        "date_filter_start_time" : {
          "description" : "Specifies the start-time of the given time range. The time is in the format hh24:mi:ss.\n",
          "type" : "string"
        },
        "date_filter_end_date" : {
          "description" : "Specifies the end-date of the given date range. The date is in the format yyyy-mm-dd.\n",
          "type" : "string"
        },
        "date_filter_end_time" : {
          "description" : "Specifies the start-time of the given time range. The time is in the format hh24:mi:ss.\n",
          "type" : "string"
        },
        "billed_filter" : {
          "description" : "Specifies billed records or unbilled records",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_period_flag" : {
          "description" : "Specifies whether to select records of current billing cycle",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_qualifier_1" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageQualifier1"
          }
        },
        "usage_qualifier_2" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageQualifier2"
          }
        },
        "usage_qualifier_3" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageQualifier3"
          }
        },
        "usage_qualifier_4" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageQualifier4"
          }
        },
        "usage_type_cd_filter" : {
          "description" : "The client assigned usage type code used to search for usage history records.",
          "type" : "string"
        },
        "retrieve_excluded_usage" : {
          "description" : "Use this field to include usage records that have been permanently excluded from billing",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetDailyBatchStatusMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "status" : {
          "description" : "An upper-case string, from a list of allowable values, representing the current status of the daily batch process for the given input client and batch date.\n",
          "type" : "string"
        }
      }
    },
    "GetAcctPaymentMethodsAndTermsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "account_payment_methods" : {
          "description" : "An Array of account payment methods.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountPaymentMethod"
          }
        },
        "account_payment_terms" : {
          "description" : "An Array of account payment terms.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountPaymentTerm"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "SendArcThresholdEmailMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "MasterPlanNsoList" : {
      "type" : "object",
      "description" : "Non-Subscription Offerings that are purchased with the plan",
      "properties" : {
        "client_sku" : {
          "description" : "Client SKU of NSO/Inventory item. Entering a value in this field includes this SKU in the order being created.\n",
          "type" : "string"
        },
        "item_units" : {
          "description" : "NSO quantity that is purchased along with plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "item_svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the item (NSO) being purchased. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no takes precedence.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_svc_location_id" : {
          "description" : "Client-defined unique identifier for the origin location for the item (NSO) being purchased",
          "type" : "string"
        },
        "item_dest_contact_idx" : {
          "description" : "Aria-assigned address sequence number",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ModifyAcctSuppFieldsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetAcctNoFromUserIdMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_no_from_user_id_m" ],
          "default" : "get_acct_no_from_user_id_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "user_id" : {
          "description" : "Client (or user)-assigned unique account identifier.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "user_id" ]
    },
    "GenInvoiceMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "gen_invoice_m" ],
          "default" : "gen_invoice_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The master subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined master plan subscription plan instance ID.",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "Billing group number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined unique identifier for billing group",
          "type" : "string"
        },
        "force_pending" : {
          "description" : "Determines whether to create the invoice as a pending invoice (if client is not already configured to do so). Note: If the client is configured for pending invoices, passing \"false\" here will NOT override the client setting. In addition, an invoice_mode value of 1 also overrides this setting.\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions",
          "type" : "string",
          "maxLength" : 50
        },
        "alt_bill_day" : {
          "description" : "Number specifying a day of the month to use as an alternate bill day. You can enter a bill date other than the anniversary date in this field. The invoice_mode must be set to 0 or must be blank to enter a date in this field, it cannot be set to 1.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_mode" : {
          "description" : "For generating advance invoices. Use 0 for the current cycle and 1 for advanced cycle.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "combine_invoices" : {
          "description" : "Indicator for combining invoices when retroactive start dates, negative bill lag days, or plan changes just prior to the next billing date would otherwise generate multiple invoices.  The allowable values are 1, 2, or 3.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetSuppPlansByPromoCodeMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_supp_plans_by_promo_code_m" ],
          "default" : "get_supp_plans_by_promo_code_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "promo_code" : {
          "description" : "This is the code provided the client  and used by the account holder during registration or when executing a transaction.A promotion generally provides access to a custom set of reduced-rate plans.\n",
          "type" : "string"
        },
        "include_rs_summary" : {
          "description" : "If set to \"true\", will retrieve summary level rate schedule information for all the rate schedules that are associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "include_translations" : {
          "description" : "Setting this flag as True will fetch the translated fields in all the locales defined. If not passed it defaults to False.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "promo_code" ]
    },
    "SupplementalFieldFilter" : {
      "type" : "object",
      "description" : "This array will support up to 10 individual inputs.",
      "properties" : {
        "supp_field_name" : {
          "description" : "Name of the supplemental field associated with a plan that will be used to filter results.\n",
          "type" : "string"
        },
        "supp_field_value" : {
          "description" : "Value for the supplemental field listed above that will be used to filter results.\n",
          "type" : "string"
        }
      }
    },
    "AssignFunctionalAcctGroupMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "assign_functional_acct_group_m" ],
          "default" : "assign_functional_acct_group_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "group_no" : {
          "description" : "The group number to use when retreiveing plans assigned to a group.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_group_id" : {
          "description" : "If group_no is left null, this argument should be the client-assigned group ID to assign",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "DeleteAcctCouponMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "delete_acct_coupon_m" ],
          "default" : "delete_acct_coupon_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "coupon_cd" : {
          "description" : "Code of the coupon to remove from the account or master plan instance",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "coupon_cd" ]
    },
    "GetClientItemsAllMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_client_items_all_m" ],
          "default" : "get_client_items_all_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "filter_currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "return_no_cost_items" : {
          "description" : "A boolean value that asserts the API call should include no-cost items in its returned results (true/1=yes, false/0=no).\n",
          "type" : "string"
        },
        "filter_item_no" : {
          "description" : "Aria-assigned unique identifier indicating Client Inventory Item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "include_inactive_items" : {
          "description" : "Specifies whether inactive inventory items need to be included or not",
          "type" : "string"
        },
        "filter_client_item_id" : {
          "description" : "Client assigned unique identifier indicating client Inventory Item.\n",
          "type" : "string"
        },
        "purchase_scope" : {
          "description" : "Purchase scope for inventory item, default is null (both 0 and 1)",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "ChildItemClas" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "class_no" : {
          "description" : "Inventory item class number",
          "type" : "integer",
          "format" : "int64"
        },
        "class_label" : {
          "description" : "Inventory item class label",
          "type" : "string"
        },
        "class_description" : {
          "description" : "Inventory item class description",
          "type" : "string"
        },
        "display_ind" : {
          "description" : "Boolean value indicating if the item is displayable.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "UnappliedCmDetail" : {
      "type" : "object",
      "description" : "Array of credit memo line unapplication.",
      "properties" : {
        "invoice_no_out" : {
          "description" : "The invoice number this credit unapplied from.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_line_no_out" : {
          "description" : "The invoice line number this credit unapplied from.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_line_trans_id_out" : {
          "description" : "The invoice line charge event number.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_no_out" : {
          "description" : "The unique Aria-generated number for the credit memo.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_line_no_out" : {
          "description" : "Credit memo line number.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_transaction_id_out" : {
          "description" : "Credit memo line transaction id.",
          "type" : "integer",
          "format" : "int64"
        },
        "line_amt_unapplied" : {
          "description" : "Credit amount unapplied from the invoice service line.",
          "type" : "number"
        },
        "line_tax_amt_unapplied" : {
          "description" : "Credit amount unapplied from the taxes of invoice service line.",
          "type" : "number"
        }
      },
      "required" : [ "invoice_no_out", "invoice_line_no_out", "invoice_line_trans_id_out", "cm_no_out", "cm_line_no_out", "cm_transaction_id_out", "line_amt_unapplied", "line_tax_amt_unapplied" ]
    },
    "GetUserIdFromAcctNoMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_user_id_from_acct_no_m" ],
          "default" : "get_user_id_from_acct_no_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "ValidateSessionMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "validate_session_m" ],
          "default" : "validate_session_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "session_id" : {
          "description" : "Client-assigned identifier for the application session.",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "session_id" ]
    },
    "GetWebReplacementValsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "web_vals_out" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WebValsOut"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "UseridIsAvailableMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "CompareAgainstCcBlacklistMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "compare_against_cc_blacklist_m" ],
          "default" : "compare_against_cc_blacklist_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "cc_num" : {
          "description" : "Card number to be searched for in the blacklist.\n",
          "type" : "string"
        },
        "include_details" : {
          "description" : "Whether or not to return notes, dates on which card was added to / removed from the blacklist, or alt_caller_id\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "cc_num" ]
    },
    "ApplyCmMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "applied_cm_line_details" : {
          "description" : "Array of credit memo line application.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AppliedCmLineDetail"
          }
        }
      },
      "required" : [ "applied_cm_line_details" ]
    },
    "AcctPlansM" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "Plan Name",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "Text description of this plan",
          "type" : "string"
        },
        "plan_instance_no" : {
          "description" : "Unique plan instance number for each assigned master plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined ID for each assigned master plan.",
          "type" : "string"
        },
        "plan_date" : {
          "description" : "Date on which the account was assigned to their current plan.\n",
          "type" : "string"
        },
        "plan_units" : {
          "description" : "Number of plan units the account is billed for.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "last_bill_date" : {
          "description" : "The date the account was last billed",
          "type" : "string"
        },
        "next_bill_date" : {
          "description" : "Date the account will be evaluated for invoicing, whether or not it results in any actual charges.\n",
          "type" : "string"
        },
        "bill_thru_date" : {
          "description" : "Date the accounts forward charges have been billed through.\n",
          "type" : "string"
        },
        "bill_day" : {
          "description" : "Day of the month that the account is billed.",
          "type" : "integer",
          "format" : "int64"
        },
        "recurring_billing_interval" : {
          "description" : "Number of months between billing cycles\n",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_billing_interval" : {
          "description" : "Number of months between billing cycles\n",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_ind" : {
          "description" : "Indicates whether or not this plan is billable\n",
          "type" : "integer",
          "format" : "int64"
        },
        "display_ind" : {
          "description" : "Indicates whether or not the plan is marked as \"displayable\". 0 means not displayable. 1 means displayable.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_months" : {
          "description" : "Number of months in which the account will change from the current plan to the pre-defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_no" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "early_cancel_fee" : {
          "description" : "Fee charged for early cancellations.",
          "type" : "number"
        },
        "early_cancel_min_months" : {
          "description" : "Number of months during which early cancellation fees would apply on plan cancellation.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "suspension_period" : {
          "description" : "Pre-defined period in days in which an account will degrade to Suspended status (-1) if action is not taken such as a plan or status change.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_plan_status" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status" : {
          "description" : "Status used for the master plan instance at the completion of the rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_duration" : {
          "description" : "Duration of the plan status rollover period, after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status (used in conjuction with rollover_plan_status_uom_cd).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_uom_cd" : {
          "description" : "Units associated with the duration of the plan status rollover period after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status. (used in conjunction with rollover_plan_status_duration).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_duration" : {
          "description" : "Duration of the initial free period (used in conjunction with init_free_period_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_uom_cd" : {
          "description" : "Units associated with the duration of the initial free period (used in conjunction with init_free_period_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_duration" : {
          "description" : "Duration of the plan rollover period (used in conjunction with rollover_plan_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_uom_cd" : {
          "description" : "Units associated with the duration of the plan rollover period (used in conjunction with rollover_plan_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_plan_status_cd" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_cd" : {
          "description" : "Status used for the master plan instance at the completion of the plan status rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_2_assign_on_susp" : {
          "description" : "Plan to assign when an account on this plan is suspended.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "default_notify_method" : {
          "description" : "Default notification method given to an account that is assigned to this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "prepaid_ind" : {
          "description" : "Indicates whether or not this plan is prepaid\n",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "rate_schedule_no" : {
          "description" : "Aria-assigned unique rate schedule number",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_schedule_name" : {
          "description" : "Name of the rate schedule",
          "type" : "string"
        },
        "rate_sched_is_default_ind" : {
          "description" : "Indicates whether or not the account is using the plans default rate schedule. 0 means the account is using an alternate rate schedule. 1 means the account is using the default rate schedule.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "supp_plan_ind" : {
          "description" : "Indicates whether or not the plan is a supplemental plan. If it is \"1\", then the plan is a supplemental plan and if it is \"0\", then the plan is a master plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_status_cd" : {
          "description" : "Current status code of the plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_status_label" : {
          "description" : "Current status of the plan instance.\n",
          "type" : "string"
        },
        "plan_instance_status_date" : {
          "description" : "Most recent date on which the status of the plan instance changed.",
          "type" : "string"
        },
        "dunning_state" : {
          "description" : "Current dunning state of the plan instance (applicable only for master plans).",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_step" : {
          "description" : "Current dunning step of the plan instance (applicable only for master plans currently in dunning).",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_degrade_date" : {
          "description" : "Next future date on which the plan instance would advance to the next dunning step (applicable only for master plans currently in dunning).",
          "type" : "string"
        },
        "plan_assignment_date" : {
          "description" : "The date on which the current plan was assigned on this plan instance.",
          "type" : "string"
        },
        "plan_deprovisioned_date" : {
          "description" : "The date on which the current plan on this plan instance was suspended, cancelled or terminated.",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for which to query available child plans",
          "type" : "string"
        },
        "client_rollover_plan_id" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined client rollover plan ID.\n",
          "type" : "string"
        },
        "client_plan_2_assign_on_susp" : {
          "description" : "Client-defined Plan identifier to assign when an account on this plan is suspended.\n",
          "type" : "string"
        },
        "client_rate_schedule_id" : {
          "description" : "Client assigned unique rate schedule number",
          "type" : "string"
        },
        "proration_invoice_timing_cd" : {
          "description" : "Indicates whether to defer the pro-rated charges to the next anniversary date or to create a seperate invoice immediately.\n",
          "type" : "string"
        },
        "master_plan_instance_no" : {
          "description" : "Master plan instance number for each supplemental plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client master plan instance ID for each supplemental plan.",
          "type" : "string"
        },
        "parent_plan_instance_no" : {
          "description" : "Parent plan instance number to identify each supplemental plan and child supplemental plan heirarchy.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_parent_plan_instance_id" : {
          "description" : "Client parent plan instance ID to identify each supplemental plan and child supplemental plan heirarchy.",
          "type" : "string"
        },
        "contract_rollover_plan_no" : {
          "description" : "Pre-defined plan to be used as the rollover plan at the completion of the contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_plan_id" : {
          "description" : "Client-defined ID of the pre-defined plan to be used as the rollover plan at the completion of a contract.\n",
          "type" : "string"
        },
        "contract_rollover_rate_sched_no" : {
          "description" : "Pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_rate_sched_id" : {
          "description" : "Client-defined ID of the pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract",
          "type" : "string"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the plan instance.",
          "type" : "string"
        },
        "available_from_dt" : {
          "description" : "Start date of assigned rate schedule",
          "type" : "string"
        },
        "available_to_dt" : {
          "description" : "End date of assigned rate schedule",
          "type" : "string"
        },
        "followup_rs_no" : {
          "description" : "Aria internal ID of follow-up default rate schedule for the assigned rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "client_followup_rs_id" : {
          "description" : "Client-defined ID of followup rate schedule for the assigned rate schedule",
          "type" : "string"
        }
      }
    },
    "SpecificInvoicesList" : {
      "type" : "object",
      "description" : "A list of specific invoice charges, see below",
      "properties" : {
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier for invoices. If a single invoice is provided, collection is attempted for the amount due for that invoice. If multiple invoices are provided, one collection is attempted for the combined amount due for all invoices specified. Payment is automatically applied to the invoice line items for the invoices provided (first-in, first-out). Note that invoice_no takes precedence over master_plan_instance_no, which in turn takes precedence over client_master_plan_instance_id.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "PlanNsoGroupPriceOverride" : {
      "type" : "object",
      "description" : "Overridden prices for NSO items.",
      "properties" : {
        "rate_schedule_no" : {
          "description" : "The internal Id of the rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "client_rate_schedule_id" : {
          "description" : "Client assigned unique rate schedule number",
          "type" : "string"
        },
        "currency_cd" : {
          "description" : "Currency code for Inventory item.",
          "type" : "string"
        },
        "override_price" : {
          "description" : "Overridden price for Inventory item for currencies.",
          "type" : "string"
        }
      }
    },
    "SurchargesAll" : {
      "type" : "object",
      "description" : "A multidimensional array of Surcharges for this plan'\\n",
      "properties" : {
        "surcharge_no" : {
          "description" : "Surcharge number for this plan",
          "type" : "integer",
          "format" : "int64"
        },
        "surcharge_name" : {
          "description" : "Surcharge name for this plan",
          "type" : "string"
        },
        "client_surcharge_id" : {
          "description" : "Client-defined surcharge ID.",
          "type" : "string"
        },
        "description" : {
          "description" : "description for surcharge.",
          "type" : "string"
        },
        "ext_description" : {
          "description" : "External Description for surcharge.",
          "type" : "string"
        },
        "surcharge_type" : {
          "description" : "Surcharge type for the plan.",
          "type" : "string"
        },
        "currency" : {
          "description" : "Currency for this surcharge plan\n",
          "type" : "string"
        },
        "tax_group" : {
          "description" : "If taxable, the tax group this item belongs to",
          "type" : "string"
        },
        "invoice_app_method" : {
          "description" : "Invoice application method of this plan surcharge",
          "type" : "string"
        },
        "rev_gl_code" : {
          "description" : "Revenue Account GL Code for this plan surcharge",
          "type" : "string"
        },
        "ar_gl_code" : {
          "description" : "Accounts Recievable GL Code for this plan surcharge",
          "type" : "string"
        },
        "surcharge_rate" : {
          "description" : "A multidimensional array of Surcharges Rate for this plan'\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SurchargeRate"
          }
        }
      }
    },
    "BillingGroupsUpdated" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "billing_group_no" : {
          "description" : "The unique identifier of the billing group.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_groups_id" : {
          "description" : "The client-defined identifier of the billing group.\n",
          "type" : "string"
        },
        "primary_payment_method_no" : {
          "description" : "Primary payment method ID.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "primary_client_payment_method_id" : {
          "description" : "Client-defined unique identifier of the primary payment method.\n",
          "type" : "string"
        },
        "backup_payment_method_no" : {
          "description" : "Backup payment method ID.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "backup_client_payment_method_id" : {
          "description" : "Client-defined unique identifier of the backup payment method'\n",
          "type" : "string"
        },
        "billing_group_operation" : {
          "description" : "The billing group number mapped against each master plan.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "EligibleServiceType" : {
      "type" : "object",
      "description" : "A list of eligible service types",
      "properties" : {
        "eligible_service_types" : {
          "description" : "Service type code for which the credit is applicable.\n",
          "type" : "string"
        }
      }
    },
    "SpecificTransaction" : {
      "type" : "object",
      "description" : "Array of transaction details.",
      "properties" : {
        "transaction_id" : {
          "description" : "The transaction ID is used to identify object to which credit will be applied.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "trans_credit_amount" : {
          "description" : "The amount of credit to be applied aginst the transaction_id.\n",
          "type" : "number"
        }
      }
    },
    "GetAufStatusMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_auf_status_m" ],
          "default" : "get_auf_status_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "file_name" : {
          "description" : "Filename of the targe file submitted for load.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "ErrorCode" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "out_acct_no" : {
          "description" : "",
          "type" : "integer",
          "format" : "int64"
        },
        "out_master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_mp_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "recur_credit_no" : {
          "description" : "The identifier for the recurring credit.",
          "type" : "integer",
          "format" : "int64"
        },
        "error_code" : {
          "description" : "The error code for the specific record provided",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "The error message for the specific record provided",
          "type" : "string"
        }
      }
    },
    "ItemImage" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "image_class_name" : {
          "description" : "The category of the image, such as thumbnail or full",
          "type" : "string"
        },
        "image_class_no" : {
          "description" : "The unique ID for the image class",
          "type" : "integer",
          "format" : "int64"
        },
        "image_class_seq_no" : {
          "description" : "The sequence number of this image within its class",
          "type" : "integer",
          "format" : "int64"
        },
        "image_url" : {
          "description" : "The actual URL for this image",
          "type" : "string"
        },
        "image_text" : {
          "description" : "The alt text for the image tag displaying the item image",
          "type" : "string"
        },
        "default_ind" : {
          "description" : "Whether or not this image is the default for that item",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetWriteoffDetailsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "writeoff_detail" : {
          "description" : "A multidimensional array containing the details of all writeoffs applied to an account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WriteoffDetail"
          }
        }
      }
    },
    "GetCcVelocityInfoMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_cc_velocity_info_m" ],
          "default" : "get_cc_velocity_info_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "cc_num" : {
          "description" : "Card number to be searched for velocity data.\n",
          "type" : "string"
        },
        "start_date" : {
          "description" : "Velocity data will be returned for actions performed on or after this date (inclusive). The date is in the format yyyy-mm-dd.\n",
          "type" : "string"
        },
        "end_date" : {
          "description" : "Velocity data will be returned for actions performed on or before this date (inclusive). The date is in the format yyyy-mm-dd.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "cc_num" ]
    },
    "MasterPlanPlanInstField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_field_name" : {
          "description" : "Required based on the definition of each plan instance field associated with the new plan.",
          "type" : "string"
        },
        "plan_instance_field_value" : {
          "description" : "The value of the product field. Values for product fields that do not match what is expected based on product field configuration will be ignored.\n",
          "type" : "string"
        },
        "plan_instance_field_directive" : {
          "description" : "Required for each plan instance field provided.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAcctSuppFieldsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_supp_fields_m" ],
          "default" : "get_acct_supp_fields_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "GetClientPlansBasicMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_client_plans_basic_m" ],
          "default" : "get_client_plans_basic_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "plan_no" : {
          "description" : "The unique plan identifier, if only one plan is desired.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for which to query available child plans",
          "type" : "string"
        },
        "include_rs_summary" : {
          "description" : "If set to \"true\", will retrieve summary level rate schedule information for all the rate schedules that are associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "include_translations" : {
          "description" : "Setting this flag as True will fetch the translated fields in all the locales defined. If not passed it defaults to False.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetFamilyTransHistoryMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "fam_transactions" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FamTransaction"
          }
        }
      }
    },
    "FraudField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "fraud_field_name" : {
          "description" : "The name of the Processor specific fraud field. Refer the allowed values from above.\n",
          "type" : "string"
        },
        "fraud_field_value" : {
          "description" : "The value associated with the fraud_field_name. Refer the fraud_field_name description for the allowable values.\n",
          "type" : "string"
        }
      }
    },
    "UpdateAcctPlanMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_acct_plan_m" ],
          "default" : "update_acct_plan_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the account's plan instance that this API call will update.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the account's plan instance that this API call will update.\n",
          "type" : "string"
        },
        "alt_rate_schedule_no" : {
          "description" : "Alternative Rate Schedule Number. The alt_rate_schedule_no is the unique identifier for an alternative rate schedule that can be assigned to the account holder in place of the default rate schedule. This is often done by CSR's to provide special compensation or discounts as incentives to account holders.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_units" : {
          "description" : "The units of the plan added at this change",
          "type" : "number"
        },
        "coupon_codes" : {
          "description" : "An array of coupon details for the master plan instance.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CouponCode"
          }
        },
        "promo_cd" : {
          "description" : "This is the code provided the client  and used by the account holder during registration or when executing a transaction. A promotion generally provides access to a custom set of reduced-rate plans.\n",
          "type" : "string"
        },
        "plan_status" : {
          "description" : "Updates the plan status for the plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_description" : {
          "description" : "Updated the description for the plan instance.\n",
          "type" : "string"
        },
        "plan_instance_field_update" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanInstanceFieldUpdate"
          }
        },
        "assignment_directive" : {
          "description" : "The rule to be applied to this assignment request, governing the proration rule is applied. Default behavior is to make the plan change (assign/deassign a plan to an account, change units on an existing plan, etc.) immediately based on client-defined default proration rule, resulting in appropriate prorated charge and credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "custom_rates" : {
          "description" : "An array of custom rates for the specified account number\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomRate"
          }
        },
        "effective_date" : {
          "description" : "If the assignment directive is for a future date assignment, this is the date, in yyyy-mm-dd format, on which the plan change will be executed. If this field is NULL, then the plan change will not happen until it is manually executed or until the effective_date is updated.\n",
          "type" : "string"
        },
        "offset_interval" : {
          "description" : "If assigning a change on an anniversary day, the number of billing periods by which to delay that change. If the new plan is different from the old plan, and this value is greater than 0, then the billing date continues to be the annniversary date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "force_master_bill_date_reset" : {
          "description" : "Overrides the \"Sync_mstr_bill_dates_on_1st_supp\" client-level setting that determines whether or not no-charge master plan billing dates should be reset when assigning a new supplemental plan or when the supplemental plan instance status is updated to a billable status. If this value is left empty, the client-level setting will take effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_rate_schedule_id" : {
          "description" : "Client-defined alternate rate schedule identifier to assign (if any). If none is specified, the default rate schedule number will be used.\n",
          "type" : "string"
        },
        "new_client_plan_inst_id" : {
          "description" : "identifier for a parent account master plan. Required if resp_level_cd is 2 or 3.",
          "type" : "string"
        },
        "dunning_state" : {
          "description" : "Dunning state assigned to the master plan instance. In Progress indicates the master plan is in dunning. None indicates the master plan is not in dunning. Note that dunning state is applicable only for master plans and is set to Complete by the system once the dunning process is completed.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "degrade_date" : {
          "description" : "Date on which the Dunning Manager evaluates whether the master plan should be advanced to the next step of the dunning process. Applicable only for master plans, and only if the dunning_state is set to 1.\n",
          "type" : "string"
        },
        "resp_level_cd" : {
          "description" : "The responsibility level code. These are values 1 through 4 as described in the legend for this argument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_acct_master_plan_inst_id" : {
          "description" : "Unique identifier of a plan in the plan instance hierarchy under which the new plan will be assigned.",
          "type" : "string"
        },
        "usage_accumulation_reset_months" : {
          "description" : "The number of reset months for each plan",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_pooling" : {
          "description" : "Indicates whether usage pooling is enabled for this plan instance. Allowable values are 'true' and 'false'.\n",
          "type" : "string"
        },
        "usage_threshold_applicability" : {
          "description" : "Usage tracking options on the plans in the account",
          "type" : "string"
        },
        "mp_surcharges" : {
          "description" : "Surcharge for master plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MpSurcharge"
          }
        },
        "proration_invoice_timing" : {
          "description" : "Determines whether to create a separate invoice for prorated charges immediately, or defer to the next anniversary date. Note that this will override the Proration Invoice Timing configuration saved with the plan in the product catalog.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the plan instance.",
          "type" : "string"
        },
        "plan_update_services" : {
          "description" : "List of services associated with the plan being assigned or updated on the account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUpdateService"
          }
        },
        "plan_instance_supp_field_update_only" : {
          "description" : "This field controls the ability to update plan instance fields on a plan that is in non-provisioned status.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "force_bill_date_reset" : {
          "description" : "When a master plan's status changes from non-billable to billable, this input will determine what the billing dates of the specific master plan and all associated supplemental plans anniversary date will be.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "GetMasterPlansBySuppFieldMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_master_plans_by_supp_field_m" ],
          "default" : "get_master_plans_by_supp_field_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "field_no" : {
          "description" : "The plan supplemental field number which is being searched against",
          "type" : "integer",
          "format" : "int64"
        },
        "field_val" : {
          "description" : "The value of the supplemental field which all returned plans should possess",
          "type" : "string"
        },
        "field_name" : {
          "description" : "The optional name of this supplemental field, if the number is not known",
          "type" : "string"
        },
        "include_rs_summary" : {
          "description" : "If set to \"true\", will retrieve summary level rate schedule information for all the rate schedules that are associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "include_translations" : {
          "description" : "Setting this flag as True will fetch the translated fields in all the locales defined. If not passed it defaults to False.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "field_val" ]
    },
    "GetAcctStatusHistoryMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_status_history_m" ],
          "default" : "get_acct_status_history_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_number" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "account_number" ]
    },
    "GetAcctPlansMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_plans_m" ],
          "default" : "get_acct_plans_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "SettleAccountBalanceMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "settle_account_balance_m" ],
          "default" : "settle_account_balance_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "Aria generated unique identifier for the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance.",
          "type" : "string"
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "Client-defined ID for this payment method.\n",
          "type" : "string"
        },
        "alt_pay_method" : {
          "description" : "If you want to use the account's current form of payment, leave this field empty. If you want to use an alternate credit card, enter '1' in this field.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_number" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "bank_acct_num" : {
          "description" : "The bank account number.\n",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_zip" : {
          "description" : "Zip Code of the billing contact",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_extension" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_extension" : {
          "description" : "Work phone extenstion of the billing contact",
          "type" : "string"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "bank_acct_type" : {
          "description" : "The type of bank account being used.",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "alt_client_acct_group_id" : {
          "description" : "One-time collections account group  to use for this specific call.  Default collections group on the account is not changed.",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "soft_descriptor" : {
          "description" : "Transaction description shown on the buyer's statement that displays a Merchant Name or Item Description typically. This field will be ignored if not supported/certified by the payment processor.\n",
          "type" : "string"
        },
        "soft_descriptor_customer_service" : {
          "description" : "Transaction description shown on the buyer's statement that displays a City for Card Present transactions or a Phone Number for Card Not Present transactions. This field will be ignored if not supported/certified by the payment processor.\n",
          "type" : "string"
        },
        "force_balance_scope" : {
          "description" : "Determines what constitutes the account collectible balance for this transaction",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions.",
          "type" : "string",
          "maxLength" : 50
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "fraud_filter" : {
          "description" : "Enable Fraud Filtering.  This is supported if your payment processor supports this feature and has been certified with Aria.  If no values are provided, the system will default to 2.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "PlanServicesList" : {
      "type" : "object",
      "description" : "A multidimensional array of Services for this plan\\n",
      "properties" : {
        "ledger_code" : {
          "description" : "This field is deprecated in favor of coa_id",
          "type" : "string"
        },
        "fulfillment_based_ind" : {
          "description" : "Indicates if the service is Fulfillment Based or not.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no" : {
          "description" : "The services for this plan\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "The client-defined Service ID for this plan.\n",
          "type" : "string"
        },
        "service_desc" : {
          "description" : "Description of this service",
          "type" : "string"
        },
        "is_recurring_ind" : {
          "description" : "Indicates whether or not this service is a recurring service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_usage_based_ind" : {
          "description" : "Indicates whether or not this service is a usage based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type" : {
          "description" : "The usage type supported by this usage based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "taxable_ind" : {
          "description" : "Indicates whether or not this service is taxable\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_tax_ind" : {
          "description" : "Indicates whether or not this service is a tax based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_arrears_ind" : {
          "description" : "Indicates whether or not this service is an arrears based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_setup_ind" : {
          "description" : "Indicates whether or not this service is a setup bases service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_misc_ind" : {
          "description" : "Indicates whether or not this service is a miscellaneous service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_donation_ind" : {
          "description" : "Indicates whether or not this service is a donation based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_order_based_ind" : {
          "description" : "Indicates whether or not this service is an order based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_cancellation_ind" : {
          "description" : "Indicates whether or not this service is a cancellation based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "coa_id" : {
          "description" : "Chart of accounts ID",
          "type" : "string"
        },
        "client_coa_code" : {
          "description" : "The client-defined override for coa_id",
          "type" : "string"
        },
        "display_ind" : {
          "description" : "Indicates if this service is displayable or not",
          "type" : "integer",
          "format" : "int64"
        },
        "tiered_pricing_rule" : {
          "description" : "The Tiered Pricing Rule",
          "type" : "integer",
          "format" : "int64"
        },
        "is_min_fee_ind" : {
          "description" : "Indicates whether or not this service is a minimum fee.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the service.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_svc_location_id" : {
          "description" : "The client-defined location identifier for the origin location for the service.",
          "type" : "string"
        },
        "svc_location_name" : {
          "description" : "The name of the origin location for the service.",
          "type" : "string"
        },
        "svc_location_company_name" : {
          "description" : "Company name of the service location.",
          "type" : "string"
        },
        "svc_location_address1" : {
          "description" : "First address line of the service location.",
          "type" : "string"
        },
        "svc_location_address2" : {
          "description" : "Second address line of the service location. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "svc_location_address3" : {
          "description" : "Third address line of the service location.",
          "type" : "string"
        },
        "svc_location_city" : {
          "description" : "City of the service location.",
          "type" : "string"
        },
        "svc_location_locality" : {
          "description" : "Locality of the service location.",
          "type" : "string"
        },
        "svc_location_state_prov" : {
          "description" : "State or Province of the service location. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries.  Use the locality field for other countries.",
          "type" : "string"
        },
        "svc_location_country" : {
          "description" : "Country of the location contact. The ISO-compliant 2-character country code abbreviation in uppercase.",
          "type" : "string"
        },
        "svc_location_postal_cd" : {
          "description" : "Postal/Zip code for the service location address.",
          "type" : "string"
        },
        "usage_type_name" : {
          "description" : "The human-readable name of this usage type\n",
          "type" : "string"
        },
        "usage_type_desc" : {
          "description" : "The long description of this usage type\n",
          "type" : "string"
        },
        "usage_type_code" : {
          "description" : "Client-assigned identifier for the type of usage being recorded.\n",
          "type" : "string"
        },
        "usage_unit_label" : {
          "description" : "The display-level description of the units this usage represents.\n",
          "type" : "string"
        },
        "apply_usage_rates_daily" : {
          "description" : "Indicates whether or not this usage-based service is rated on a daily basis.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "TemplatesByClient" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "template_no" : {
          "description" : "Aria-assigned unique identifier indicating each email template created in Aria.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "template_name" : {
          "description" : "User-assigned name for email template",
          "type" : "string"
        },
        "template_class" : {
          "description" : "Aria class assigned to each email template",
          "type" : "string"
        },
        "client_email_template_id" : {
          "description" : "Client assigned unique ID for email template",
          "type" : "string"
        },
        "global_ind" : {
          "description" : "Indicates that email template is global or custom to client",
          "type" : "integer",
          "format" : "int64"
        },
        "default_ind" : {
          "description" : "Indicates that email template is default for the template class or not",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAcctBillingGroupDetailsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "billing_groups" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingGroup"
          }
        },
        "payment_methods_summary" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentMethodsSummary"
          }
        }
      }
    },
    "CollectionInfo" : {
      "type" : "object",
      "description" : "A multidimensional array of collection information of master plan instance.\\n",
      "properties" : {
        "collection_error_code" : {
          "description" : "If a collection is attempted, returns the error code associated with the collection.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_error_msg" : {
          "description" : "The error message associated with collection_error_code.\n",
          "type" : "string"
        },
        "bill_group_no" : {
          "description" : "Aria-assigned bill group number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_bill_group_id" : {
          "description" : "Specifies Client-defined ID for bill group",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "Payment Gateway / Payment Processor ID used to identify the transaction requiring 3DSecure authorization. Please note that this field is used in other places to identify a particular ID for payment gateway orders and 3DSecure transactions.\n",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor\n",
          "type" : "string"
        },
        "proc_payer_auth_request" : {
          "description" : "The unique number for a given authorization.",
          "type" : "string"
        },
        "proc_redirect_issuer_url" : {
          "description" : "The URL where you must post the 3DS data to. This will redirect the shopper.",
          "type" : "string"
        },
        "proc_card_available_balance" : {
          "description" : "Additional information passed back from processor for available balance on prepaid, gift card, and in some cases credit cards, if available.",
          "type" : "number"
        },
        "proc_prepaid_ind" : {
          "description" : "Additional information passed back from processor identifying this card as a prepaid card (if available).",
          "type" : "string"
        },
        "proc_prepaid_reloadable" : {
          "description" : "Additional information passed back from processor identifying whether prepaid card is reloadable (if available).",
          "type" : "string"
        },
        "proc_prepaid_card_type" : {
          "description" : "Additional information passed back from processor to categorize the type of prepaid card (if available).",
          "type" : "string"
        },
        "proc_affluence_type" : {
          "description" : "Additional information passed back from processor indicating if card is affluent.",
          "type" : "string"
        },
        "proc_issuing_country" : {
          "description" : "Additional information passed back from processor indicating issuing country for the card.",
          "type" : "string"
        },
        "proc_card_product_type" : {
          "description" : "Additional information passed back from processor indicating whether the submitted card is a commercial or consumer card, providing you with additional data useful when analyzing sales patterns and/or planning marketing campaigns.",
          "type" : "string"
        }
      }
    },
    "ModifyInstanceContractMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "modify_instance_contract_m" ],
          "default" : "modify_instance_contract_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "contract_no" : {
          "description" : "Aria-assigned unique contract identifier.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_contract_id" : {
          "description" : "Client assigned unique contract identifier..",
          "type" : "string"
        },
        "new_client_contract_id" : {
          "description" : "Client assigned unique contract identifier..",
          "type" : "string"
        },
        "type_no" : {
          "description" : "The type of contract end action to be enforced by this contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "length_months" : {
          "description" : "Number of months, starting from start_date, that the given contract will be in effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "update_comments" : {
          "description" : "CSR or API-provided comments provided at time of modify contract.\n",
          "type" : "string"
        },
        "cancel_fee" : {
          "description" : "Fee to be charged if the plan instance is cancelled by the account holder.  For a multi-plan contract, this will be applicable only when the last remaining plan instance is cancelled prior to the contract's end date.\n",
          "type" : "number"
        },
        "modify_directive" : {
          "description" : "Whether to add or remove the contract",
          "type" : "integer",
          "format" : "int64"
        },
        "start_date" : {
          "description" : "Contract start date in yyyy-mm-dd format. Defaults to the current date if not specified. This field is required for a plan or contract with a future start date.\n",
          "type" : "string"
        },
        "end_date" : {
          "description" : "End date of the date range covered by this line item in yyyy-mm-dd format.\n",
          "type" : "string"
        },
        "cascade_action" : {
          "description" : "An indicator on the plan_instance associated to the contract should indicate if the cascade option was selected when the plan_instance was assigned to the contract.\n",
          "type" : "string"
        },
        "contract_plan_instances_update" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractPlanInstancesUpdate"
          }
        },
        "contract_rollover_custom_rates" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractRolloverCustomRate"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "PlanUnitInstance" : {
      "type" : "object",
      "description" : "Array of plan unit instances\\n",
      "properties" : {
        "client_plan_unit_inst_id" : {
          "description" : "Client-assigned identifier for the plan unit instance. If valued, creates a plan unit instance for the plan you are assigning to this account.\n",
          "type" : "string"
        },
        "plan_unit_instance_services" : {
          "description" : "Array of plan unit instance services\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstanceService"
          }
        },
        "plan_unit_inst_fields" : {
          "description" : "Array of client-defined plan unit instance fields\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstField"
          }
        }
      }
    },
    "AcctSuppFieldValue" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "supp_field_value" : {
          "description" : "The values stored in the specified supplemental field",
          "type" : "string"
        }
      }
    },
    "GetVirtualDatetimeMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "virtual_date" : {
          "description" : "The current virtual system date for the given client, in format yyyy-mm-dd (after application of input parameter \"offset_hours\").\n",
          "type" : "string"
        },
        "virtual_time" : {
          "description" : "The current virtual system time for the given client, in format hh24:mi:ss (after application of input parameter \"offset_hours\").\n",
          "type" : "string"
        },
        "system_date" : {
          "description" : "The current actual system date,in format yyyy-mm-dd.",
          "type" : "string"
        },
        "system_time" : {
          "description" : "The current actual system time,in format hh24:mi:ss.",
          "type" : "string"
        },
        "current_offset_hours" : {
          "description" : "The difference, in truncated hours, between the client's current virtual date/time and the actual system date/time. Will always be zero or a positive integer in non-production systems, and will always be a zero in production systems after application of input parameter \"offset_hours\").\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_batch_running" : {
          "description" : "Returns \"Y\" or \"N\" depending on if the batch jobs are running in the background.",
          "type" : "string"
        }
      }
    },
    "PlanServicesT" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "service_no" : {
          "description" : "The unique ID for the service this line represents.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name" : {
          "description" : "The name of the service this line represents.",
          "type" : "string"
        }
      }
    },
    "GetAvailPlansForAcctAllMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_avail_plans_for_acct_all_m" ],
          "default" : "get_avail_plans_for_acct_all_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The Master and Supplementary Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined identifier for the master plan instance or supplementary plan instance.",
          "type" : "string"
        },
        "promo_cd" : {
          "description" : "This is the code provided the client  and used by the account holder during registration or when executing a transaction. A promotion generally provides access to a custom set of reduced-rate plans.\n",
          "type" : "string"
        },
        "include_full_plan_hierarchy_plans" : {
          "description" : "You can use this input parameter to specify whether to retrieve full hierarchy of child plans associated with the returned plans or with the plan_instance_no or client_plan_instance_id that you specified. If you set the include_full_plan_hierarchy_plans parameter to true , then full hierarchy of child plans down to the bottom level of your plan hierarchy will be returned.\n",
          "type" : "string"
        },
        "include_rs_summary" : {
          "description" : "If set to \"true\", will retrieve summary level rate schedule information for all the rate schedules that are associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned Locale identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "UnappliedPayment" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "payment_transaction_id" : {
          "description" : "Aria generated ID for the payment transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_amount" : {
          "description" : "Total amount of the payment",
          "type" : "number"
        },
        "unapplied_amount" : {
          "description" : "Unapplied portion of the payment amount",
          "type" : "number"
        },
        "cash_credit_transaction_id" : {
          "description" : "Aria generated ID for the cash credit transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "cash_credit_amount" : {
          "description" : "Total amount of the cash credit",
          "type" : "number"
        },
        "unapplied_cash_credit" : {
          "description" : "Unapplied portion of the cash credit",
          "type" : "number"
        }
      }
    },
    "GetAcctPreviewStatementMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_preview_statement_m" ],
          "default" : "get_acct_preview_statement_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The unique identifier for the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance.",
          "type" : "string"
        },
        "alt_stmt_template_no" : {
          "description" : "The statement template to use when generating a statement in a format other than account statement template\n",
          "type" : "number"
        },
        "auto_skip_to_next_bill_date" : {
          "description" : "Preview either prior period not billed statement or current period statement when called during bill lag days\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "CancelAcctPlanMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "proration_result_amount" : {
          "description" : "The currency amount of any resulting proration action performed as a result of the requested plan change. For plan assignments with an assignment directive of '1' (perform on anniversary date), or '2' (honor client default proration action) when the default configuration is to not do proration, or '3' (force no proration), the value returned in this field will always be '0'. When proration is performed the value returned in this field will either be a positive currency value (indicating a resulting charge to the account) or a negative currency value (indicating a credit to the account). If the value passed in field do_write is false then any positive or negative value returned in this field is notational only, demonstrating what proration effect would be applied to the account if the requested plan assignment/de-assignment were to be actually performed.\n",
          "type" : "number"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_plan_line_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctPlanLineItem"
          }
        },
        "total_charges_before_tax" : {
          "description" : "Total amount to be charged to the account before taxes have been calculated.",
          "type" : "number"
        },
        "total_tax_charges" : {
          "description" : "Total taxes as calculated for the amount of the transaction.",
          "type" : "number"
        },
        "total_charges_after_tax" : {
          "description" : "Total amount to be charged to the account after taxes have been calculated.",
          "type" : "number"
        },
        "total_credit" : {
          "description" : "The total amount of the credit to be applied to the account",
          "type" : "number"
        },
        "total_tax_credit" : {
          "description" : "The tax amount of the credit to be applies",
          "type" : "number"
        },
        "total_credit_before_tax" : {
          "description" : "The credit to be applied before tax is taken into account",
          "type" : "number"
        },
        "total" : {
          "description" : "The grand total of this invoice",
          "type" : "number"
        },
        "proration_credit_result_amount" : {
          "description" : "The total pro-rated credit amount",
          "type" : "number"
        },
        "proration_credit_amount" : {
          "description" : "The non-tax pro-rated credit amount",
          "type" : "number"
        },
        "proration_tax_amount" : {
          "description" : "The pro-rated tax credit amount",
          "type" : "number"
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned here. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        }
      }
    },
    "ManagePendingInvoiceMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "manage_pending_invoice_m" ],
          "default" : "manage_pending_invoice_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "action_directive" : {
          "description" : "Identifies which action to take on the pending invoice. If null, defaults to \"approve pending invoice\".\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_seq" : {
          "description" : "The unique identifier of the bill sequence number.",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_pay_method" : {
          "description" : "If you want to use the account's current form of payment, leave this field empty. If you want to use an alternate credit card, enter '1' in this field.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_number" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "bank_acct_num" : {
          "description" : "The bank account number.\n",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_zip" : {
          "description" : "Zip Code of the billing contact",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_extension" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_extension" : {
          "description" : "Work phone extenstion of the billing contact",
          "type" : "string"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "alt_collect_on_approve" : {
          "description" : "If value is non-null, overrides the client setting regarding whether or not to automatically collect after approving the invoice. Leave this value null to use the client setting.\n",
          "type" : "string"
        },
        "alt_send_statement_on_approve" : {
          "description" : "If value is non-null, overrides the client setting regarding whether or not to automatically send a statement after approving the invoice. Leave this value null to use the client setting.\n",
          "type" : "string"
        },
        "cancel_orders_on_discard" : {
          "description" : "If true then orders will be canceled if the action directive is set to discard pending invoices.\n",
          "type" : "string"
        },
        "bank_acct_type" : {
          "description" : "The type of bank account being used.",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions.",
          "type" : "string",
          "maxLength" : 50
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "custom_status_label" : {
          "description" : "Client-specific custom invoice status that can be edited at the invoice or pending invoice level",
          "type" : "string"
        },
        "client_notes" : {
          "description" : "Client-specific custom invoice notes that can be edited at the invoice or pending invoice level",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "GetClientItemSuppFieldsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "all_item_supp_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllItemSuppField"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetPlansByPromoCodeMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "plan_details" : {
          "description" : "This return value is a multidimensional array describing the detail of all available plans on this promo code.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanDetail"
          }
        }
      }
    },
    "EventList" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "event_list" : {
          "description" : "The event IDs to which this client would like to subscribe",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "event_list" ]
    },
    "PaymentMethod" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "pay_method_type" : {
          "description" : "ID corresponding to a payment method such as credit card, electronic check, prepaid, etc. You must specify a payment method when creating billing information.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "pay_method_name" : {
          "description" : "Human-readable name of the payment method",
          "type" : "string"
        },
        "pay_method_description" : {
          "description" : "Description for the plan method",
          "type" : "string"
        },
        "client_pay_method_cdid" : {
          "description" : "System-defined statement payment method ID",
          "type" : "string"
        },
        "payment_method_idx" : {
          "description" : "For non-persistent referencing of a payment method within the API request",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_contact_idx" : {
          "description" : "For non-persistent referencing of a contact in the contacts array within the API request. If an idx value is specified, inputs provided for other account contact fields will be ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "first_name" : {
          "description" : "First name of the billing contact",
          "type" : "string"
        },
        "mi" : {
          "description" : "Middle initial of the billing contact",
          "type" : "string"
        },
        "last_name" : {
          "description" : "Last name of the billing contact",
          "type" : "string"
        },
        "company_name" : {
          "description" : "Company name of the billing contact",
          "type" : "string"
        },
        "address1" : {
          "description" : "First address line of the contact.",
          "type" : "string"
        },
        "address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "address3" : {
          "description" : "The third line of the address",
          "type" : "string"
        },
        "city" : {
          "description" : "City of the billing contact",
          "type" : "string"
        },
        "locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "state_prov" : {
          "description" : "State or Province of the contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "country" : {
          "description" : "Country of the billing contact as the ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "postal_cd" : {
          "description" : "Postal/Zip code for the billing contact's address",
          "type" : "string"
        },
        "phone" : {
          "description" : "Phone number for the billing contact",
          "type" : "string"
        },
        "phone_ext" : {
          "description" : "Extension for the billing contact's phone number\n",
          "type" : "string"
        },
        "cell_phone" : {
          "description" : "Cell phone number for the billing contact",
          "type" : "string"
        },
        "work_phone" : {
          "description" : "Work phone for the billing contact.",
          "type" : "string"
        },
        "work_phone_ext" : {
          "description" : "Extension for the billing contact's work phone\n",
          "type" : "string"
        },
        "fax" : {
          "description" : "Fax phone number for the billing contact",
          "type" : "string"
        },
        "email" : {
          "description" : "Email for the billing contact",
          "type" : "string"
        },
        "birthdate" : {
          "description" : "Birthdate of the contact in yyyy-mm-dd format.",
          "type" : "string"
        },
        "cc_num" : {
          "description" : "Credit card number",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_acct_num" : {
          "description" : "Bank account number of the account holder's payment method. Together with the (ABA) bank_routing_no, this value is used to execute electronic check or ACH transactions.\n",
          "type" : "string"
        },
        "bank_routing_no" : {
          "description" : "ABA (American Banking Association) unique identifier for the financial institution\n",
          "type" : "string"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to verify a transaction is being requested by the card holder since this value is physically printed on the credit card\n",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "taxpayer_id" : {
          "description" : "Taxpayer identification number",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphens and spaces are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "cc_id" : {
          "description" : "A numeric code indicating the type of credit card.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "UpdatePlanUnitInstance" : {
      "type" : "object",
      "description" : "Array of plan unit instances to be updated. This array is relevant only for updating existing plan unit instances.\\n",
      "properties" : {
        "plan_unit_inst_no" : {
          "description" : "Aria-assigned identifier for the plan unit instance to specify an existing plan unit instance. Either this field, or client_plan_unit_inst_id is required when updating a plan unit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_unit_inst_id" : {
          "description" : "Client-defined identifier for the plan unit instance to specify an existing plan unit instance. This field is required when updating a plan unit.\n",
          "type" : "string"
        },
        "new_client_plan_unit_inst_id" : {
          "description" : "New client-defined identifier to be saved on the plan unit instance.\n",
          "type" : "string"
        },
        "plan_unit_instance_services" : {
          "description" : "Array of plan unit instance services.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstanceService"
          }
        }
      }
    },
    "GetAcctTransHistoryMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "history" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/History"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "PendingInvoice" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.\n",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "Aria-assigned billing group number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "client assagined billing group number",
          "type" : "string"
        }
      }
    },
    "PlansToGetOutage" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "Plan numbers to use to calculate the credit. Plans passed into this array will be used in a proration calculation to determine the cost of the plans for the exact time of the outage\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "PlanHistory" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_no" : {
          "description" : "Unique plan instance number for each assigned master plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_instance_no" : {
          "description" : "Aria generated unique identifier for the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "old_plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "new_plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "old_client_plan_id" : {
          "description" : "Client assigned unique plan identifier",
          "type" : "string"
        },
        "new_client_plan_id" : {
          "description" : "Client assigned unique plan identifier",
          "type" : "string"
        },
        "old_plan_name" : {
          "description" : "The name of the plan this line represents",
          "type" : "string"
        },
        "new_plan_name" : {
          "description" : "The name of the plan this line represents",
          "type" : "string"
        },
        "old_promo_cd" : {
          "description" : "This is the code provided the client  and used by the account holder during registration or when executing a transaction. A promotion generally provides access to a custom set of reduced-rate plans.\n",
          "type" : "string"
        },
        "new_promo_cd" : {
          "description" : "This is the code provided the client  and used by the account holder during registration or when executing a transaction. A promotion generally provides access to a custom set of reduced-rate plans.\n",
          "type" : "string"
        },
        "old_status_cd" : {
          "description" : "Master plan instance status",
          "type" : "integer",
          "format" : "int64"
        },
        "new_status_cd" : {
          "description" : "Master plan instance status",
          "type" : "integer",
          "format" : "int64"
        },
        "old_plan_units" : {
          "description" : "A string array of old plan unit values assigned to the plans listed in plan no\n",
          "type" : "number"
        },
        "new_plan_units" : {
          "description" : "A string array of new plan units associated with the list of plans provided by plan_no\n",
          "type" : "number"
        },
        "old_rate_schedule_no" : {
          "description" : "A string array of old rate schedules associated with the plans listed in plan_no\n",
          "type" : "integer",
          "format" : "int64"
        },
        "new_rate_schedule_no" : {
          "description" : "A string arrray of new rate schedules associated with the plans listed in plan_no\n",
          "type" : "integer",
          "format" : "int64"
        },
        "old_client_rate_schedule_id" : {
          "description" : "A string array of client-defined old rate schedules ID associated with the plans listed in client_plan_id.\n",
          "type" : "string"
        },
        "new_client_rate_schedule_id" : {
          "description" : "A string array of client-defined new rate schedules ID associated with the plans listed in client_plan_id.\n",
          "type" : "string"
        },
        "old_client_plan_instance_id" : {
          "description" : "Unique client-defined ID for each assigned master plan.",
          "type" : "string"
        },
        "new_client_plan_instance_id" : {
          "description" : "Unique client-defined ID for each assigned master plan.",
          "type" : "string"
        },
        "update_date" : {
          "description" : "A string array of dates representing the last update to the plans corresponding to the list provided in plan_no.\n",
          "type" : "string"
        },
        "old_dunning_state" : {
          "description" : "Previous dunning state of the plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "new_dunning_state" : {
          "description" : "Current dunning state of the plan instance.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "PlanUnitInstanceService" : {
      "type" : "object",
      "description" : "Array of plan unit instance services\\n",
      "properties" : {
        "service_no" : {
          "description" : "Specifies the Aria-assigned unique service identifier against which fulfillment details must be captured and stored.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "Client-assigned identifier for the service (only for fulfillment based service)\n",
          "type" : "string"
        },
        "service_fulfillment_date" : {
          "description" : "Fulfilment completion date. Can be a past, current or future date. This field is required if the fulfillment_directive field is set to \"2\".\n",
          "type" : "string"
        },
        "fulfillment_directive" : {
          "description" : "Derives whether the fulfillment date is assigned/modified or removed from the fulfillment based service on the plan unit instance\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ClientPlanIdsToGetOutage" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "client_plan_ids_to_get_outage" : {
          "description" : "Plan ID's used to calculate the credit. Plans passed into this array will be used in a proration calculation to determine the cost of the plans for the exact time of the outage.\n",
          "type" : "string"
        }
      }
    },
    "GetCcUuidMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "uuid" : {
          "description" : "UUID generated for Credit Card number.\n",
          "type" : "string"
        }
      }
    },
    "GetDailyBatchStatusMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_daily_batch_status_m" ],
          "default" : "get_daily_batch_status_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "batch_date" : {
          "description" : "The (virtual) system date to be examined for current operational status of its daily batch jobs.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "batch_date" ]
    },
    "Contact" : {
      "type" : "object",
      "description" : "List of contacts to be created on the account. Note that contacts not used as an account contact, billing contact, or statement contact will be saved on the account.\\n",
      "properties" : {
        "contact_idx" : {
          "description" : "A caller-defined numeric value is required if you wish to add a new contact as an account contact, billing contact, statement contact, or destination contact. This value can then be used to reference this new contact within the context of this API request (and is not stored in Aria).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "first_name" : {
          "description" : "The first name of the contact.",
          "type" : "string"
        },
        "middle_initial" : {
          "description" : "The middle initial of the contact.",
          "type" : "string"
        },
        "last_name" : {
          "description" : "The last name of the contact.",
          "type" : "string"
        },
        "company_name" : {
          "description" : "The company name of the contact.",
          "type" : "string"
        },
        "address1" : {
          "description" : "The first address line of the contact.",
          "type" : "string"
        },
        "address2" : {
          "description" : "The second address line of the contact.",
          "type" : "string"
        },
        "address3" : {
          "description" : "The third address line of the contact.",
          "type" : "string"
        },
        "city" : {
          "description" : "The city of the contact.",
          "type" : "string"
        },
        "locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "state_prov" : {
          "description" : "The state or province of the contact. Note that only the official postal-service codes for states, provinces, and territories in the United States, Australia and Canada are supported. Use the other_locality field for states, provinces, or territories in other countries.\n",
          "type" : "string"
        },
        "country" : {
          "description" : "The country of the contact. Provide the ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "postal_cd" : {
          "description" : "The postal/zip code of the contact.",
          "type" : "string"
        },
        "phone" : {
          "description" : "The phone number of the contact.",
          "type" : "string"
        },
        "phone_ext" : {
          "description" : "The phone number extension of the contact.",
          "type" : "string"
        },
        "cell_phone" : {
          "description" : "The cell phone number of the contact.",
          "type" : "string"
        },
        "work_phone" : {
          "description" : "The work phone number of the contact.",
          "type" : "string"
        },
        "work_phone_ext" : {
          "description" : "The work phone number extension of the contact.",
          "type" : "string"
        },
        "fax" : {
          "description" : "The fax number of the contact.",
          "type" : "string"
        },
        "email" : {
          "description" : "The email address of the contact.",
          "type" : "string"
        },
        "birthdate" : {
          "description" : "Birthdate of the contact in yyyy-mm-dd format.",
          "type" : "string"
        }
      }
    },
    "NsoItemList" : {
      "type" : "object",
      "description" : "Non-Subscription Offerings that are purchased with the plan",
      "properties" : {
        "client_sku" : {
          "description" : "",
          "type" : "string"
        },
        "item_units" : {
          "description" : "NSO quantity that is purchased along with plan",
          "type" : "integer",
          "format" : "int64"
        },
        "item_svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the item (NSO) being purchased. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no will take precedence.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_svc_location_id" : {
          "description" : "The client-defined unique identifier for the origin location for the item (NSO) being purchased. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no will take precedence.",
          "type" : "string"
        },
        "item_dest_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the destination contact for the item (NSO) being purchased. Depending on taxation configuration, this address may be used for tax calculations.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetExtendedTransactionInfoMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_extended_transaction_info_m" ],
          "default" : "get_extended_transaction_info_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_id" : {
          "description" : "Transaction ID for which the optional transaction qualifiers are to be  retrieved.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "transaction_id" ]
    },
    "GetSuppPlansBySuppFieldMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_supp_plans_by_supp_field_m" ],
          "default" : "get_supp_plans_by_supp_field_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "field_no" : {
          "description" : "The plan supplemental field number which is being searched against",
          "type" : "integer",
          "format" : "int64"
        },
        "field_val" : {
          "description" : "The value of the supplemental field which all returned plans should possess",
          "type" : "string"
        },
        "field_name" : {
          "description" : "The optional name of this supplemental field, if the number is not known",
          "type" : "string"
        },
        "include_rs_summary" : {
          "description" : "If set to \"true\", will retrieve summary level rate schedule information for all the rate schedules that are associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "include_translations" : {
          "description" : "Setting this flag as True will fetch the translated fields in all the locales defined. If not passed it defaults to False.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "field_val" ]
    },
    "ReplaceAcctPlanMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Textual description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "proration_result_amount" : {
          "description" : "The currency amount of any resulting proration action performed as a result of the requested plan change. For plan assignments with an assignment directive of '1' (perform on anniversary date), or '2' (honor client default proration action) when the default configuration is to not do proration, or '3' (force no proration), the value returned in this field will always be '0'. When proration is performed the value returned in this field will either be a positive currency value (indicating a resulting charge to the account) or a negative currency value (indicating a credit to the account). If the value passed in field do_write is false then any positive or negative value returned in this field is notational only, demonstrating what proration effect would be applied to the account if the requested plan assignment/de-assignment were to be actually performed.\n",
          "type" : "number"
        },
        "collection_error_code" : {
          "description" : "If a collection is attempted, returns the error code associated with the collection.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_error_msg" : {
          "description" : "The error message associated with collection_error_code.\n",
          "type" : "string"
        },
        "statement_error_code" : {
          "description" : "The error code if statement generation fails.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_error_msg" : {
          "description" : "The text message associated with 'statement_error_code'\n",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor\n",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "expectd_activation_fee" : {
          "description" : "The activation fee the account holder can expect based on the activation fees of the plans on this invoice",
          "type" : "number"
        },
        "expectd_mthly_recurring_cost" : {
          "description" : "Regardless of the billing interval on the account, the monthly recurring cost of this change\n",
          "type" : "number"
        },
        "expectd_annu_recurring_cost" : {
          "description" : "",
          "type" : "number"
        },
        "acct_plan_line_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctPlanLineItem"
          }
        },
        "total_charges_before_tax" : {
          "description" : "Total amount to be charged to the account before taxes have been calculated.",
          "type" : "number"
        },
        "total_tax_charges" : {
          "description" : "Total taxes as calculated for the amount of the transaction.",
          "type" : "number"
        },
        "total_charges_after_tax" : {
          "description" : "Total amount to be charged to the account after taxes have been calculated.",
          "type" : "number"
        },
        "total_credit" : {
          "description" : "The total amount of the credit to be applied to the account",
          "type" : "number"
        },
        "total_tax_credit" : {
          "description" : "The tax amount of the credit to be applies",
          "type" : "number"
        },
        "total_credit_before_tax" : {
          "description" : "The credit to be applied before tax is taken into account",
          "type" : "number"
        },
        "total" : {
          "description" : "The grand total of this invoice",
          "type" : "number"
        },
        "proration_credit_result_amount" : {
          "description" : "The total pro-rated credit amount",
          "type" : "number"
        },
        "proration_credit_amount" : {
          "description" : "The non-tax pro-rated credit amount",
          "type" : "number"
        },
        "proration_tax_amount" : {
          "description" : "The pro-rated tax credit amount",
          "type" : "number"
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned here. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        }
      }
    },
    "UnappliedServiceCreditsDetail" : {
      "type" : "object",
      "description" : "A multidimensional array of service credit records for the given account\\n",
      "properties" : {
        "credit_id" : {
          "description" : "Aria-assigned unique identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "create_date" : {
          "description" : "Date the credit was created",
          "type" : "string"
        },
        "create_user" : {
          "description" : "User who created the credit",
          "type" : "string"
        },
        "initial_amount" : {
          "description" : "Full starting amount of the credit",
          "type" : "number"
        },
        "amount_left_to_apply" : {
          "description" : "Amount remaining of the total credit to apply",
          "type" : "number"
        },
        "reason_cd" : {
          "description" : "Reason code for why the credit was created",
          "type" : "integer",
          "format" : "int64"
        },
        "reason_text" : {
          "description" : "Text description for why the credit was created",
          "type" : "string"
        },
        "comments" : {
          "description" : "Comments from the create_user when the credit was created.",
          "type" : "string"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "service_no_to_apply" : {
          "description" : "The service_no that will be used to represent the credit when it is applied.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name_to_apply" : {
          "description" : "The name/description for \"/service_no_to_apply/\".",
          "type" : "string"
        },
        "eligible_plan_no" : {
          "description" : "If non-null, the service credit will only be applied to invoice line items that match this plan_no.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "eligible_plan_name" : {
          "description" : "The plan name for \"eligible_plan_no\".\n",
          "type" : "string"
        },
        "eligible_service_no" : {
          "description" : "If non-null, the service credit will only be applied to invoice line items that match this service_no.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "eligible_service_name" : {
          "description" : "The service name/description for \"eligible_service_no\".\n",
          "type" : "string"
        },
        "client_service_id_to_apply" : {
          "description" : "The client_service_id that will be used to represent the credit when it is applied.\n",
          "type" : "string"
        },
        "client_eligible_plan_id" : {
          "description" : "If non-null, the service credit will only be applied to invoice line items that match this client_plan_id.\n",
          "type" : "string"
        },
        "client_eligible_service_id" : {
          "description" : "If non-null, the service credit will only be applied to invoice line items that match this client_service_id.\n",
          "type" : "string"
        },
        "amount_reserved_for_anniversary" : {
          "description" : "Amount reserved for anniversary invoice\n",
          "type" : "number"
        },
        "eligible_service_types" : {
          "description" : "A list of eligible service types",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EligibleServiceType"
          }
        },
        "out_acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "out_master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_mp_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        }
      }
    },
    "GetClientCurrenciesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_client_currencies_m" ],
          "default" : "get_client_currencies_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "AssignCollectionsAcctGroupMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "UpdateRefundCheckNoMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_refund_check_no_m" ],
          "default" : "update_refund_check_no_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_user_id" : {
          "description" : "Client (or user)-assigned unique account identifier.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction\n",
          "type" : "integer",
          "format" : "int64"
        },
        "refund_check_number" : {
          "description" : "The check number associated to the refund.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "transaction_id", "refund_check_number" ]
    },
    "GenRandomStringMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "gen_random_string_m" ],
          "default" : "gen_random_string_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "rand_type" : {
          "description" : "Identifies what type of characters are returned in the random string. \"A\" = letters only. \"N\" = numbers only. \"M\" = mixed/alphanumeric (default).\n",
          "type" : "string"
        },
        "rand_length" : {
          "description" : "Identifies how many characters should be in the random string.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rand_case" : {
          "description" : "Identifies the case of the letters returned in the random string. \"U\" = upper. \"L\" = lower. \"M\" = mixed (default).\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "WebValsIn" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "in_replacement_names" : {
          "description" : "An array of the names of the replacement strings for which the replacements are needed",
          "type" : "string"
        }
      }
    },
    "GetAcctDetailsAllMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_details_all_m" ],
          "default" : "get_acct_details_all_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "include_master_plans" : {
          "description" : "Indicates whether to include master plan info. If set to the default value of 1 (true), it will return the full array of master plan info. If set to 0 (false), it will return no master plan info.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "include_supp_plans" : {
          "description" : "Indicates whether to include supplemental plan info.  The field \"include_master_plans\" must be set to 1 to retrieve this information. If set to 1 (true), it will return a full array of supplemental plan info. If set to the default value of 0 (false), it will return no supplemental plan info.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "include_billing_groups" : {
          "description" : "Indicates whether to include billing group info.  If set to 1 (true), it will return a full array of billing group info. If set to the default value of 0 (false), it will return no billing group info.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "include_payment_methods" : {
          "description" : "Indicates whether to include payment method info. The field \"include_billing_groups\" must be set to 1 to retrieve this information. If set to 1 (true), it will return a full array of payment method info. If set to the default value of 0 (false), it will return no payment method info.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "GetCatalogHierarchyMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "plans_count" : {
          "description" : "Returns a total count of the number of Plans in the Client.",
          "type" : "integer",
          "format" : "int64"
        },
        "all_plan_basic_details" : {
          "description" : "Multidimensional array of returned plans and plan structure.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllPlanBasicDetail"
          }
        }
      }
    },
    "SuppPlansAssigned" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "supp_plan_instance_no" : {
          "description" : "Unique plan-instance number for each assigned supplementary plan",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined ID for each assigned supplementary plan",
          "type" : "string"
        },
        "plan_unit_instance_details" : {
          "description" : "Array of plan unit instances",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstanceDetail"
          }
        }
      }
    },
    "GetSuppPlansBySuppFieldMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "supp_plans_dtl_by_supp_field" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppPlansDtlBySuppField"
          }
        }
      }
    },
    "UnitThresholdDestType" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "threshold_dest_type" : {
          "description" : "Returns a string representing the threshold destination type either Stack S or Client C.\n",
          "type" : "string"
        },
        "unit_threshold_balance_types" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UnitThresholdBalanceType"
          }
        }
      }
    },
    "GetRefundDetailsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_refund_details_m" ],
          "default" : "get_refund_details_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "include_voided" : {
          "description" : "Include voided invoices in the search results.",
          "type" : "string"
        },
        "aria_event_no" : {
          "description" : "Aria Event number of the writeoff event",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "GetUserIdFromAcctNoMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "user_id" : {
          "description" : "The user ID of the account requested",
          "type" : "string"
        }
      }
    },
    "CancelUnconsumedCreditMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "CreateAcctDunningGroupMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "CancelAcctUniversalContractMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "cancel_acct_universal_contract_m" ],
          "default" : "cancel_acct_universal_contract_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "update_comments" : {
          "description" : "Comments provided at time of last contract update.\n",
          "type" : "string"
        },
        "close_status" : {
          "description" : "Contract Closure Status (per the allowable values legend)\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "SendAcctEmailMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "send_acct_email_m" ],
          "default" : "send_acct_email_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "user_id" : {
          "description" : "Account's user ID.",
          "type" : "string"
        },
        "template_class" : {
          "description" : "Email Template Class is the category of email templates to choose from. If template_class is provided, the template_no input will be ignored.",
          "type" : "string"
        },
        "template_no" : {
          "description" : "The Aria-generated number of the template to use for sending email. Used only when template_class is not provided.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions",
          "type" : "string",
          "maxLength" : 50
        },
        "client_template_id" : {
          "description" : "The client-defined specific Email Template to send",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "user_id" ]
    },
    "FunctionalAcctGroup" : {
      "type" : "object",
      "description" : "Array of functional account groups",
      "properties" : {
        "functional_acct_group_no" : {
          "description" : "The Aria-assigned identifier of the functional account group in which to place this account. A functional account group allows you to categorize your customers based on some common element such as geography, product, or channel.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_functional_acct_group_id" : {
          "description" : "Client-defined functional account group ID to which to assign this account",
          "type" : "string"
        }
      }
    },
    "ModifyAcctPlanUnitInstancesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "modify_acct_plan_unit_instances_m" ],
          "default" : "modify_acct_plan_unit_instances_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "plan_inst_no" : {
          "description" : "The unique identifier of the new plan replacing the existing plan on the instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_inst_id" : {
          "description" : "The client-defined identifier of the new plan replacing the existing plan on the instance.",
          "type" : "string"
        },
        "remove_plan_units" : {
          "description" : "Array of plan units associated with the account",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RemovePlanUnit"
          }
        },
        "assignment_directive" : {
          "description" : "The rule to be applied to this assignment request, governing the proration rule is applied. Default behavior is to make the plan change (assign/deassign a plan to an account, change units on an existing plan, etc.) immediately based on client-defined default proration rule, resulting in appropriate prorated charge and credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "new_plan_units" : {
          "description" : "Number of additional units of the specified plan to be assigned to the account\n",
          "type" : "number"
        },
        "new_client_plan_unit_inst" : {
          "description" : "Array of Client-defined ID associated with the plan unit of the account\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NewClientPlanUnitInst"
          }
        },
        "proration_invoice_timing" : {
          "description" : "Determines whether to create a separate invoice for prorated charges immediately, or defer to the next anniversary date. Note that this will override the Proration Invoice Timing configuration saved with the plan in the product catalog.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "InvoiceNo" : {
      "type" : "object",
      "description" : "The Invoice numbers applied to this payment",
      "properties" : {
        "invoice_no" : {
          "description" : "Account holder makes a payment and the check can be applied to specific invoices.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetOrderItemsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_order_items_m" ],
          "default" : "get_order_items_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "order_no" : {
          "description" : "The unique identifier for an order in the context of an client_no and account_no.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "order_no" ]
    },
    "CreateWriteoffOrDisputeMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "create_writeoff_or_dispute_m" ],
          "default" : "create_writeoff_or_dispute_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "writeoff_date" : {
          "description" : "Date of writeoff/dispute",
          "type" : "string"
        },
        "reason_code" : {
          "description" : "Reason code to writeoff/dispute.",
          "type" : "integer",
          "format" : "int64"
        },
        "do_dispute" : {
          "description" : "Specifies whether to dispute or not.",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Comments to writeoff/dispute.",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "invoice_no", "reason_code", "comments" ]
    },
    "GetAcctPlansAllMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_plans_all_m" ],
          "default" : "get_acct_plans_all_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "include_service_supp_fields" : {
          "description" : "Indicates whether to include the service supplemental fields array. If set to \"true\", will retrieve all of service supplemental fields If left blank, will default to \"true\".\n",
          "type" : "string"
        },
        "limit" : {
          "description" : "Limits the number of records returned in the all_acct_plans_m array. Min of 1 and Max 999. If no value specified, the default is 100.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "offset" : {
          "description" : "The number of records to skip in the all_acct_plans_m array. Min of 0 and Max 998. If no value specified the default is 0.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "include_product_fields" : {
          "description" : "Indicates whether to include the product fields array. If set to \"true\", will return the product fields array. If left blank, will default to \"true\".\n",
          "type" : "string"
        },
        "include_plan_instance_fields" : {
          "description" : "Indicates whether to include the plans instance fields array.  If set to \"true\", will return array. If left blank, will default to \"true\".\n",
          "type" : "string"
        },
        "include_plan_services" : {
          "description" : "Indicates whether to include the plans services array.  If set to \"true\", will return array. If left blank, will default to \"true\".\n",
          "type" : "string"
        },
        "include_surcharges" : {
          "description" : "Indicates whether to include the surcharges array.  If set to \"true\", will return array. If left blank, will default to \"true\".\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "include_rate_schedule" : {
          "description" : "If the include_rate_schedule parameter is set to True or left null, then all of the rate schedule information for each plan will be returned. If set to False, this information will be excluded from the response.\n",
          "type" : "string"
        },
        "include_contract_and_rollover_info" : {
          "description" : "If the include_contract_and_rollover_info parameter is set to True or left null, then all of the contract and rollover information for each plan will be returned. If set to False, this information will be excluded from the response.\n",
          "type" : "string"
        },
        "include_dunning_info" : {
          "description" : "If the include_dunning_info parameter is set to True or left null, then all of the dunning information for each plan will be returned. If set to False, this information will be excluded from the response.\n",
          "type" : "string"
        },
        "product_catalog_plan_filter" : {
          "description" : "This array will support up to 10 individual inputs.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductCatalogPlanFilter"
          }
        },
        "service_no_filter" : {
          "description" : "This array will support up to 10 individual inputs.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceNoFilter"
          }
        },
        "master_plan_instance_filter" : {
          "description" : "This array will support up to 10 individual inputs.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlanInstanceFilter"
          }
        },
        "supplemental_field_filter" : {
          "description" : "This array will support up to 10 individual inputs.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SupplementalFieldFilter"
          }
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "MultipleCoupon" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "coupon_codes" : {
          "description" : "associate multiple coupons.",
          "type" : "string"
        }
      }
    },
    "RemoveAcctPaymentMethodMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "SetPaymentResponsibilityMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "set_payment_responsibility_m" ],
          "default" : "set_payment_responsibility_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the master plan instance on the child account for which payment responsibility is being set.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the master plan instance on the child account for which payment responsibility is being set.\n",
          "type" : "string"
        },
        "resp_level_cd" : {
          "description" : "The responsibility level code. These are values 1 through 3 as described in the legend for this argument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "senior_acct_no" : {
          "description" : "The account number of the account that contains the parent master plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "senior_acct_user_id" : {
          "description" : "The user ID of the account that contains the parent master plan.\n",
          "type" : "string"
        },
        "client_senior_acct_id" : {
          "description" : "The client account ID of the account that contains the parent master plan.\n",
          "type" : "string"
        },
        "senior_plan_instance_no" : {
          "description" : "The unique identifier of the master plan instance on the parent account. Required if responsibility level is set to one of the two parent pay options.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_senior_plan_instance_id" : {
          "description" : "The client-defined identifier of the master plan instance on the parent account. Required if responsibility level is set to one of the two parent pay options.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "account_no", "resp_level_cd" ]
    },
    "GetAcctPlanQueuedChangesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_plan_queued_changes_m" ],
          "default" : "get_acct_plan_queued_changes_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "queue_id" : {
          "description" : "Unique identifier associated with a specific queued plan change\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Client-defined plan Subscription plan instance ID.",
          "type" : "string"
        },
        "queued_action_status_cd" : {
          "description" : "Filters the list of queued plan changes returned based on the status code",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "ApplyServiceCreditMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "credit_id" : {
          "description" : "This identifier is returned upon successful application of credit and indicates the specific credit transaction executed against the account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "DeleteRegUssParamsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "delete_reg_uss_params_m" ],
          "default" : "delete_reg_uss_params_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "session_id" : {
          "description" : "Client-assigned identifier for the application session.",
          "type" : "string"
        },
        "param_names" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ParamName"
          }
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "session_id", "param_names" ]
    },
    "UpdatePaymentMethodMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_payment_method_m" ],
          "default" : "update_payment_method_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "The client-defined billing primary payment method ID.",
          "type" : "string"
        },
        "disabled_ind" : {
          "description" : "Determines whether or not the existing payment method on the account (specified by payment_method_no / client_payment_method_id) should be disabled. When set to 1, the payment method will be disabled. Note that once a payment method has been disabled, it cannot be re-enabled. When set to 0 (default), the payment method will remain enabled. This input takes precedence over all other parameters available for updating a payment (i.e., the existing payment method specified will not be disabled and no new payment methods will be created on the account).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact on this account to be used as the billing contact for the payment method. If bill_contact_no is included in the API request, all other billing contact parameters are ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_postal_cd" : {
          "description" : "Postal code for the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_ext" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_ext" : {
          "description" : "The work phone extension for the billing contact work phone.\n",
          "type" : "string"
        },
        "bill_fax" : {
          "description" : "Fax number of the billing contact.",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_birthdate" : {
          "description" : "Birthdate of the billing contact.\n",
          "type" : "string"
        },
        "pay_method_name" : {
          "description" : "The human-readable name of the payment method.",
          "type" : "string"
        },
        "pay_method_description" : {
          "description" : "Description for the primary payment method.'",
          "type" : "string"
        },
        "pay_method_type" : {
          "description" : "This is the method_id corresponding to a payment method such as credit card, Electronic Check, Pre-Paid, Net Terms, etc.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_num" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "4-digit expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder because this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "bank_acct_num" : {
          "description" : "The bank account number.\n",
          "type" : "string"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "do_collect" : {
          "description" : "If 'true', a collection is attempted after updating electronic billing information on accounts with outstanding balances.\n",
          "type" : "string"
        },
        "change_status_after_coll" : {
          "description" : "Indicates whether the account status is to change  after collection is completed.\n",
          "type" : "string"
        },
        "reset_dates_after_status" : {
          "description" : "If 'true', resets the billing dates after an account status change.\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "cc_id" : {
          "description" : "A numeric code indicating the type of credit card.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_auth_amount" : {
          "description" : "For non-tokenized credit cards, if an amount is provided for cc_auth_amount, a full authorization for the amount specified will be performed regardless of how the 'Perform Authorization Request on Credit Card Update' client parameter is configured. When cc_auth_amount is not provided, the 'Perform Authorization Request on Credit Card Update' client parameter will determine whether or not a $1 authorization will be attempted when saving a new credit card on an account. In the event authorization fails, the authorization will be reversed (for non-$0 authorizations) provided Aria's integration with the payment processor supports authorization reversals.\n",
          "type" : "number"
        },
        "disable_existing_on_update" : {
          "description" : "When updating an existing payment method on an account, determines whether or not the original payment method (specified by payment_method_no / client_payment_method_id) should be disabled. When set to 'true' (default), the payment method will be disabled. Note that once a payment method has been disabled, it cannot be re-enabled. When set to 'false', the original payment method will remain enabled on the account.\n",
          "type" : "string"
        },
        "fraud_filter" : {
          "description" : "Enable Fraud Filtering.  This is supported if your payment processor supports this feature and has been certified with Aria.  If no values are provided, the system will default to 2.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        },
        "include_auth_results" : {
          "description" : "When set to 1, the API will return any authorization attempt results in addition to the collection attempt results in the collection_info output array.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "end_user_session_id" : {
          "description" : "This is a value that can be populated to identify an end user's shopping session that is often used to determine if 3DSecure authorization is required. Please note that this field is ignored if the payment gateway / payment processor configuration in Aria does not support this feature.\n",
          "type" : "string"
        },
        "end_user_ip_address" : {
          "description" : "IP address that was used for placing an online order.\n",
          "type" : "string"
        },
        "end_user_browser_accept_header" : {
          "description" : "Browser Accept Header that was used for placing an online order.  Some examples might include 'text/html,application/xhtml+xml,application/xml ;q=0.9,&ast;/&ast;;q=0.8'.\n",
          "type" : "string"
        },
        "end_user_browser_agent" : {
          "description" : "Browser that was used for placing an online order.  Some examples might include \"Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0\".\n",
          "type" : "string"
        },
        "perform_card_type_detail_inquiry" : {
          "description" : "This feature will return marketing information if your payment processor supports it and configured in Aria.",
          "type" : "integer",
          "format" : "int64"
        },
        "perform_balance_inquiry" : {
          "description" : "When supported, this will provide a balance inquiry that reflects the current balance for prepaid cards and gift cards.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "PlansDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "Plan Name",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "Text description of this plan",
          "type" : "string"
        },
        "billing_ind" : {
          "description" : "Indicates whether or not this plan is billable\n",
          "type" : "integer",
          "format" : "int64"
        },
        "display_ind" : {
          "description" : "Indicates whether or not the plan is marked as \"displayable\". 0 means not displayable. 1 means displayable.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_months" : {
          "description" : "Number of months in which the account will change from the current plan to the pre-defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_no" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "early_cancel_fee" : {
          "description" : "Fee charged for early cancellations.",
          "type" : "number"
        },
        "early_cancel_min_months" : {
          "description" : "Number of months during which early cancellation fees would apply on plan cancellation.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "suspension_period" : {
          "description" : "Pre-defined period in days in which an account will degrade to Suspended status (-1) if action is not taken such as a plan or status change.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "new_acct_status" : {
          "description" : "The status code to assert for the new account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_acct_status" : {
          "description" : "Default status for new accounts created on this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_acct_status_days" : {
          "description" : "Number of days in which an account will change from the initial status code to the pre-defined rollover status code.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_months" : {
          "description" : "Initial free months.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_2_assign_on_susp" : {
          "description" : "Plan to assign when an account on this plan is suspended.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "default_notify_method" : {
          "description" : "Default notification method given to an account that is assigned to this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "prepaid_ind" : {
          "description" : "Indicates whether or not this plan is prepaid",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for which to query available child plans",
          "type" : "string"
        },
        "client_rollover_plan_id" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined client rollover plan ID.\n",
          "type" : "string"
        },
        "client_plan_id_2_assign_on_susp" : {
          "description" : "Client-defined Plan ID to assign when an account on this plan is suspended.\n",
          "type" : "string"
        },
        "proration_invoice_timing_cd" : {
          "description" : "Indicates whether to defer the pro-rated charges to the next anniversary date or to create a seperate invoice immediately.\n",
          "type" : "string"
        },
        "rollover_plan_duration" : {
          "description" : "Duration of the plan rollover period (used in conjunction with rollover_plan_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_uom_cd" : {
          "description" : "Units associated with the duration of the plan rollover period (used in conjunction with rollover_plan_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_duration" : {
          "description" : "Duration of the initial free period (used in conjunction with init_free_period_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_uom_cd" : {
          "description" : "Units associated with the duration of the initial free period (used in conjunction with init_free_period_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_plan_status_cd" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_duration" : {
          "description" : "Duration of the plan status rollover period, after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status (used in conjuction with rollover_plan_status_uom_cd).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_uom_cd" : {
          "description" : "Units associated with the duration of the plan status rollover period after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status. (used in conjunction with rollover_plan_status_duration).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_cd" : {
          "description" : "Status used for the master plan instance at the completion of the plan status rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_rate_schedules_details" : {
          "description" : "An array of the rate schedules for the requested plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanRateSchedulesDetail"
          }
        },
        "contract_rollover_plan_no" : {
          "description" : "Pre-defined plan to be used as the rollover plan at the completion of the contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_plan_id" : {
          "description" : "Client-defined ID of the pre-defined plan to be used as the rollover plan at the completion of a contract.\n",
          "type" : "string"
        },
        "contract_rollover_rate_sched" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractRolloverRateSched"
          }
        },
        "plan_translation_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanTranslationInfo"
          }
        }
      }
    },
    "GetInvoicesToWriteoffOrDisputeMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "invoice_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceDetail"
          }
        }
      }
    },
    "AcctPlanLineItem" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "service_no" : {
          "description" : "The unique ID for the service this line represents",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "Client-defined unique service identifier.\n",
          "type" : "string"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the account or plan instance.",
          "type" : "string"
        },
        "line_no" : {
          "description" : "The line number on the initial invoice",
          "type" : "integer",
          "format" : "int64"
        },
        "line_type" : {
          "description" : "Specifies the type of charge or credit associated with this line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name" : {
          "description" : "The name of the service this line represents",
          "type" : "string"
        },
        "line_units" : {
          "description" : "The number of units of the item or plan on this line",
          "type" : "number"
        },
        "rate_per_unit" : {
          "description" : "The charge per unit of the item or plan on this line",
          "type" : "number"
        },
        "line_amount" : {
          "description" : "Specifies the total charge associated with this line item.",
          "type" : "number"
        },
        "line_base_units" : {
          "description" : "Specifies the full, non-prorated number of units of the service code.",
          "type" : "number"
        },
        "proration_factor" : {
          "description" : "Specifies the percentage of the line_base_units billed.",
          "type" : "number"
        },
        "description" : {
          "description" : "The long description of this line, used when printing or otherwise displaying invoices",
          "type" : "string"
        },
        "date_range_start" : {
          "description" : "The starting date range for the item or plan on this line",
          "type" : "string"
        },
        "date_range_end" : {
          "description" : "If any, the ending date range for the item or plan on this line.",
          "type" : "string"
        },
        "credit_coupon_code" : {
          "description" : "Specifies the coupon code applied to the invoice.",
          "type" : "string"
        },
        "plan_no" : {
          "description" : "The unique ID plan this line represents",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The name of the plan this line represents",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "Client-defined unique Plan Identifier",
          "type" : "string"
        },
        "bill_from_address_no" : {
          "description" : "Address sent as the bill-from address to the tax engine for tax calculations. Depending on the taxation configuration, this parameter may return the Aria-assigned unique identifier of the service location for the invoice line item Note that service locations can be associated with a service for a given plan instance on an account, with an item (NSO) purchased as part of a one-time order, or with a service as defined in the product catalog.",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_from_address_no" : {
          "description" : "Address sent as the ship-from address to the tax engine for tax calculations. Depending on the taxation configuration, this parameter may return the Aria-assigned unique identifier of the service location for the invoice line item Note that service locations can be associated with a service for a given plan instance on an account, with an item (NSO) purchased as part of a one-time order, or with a service as defined in the product catalog.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_to_address_no" : {
          "description" : "Address sent as the bill-to address to the tax engine for tax calculations. This parameter will return the Aria-assigned unique identifier of the contact on the account used as the bill-to address for the invoice line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_to_address_no" : {
          "description" : "Address sent as the ship-to address to the tax engine for tax calculations. This parameter will return the Aria-assigned unique identifier of the contact on the account used as the ship-to address for the invoice line item.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "PreCalcSku" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "sku" : {
          "description" : "Client-defined SKU identifier",
          "type" : "string"
        },
        "sku_plan_no" : {
          "description" : "Plan number for the client SKU",
          "type" : "integer",
          "format" : "int64"
        },
        "sku_units" : {
          "description" : "Number of SKU units for this item.",
          "type" : "number"
        },
        "sku_unit_amount" : {
          "description" : "The per unit amount for this SKU item",
          "type" : "number"
        },
        "client_sku_plan_id" : {
          "description" : "Client-defined plan ID for the client SKU",
          "type" : "string"
        }
      }
    },
    "OutRegUssParam" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "param_name" : {
          "description" : "Client-assigned name of configuration parameter.\n",
          "type" : "string"
        },
        "param_val" : {
          "description" : "Client-assigned value of configuration parameters provided in the param_name string array.\n",
          "type" : "string"
        }
      }
    },
    "StatementMasterPlanInstance" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        }
      }
    },
    "PlanUnitInstServiceDetail" : {
      "type" : "object",
      "description" : "This return value of array of plan services that are fulfillment based.\\n",
      "properties" : {
        "service_no" : {
          "description" : "Aria-defined unique identier for the service associated with the returned plan unit instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "Client-defined service ID associated with the returned plan unit instance.",
          "type" : "string"
        },
        "service_name" : {
          "description" : "Name of the service associated with the returned plan unit instance.",
          "type" : "string"
        },
        "fulfillment_status" : {
          "description" : "Fulfillment status codes.\n",
          "type" : "string"
        },
        "fulfillment_date" : {
          "description" : "Date on which this service (or service unit) was/will be fulfilled. Only returned in case of fulfillment status code Queued OR fulfillment status Invoiced.\n",
          "type" : "string"
        }
      }
    },
    "GetRegUssParamsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "out_reg_uss_params" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OutRegUssParam"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "ExtendedTransactionQualifier" : {
      "type" : "object",
      "description" : "An  Array of optional transaction qualifiers for the given transaction ID.\\n",
      "properties" : {
        "qualifier_name" : {
          "description" : "Specifies the qualifier name.",
          "type" : "string"
        },
        "qualifier_value" : {
          "description" : "Specifies the qualifier value.",
          "type" : "string"
        }
      }
    },
    "GenRbMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_error_cd" : {
          "description" : "Collection error code.",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_error_msg" : {
          "description" : "Invoicing error message.",
          "type" : "string"
        },
        "statement_error_cd" : {
          "description" : "Statement error code.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_error_msg" : {
          "description" : "Statement error message.",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "Processor return code from CVV validation.",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation.",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "Process return code from security validation.",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "Processor status code.",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "Processor status description.",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "Processor payment ID.",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Processor authorization code.",
          "type" : "string"
        },
        "created_by" : {
          "description" : "User ID that created the rebill.",
          "type" : "string"
        },
        "created_date" : {
          "description" : "Date the rebill was created in the system.",
          "type" : "string"
        },
        "amount" : {
          "description" : "Amount of the rebill.",
          "type" : "number"
        },
        "reason_code" : {
          "description" : "Reason code for the rebill.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceItem"
          }
        },
        "tax_details" : {
          "description" : "Array of Tax details for this invoice.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TaxDetail"
          }
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned here. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        }
      }
    },
    "MpPlanInstField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_field_name" : {
          "description" : "Field name associated with each plan instance field on master plan instance.",
          "type" : "string"
        },
        "plan_instance_field_value" : {
          "description" : "Field value associated with each plan instance field on master plan instance.",
          "type" : "string"
        }
      }
    },
    "UsageHistoryRec" : {
      "type" : "object",
      "description" : "A multidimensional array of usage history records attached to the account (and optional specified usage type) for given date range\\n",
      "properties" : {
        "billable_acct_no" : {
          "description" : "Aria-assigned unique account identifier of the account who was billed the usage\n",
          "type" : "integer",
          "format" : "int64"
        },
        "incurring_acct_no" : {
          "description" : "Aria-assigned unique account identifier of the account that incurred the usage.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billable_acct_id" : {
          "description" : "This is the client-assigned identifier of the account who was billed the usage\n",
          "type" : "string"
        },
        "client_incurring_acct_id" : {
          "description" : "This is the client-assigned identifier of the account that incurred the usage.\n",
          "type" : "string"
        },
        "plan_instance_id" : {
          "description" : "The Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Client-defined plan Subscription plan instance ID.",
          "type" : "string"
        },
        "usage_type_no" : {
          "description" : "Aria-assigned unique identifier representing the type of usage that is being recorded.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type_description" : {
          "description" : "The name of this usage type used on all reports, account statements, etc., E.g. International Call Minutes\n",
          "type" : "string"
        },
        "usage_date" : {
          "description" : "The date on which the given usage was incurred.",
          "type" : "string"
        },
        "usage_time" : {
          "description" : "The time on which the given usage was incurred.\n",
          "type" : "string"
        },
        "units" : {
          "description" : "The number of units incurred by the account holder.\n",
          "type" : "number"
        },
        "units_description" : {
          "description" : "The name used for the unit type with which this usage type is metered, E.g. minutes\n",
          "type" : "string"
        },
        "usage_units_description" : {
          "description" : "The name used for the unit type with which this usage type is metered, E.g. minutes\n",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned ID corresponding to the invoice upon which this usage record was billed to the account holder.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "telco_to" : {
          "description" : "The unconstrained string identifying the \"sender\" of the message represented by this usage record. Intended for usage records that represent a telecom-based form of usage whereby the sender/originator and the recipient/terminator of the message/usage record are desired to be recorded as notational-only elements (e.g. a phone call whereby the \"from\" telephone number and the \"to\" telephone number are desired as notational elements).\n",
          "type" : "string"
        },
        "telco_from" : {
          "description" : "The unconstrained string identifying the \"recipient\" of the message represented by this usage record. Intended for usage records that represent a telecom-based form of usage whereby the sender/originator and the recipient/terminator of the message/usage record are desired to be recorded as notational-only elements (e.g. a phone call whereby the \"from\" telephone number and the \"to\" telephone number are desired as notational elements).\n",
          "type" : "string"
        },
        "specific_record_charge_amount" : {
          "description" : "If the usage record was supplied to Aria in a pre-rated form, i.e. with a specified currency value already associated with it, the value originally supplied. NOTE: Most usage records are subject to end-of-period aggregate value determination and will not have a value here.\n",
          "type" : "number"
        },
        "is_excluded" : {
          "description" : "Specifies whether or not the given usage record was entirely and permanently excluded from any billing (invoicing) process.\n",
          "type" : "string"
        },
        "exclusion_comments" : {
          "description" : "Comments entered to explain why the record was excluded from billing. Only recorded if is_excluded is true.\n",
          "type" : "string"
        },
        "comments" : {
          "description" : "Comments entered while recording usage\n",
          "type" : "string"
        },
        "pre_rated_rate" : {
          "description" : "Rate entered while recording usage",
          "type" : "number"
        },
        "qualifier_1" : {
          "description" : "The value of client-defined usage qualifier 1 for this usage record",
          "type" : "string"
        },
        "qualifier_2" : {
          "description" : "The value of client-defined usage qualifier 3 for this usage record",
          "type" : "string"
        },
        "qualifier_3" : {
          "description" : "The value of client-defined usage qualifier 3 for this usage record",
          "type" : "string"
        },
        "qualifier_4" : {
          "description" : "The value of client-defined usage qualifier 4 for this usage record",
          "type" : "string"
        },
        "recorded_units" : {
          "description" : "The number of units recorded by the account holder.",
          "type" : "number"
        },
        "usage_rec_no" : {
          "description" : "Aria-assigned usage record identifier.",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_parent_rec_no" : {
          "description" : "Aria-assigned usage parent record identifier.",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type_code" : {
          "description" : "The usage type code of this record",
          "type" : "string"
        },
        "client_record_id" : {
          "description" : "If available, the client-defined usage code for this usage record",
          "type" : "string"
        },
        "exclude_reason_cd" : {
          "description" : "The reason why this usage record has been excluded from billing",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ClearRegUssParamsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "clear_reg_uss_params_m" ],
          "default" : "clear_reg_uss_params_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "session_id" : {
          "description" : "Client-assigned identifier for the application session.",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "session_id" ]
    },
    "UnbilledUsageRec" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_id" : {
          "description" : "The Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type_no" : {
          "description" : "Aria-assigned unique identifier representing the type of usage that is being recorded.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type_description" : {
          "description" : "The name of this usage type used on all reports, account statements, etc., E.g. International Call Minutes\n",
          "type" : "string"
        },
        "usage_date" : {
          "description" : "The date on which the given usage was incurred.",
          "type" : "string"
        },
        "units" : {
          "description" : "The number of units incurred by the account holder.\n",
          "type" : "number"
        },
        "specific_record_charge_amount" : {
          "description" : "The rated monetary charge this record will be billed as",
          "type" : "number"
        },
        "pre_rated_rate" : {
          "description" : "Rate entered while recording usage",
          "type" : "number"
        },
        "recorded_units" : {
          "description" : "The number of units recorded by the account holder.",
          "type" : "number"
        },
        "usage_parent_rec_no" : {
          "description" : "Aria-assigned usage parent record identifier.",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type_code" : {
          "description" : "The usage type code of this record",
          "type" : "string"
        },
        "exclude_reason_cd" : {
          "description" : "The reason why this usage record has been excluded from billing",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_rec_no" : {
          "description" : "Aria-assigned usage record identifier.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetChildForItemClassMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "child_item_class" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChildItemClas"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "InvoiceItem" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "invoice_line_no" : {
          "description" : "The line number on the invoice.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_no" : {
          "description" : "Aria-assigned unique identifier of the plan associated with the invoice line item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client-defined identifier of the plan associated with the invoice line item.\n",
          "type" : "string"
        },
        "plan_instance_no" : {
          "description" : "Aria-assigned unique identifier of the plan instance associated with the invoice line item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Client-defined identifier of the plan instance associated with the invoice line item.\n",
          "type" : "string"
        },
        "plan_name" : {
          "description" : "Name of the plan associated with the invoice line item.\n",
          "type" : "string"
        },
        "service_no" : {
          "description" : "Aria-assigned unique identifier of the service associated with the invoice line item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "Client-defined identifier of the service associated with the invoice line item.\n",
          "type" : "string"
        },
        "service_name" : {
          "description" : "Name of the service associated with the invoice line item.\n",
          "type" : "string"
        },
        "service_coa_id" : {
          "description" : "Chart of Accounts identifier for the service associated with the invoice line item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_coa_code" : {
          "description" : "Client-defined identifier of the Chart of Accounts for the service associated with the invoice line item.\n",
          "type" : "string"
        },
        "units" : {
          "description" : "Number of units of the item or service on the invoice line item.\n",
          "type" : "number"
        },
        "rate_per_unit" : {
          "description" : "Charge per unit of the item or service on the invoice line item.\n",
          "type" : "number"
        },
        "line_amount" : {
          "description" : "Subtotal amount of the invoice line item.\n",
          "type" : "number"
        },
        "line_description" : {
          "description" : "Long description of the invoice line item, used when printing or otherwise displaying invoices.\n",
          "type" : "string"
        },
        "start_date_range" : {
          "description" : "The starting date for the item or service on the invoice line item.\n",
          "type" : "string"
        },
        "end_date_range" : {
          "description" : "The ending date for the item or service on the invoice line item.\n",
          "type" : "string"
        },
        "line_type" : {
          "description" : "Specifies the type of charge or credit associated with this line item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "base_plan_units" : {
          "description" : "Specifies the full, non-prorated number of units of the service code.\n",
          "type" : "number"
        },
        "proration_factor" : {
          "description" : "Specifies the percentage of the line_base_units billed.\n",
          "type" : "number"
        },
        "proration_text" : {
          "description" : "Specifies the prorated days in total days.\n",
          "type" : "string"
        },
        "proration_remaining_days" : {
          "description" : "Prorated days of period in this invoice.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "proration_description" : {
          "description" : "Prorated invoice description.\n",
          "type" : "string"
        },
        "credit_coupon_code" : {
          "description" : "Specifies the coupon code applied to the invoice.\n",
          "type" : "string"
        },
        "client_sku" : {
          "description" : "",
          "type" : "string"
        },
        "order_no" : {
          "description" : "The unique identifier for an order in the context of an client_no and account_no.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "item_no" : {
          "description" : "The unique ID of the item being retrieved.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_id" : {
          "description" : "The unique client-defined item ID being retrieved.\n",
          "type" : "string"
        },
        "adv_billing_period_total_days" : {
          "description" : "Total days of period in this invoice.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_schedule_no" : {
          "description" : "Aria-assigned unique rate schedule number.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_schedule_tier_no" : {
          "description" : "Sequential number in the rate schedule for determining tiers.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_from_address_no" : {
          "description" : "Address sent as the bill-from address to the tax engine for tax calculations. Depending on the taxation configuration, this parameter may return the Aria-assigned unique identifier of the service location for the invoice line item. Note that service locations can be associated with a service for a given plan instance on an account, with an item (NSO) purchased as part of a one-time order, or with a service as defined in the product catalog.",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_from_address_no" : {
          "description" : "Address sent as the ship-from address to the tax engine for tax calculations. Depending on the taxation configuration, this parameter may return the Aria-assigned unique identifier of the service location for the invoice line item. Note that service locations can be associated with a service for a given plan instance on an account, with an item (NSO) purchased as part of a one-time order, or with a service as defined in the product catalog.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_to_address_no" : {
          "description" : "Address sent as the bill-to address to the tax engine for tax calculations. This parameter will return the Aria-assigned unique identifier of the contact on the account used as the bill-to address for the invoice line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_to_address_no" : {
          "description" : "Address sent as the ship-to address to the tax engine for tax calculations. This parameter will return the Aria-assigned unique identifier of the contact on the account used as the ship-to address for the invoice line item.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetClientItemClassesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_client_item_classes_m" ],
          "default" : "get_client_item_classes_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "filter_item_no" : {
          "description" : "Aria-assigned unique identifier indicating Client Inventory Item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "filter_client_item_id" : {
          "description" : "Client assigned unique identifier indicating client Inventory Item.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "GetStatementForInvoiceMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "out_statement" : {
          "description" : "The returned account statement.",
          "type" : "string"
        },
        "mime_type" : {
          "description" : "MIME type for statement encoding.",
          "type" : "string"
        }
      }
    },
    "ReversibleAuthorization" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "auth_no" : {
          "description" : "Aria-assigned authorization identifier.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "proc_auth_id" : {
          "description" : "The authorization transaction identifier provided by the payment processor.\n",
          "type" : "string"
        },
        "authorization_date" : {
          "description" : "The date of the authorization.\n",
          "type" : "string"
        },
        "authorization_reversible_amount" : {
          "description" : "The amount of the authorization that can be reversed.\n",
          "type" : "number"
        }
      }
    },
    "RemoveAcctPlanCustomRatesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "remove_acct_plan_custom_rates_m" ],
          "default" : "remove_acct_plan_custom_rates_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The unique plan identifier of the plan instance (can be either a master or supplemental plan).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the plan instance (can be either a master or supplemental plan).\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "PreCalcInvoiceMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "inv_calc_out" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvCalcOut"
          }
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned here. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        }
      }
    },
    "GetAcctCreditsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "all_credits" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllCredit"
          }
        }
      }
    },
    "BanAcctMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "ban_acct_m" ],
          "default" : "ban_acct_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts. If userid is valued, this value must be blank.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "userid" : {
          "description" : "User's unique identifier. If account_no is valued, this value must be blank.",
          "type" : "string"
        },
        "days_to_restore" : {
          "description" : "Number of days before the account is restored. Use this or date_to_restore to specify length of ban. If date_to_restore is valued, this field is ignored. Use this field or date_to_restore to specify when the account will be restored.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "date_to_restore" : {
          "description" : "Date in yyyy-mm-dd format that the account will be restored. If this field is valued, days_to_restore is ignored. Use this field or days_to_restore to specify when the account will be restored.\n",
          "type" : "string"
        },
        "reason_cd" : {
          "description" : "Reason this account was banned",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "AllServiceSuppFieldsT" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "field_name" : {
          "description" : "The machine-readable name of this field",
          "type" : "string"
        },
        "field_desc" : {
          "description" : "The human-readable name of this field",
          "type" : "string"
        },
        "field_order_no" : {
          "description" : "The sort order of this field",
          "type" : "integer",
          "format" : "int64"
        },
        "field_value" : {
          "description" : "The value stored in this field",
          "type" : "string"
        }
      }
    },
    "EditQueuedChange" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "queue_id" : {
          "description" : "Unique identifier associated with a specific queued plan change",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the plan instance. If no queue_id is provided, then the modifications submitted for the specified plan instance will be applied to all existing queued plan changes for that plan instance. If no queue_id or plan instance is provided, then the modifications submitted for the specified account will be applied to all existing queued plan changes for all plan instances on that account.\n",
          "type" : "string"
        },
        "queue_edit_directive" : {
          "description" : "Determines what edit action to perform on an existing queued plan change.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "new_effective_date" : {
          "description" : "Modifies the effective date of a queued plan change. Valid only when queue_edit_directive = 2, otherwise this input will be ignored.\n",
          "type" : "string"
        },
        "assignment_directive" : {
          "description" : "The rule to be applied to this assignment request, governing the proration rule is applied. Default behavior is to make the plan change (assign/deassign a plan to an account, change units on an existing plan, etc.) immediately based on client-defined default proration rule, resulting in appropriate prorated charge and credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "offset_months" : {
          "description" : "Number of months to add to the prorated period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_proration_start_date" : {
          "description" : "Applicable only for master plan replacement, same as current for update_master_plan.\n",
          "type" : "string"
        },
        "auto_offset_months_option" : {
          "description" : "Applicable only for supplemental plan replacement, otherwise same as current.",
          "type" : "integer",
          "format" : "int64"
        },
        "offset_interval" : {
          "description" : "Applicable only for supplemental plan replacement, otherwise same as current. If assigning a change on an anniversary day, the number of billing periods by which to delay that change. If the new plan is different from the old plan, and this value is greater than 0, then the billing date continues to be the annniversary date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_unbilled_usage" : {
          "description" : "Specifies whether to invoice the unbilled usage if a plan is terminated in the middle of a billing period.\n",
          "type" : "string"
        },
        "force_master_bill_date_reset" : {
          "description" : "Overrides the \"Sync_mstr_bill_dates_on_1st_supp\" client-level setting that determines whether or not no-charge master plan billing dates should be reset when assigning a new supplemental plan or when the supplemental plan instance status is updated to a billable status. If this value is left empty, the client-level setting will take effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "force_bill_date_reset" : {
          "description" : "When a master plan's status changes from non-billable to billable, this input will determine what the billing dates of the specific master plan and all associated supplemental plans anniversary date will be.\n",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "queue_edit_directive" ]
    },
    "StatementContact" : {
      "type" : "object",
      "description" : "Array of statement contacts",
      "properties" : {
        "stat_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact.",
          "type" : "integer",
          "format" : "int64"
        },
        "stat_first_name" : {
          "description" : "First name of the statement contact",
          "type" : "string"
        },
        "stat_middle_initial" : {
          "description" : "Middle initial of the statement contact",
          "type" : "string"
        },
        "stat_last_name" : {
          "description" : "Last name of the statement contact",
          "type" : "string"
        },
        "stat_company_name" : {
          "description" : "Company name of the statement contact",
          "type" : "string"
        },
        "stat_address1" : {
          "description" : "First address line of the statement contact",
          "type" : "string"
        },
        "stat_address2" : {
          "description" : "Second address line of the statement contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "stat_address3" : {
          "description" : "Third address line of the statement contact",
          "type" : "string"
        },
        "stat_city" : {
          "description" : "City of the statement contact",
          "type" : "string"
        },
        "stat_locality" : {
          "description" : "Locality of the statement contact",
          "type" : "string"
        },
        "stat_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "stat_country" : {
          "description" : "Country of the statement contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "stat_postal_cd" : {
          "description" : "Postal code of the statement contact",
          "type" : "string"
        },
        "stat_phone" : {
          "description" : "Phone number of the statement contact",
          "type" : "string"
        },
        "stat_phone_ext" : {
          "description" : "Phone extension of the statement contact",
          "type" : "string"
        },
        "stat_cell_phone" : {
          "description" : "Cell phone number of the statement contact",
          "type" : "string"
        },
        "stat_work_phone" : {
          "description" : "Work phone number of the statement contact",
          "type" : "string"
        },
        "stat_work_phone_ext" : {
          "description" : "Work phone extension of the statement contact",
          "type" : "string"
        },
        "stat_fax" : {
          "description" : "Fax phone number of the statement contact",
          "type" : "string"
        },
        "stat_email" : {
          "description" : "Email of the statement contact",
          "type" : "string"
        },
        "stat_birthdate" : {
          "description" : "Date of birth of the statement contact",
          "type" : "string"
        },
        "stat_address_verification_code" : {
          "description" : "Verification code for the statement contact address",
          "type" : "string"
        },
        "stat_address_match_score" : {
          "description" : "Match score for the statement contact address",
          "type" : "number"
        },
        "stat_billing_group_no" : {
          "description" : "System-defined billing group number for the statement contact",
          "type" : "integer",
          "format" : "int64"
        },
        "stat_client_billing_group_id" : {
          "description" : "Client-defined billing group identifier for the statement contact",
          "type" : "string"
        }
      }
    },
    "GetAriaXmlStatementMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "xml_statement_content" : {
          "description" : "The xml statement content.",
          "type" : "string"
        }
      }
    },
    "ValidatePaymentInformationMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "validate_payment_information_m" ],
          "default" : "validate_payment_information_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "CVV" : {
          "description" : "The CVV code for the payment method given",
          "type" : "integer",
          "format" : "int64"
        },
        "seq_no" : {
          "description" : "The unique bill sequence number.",
          "type" : "integer",
          "format" : "int64"
        },
        "inTrackingNumber" : {
          "description" : "The XID used for 3DSecure if 3DSecure was used for this authorization",
          "type" : "string"
        },
        "inAuthValue" : {
          "description" : "The 3DSecure authorization value",
          "type" : "string"
        },
        "alt_pay_method" : {
          "description" : "If you want to use an existing form of payment, leave this field empty and enter the billing_group_no or sequence_no. If you want to use an alternate payment method, enter the appropriate value.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_number" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_zip" : {
          "description" : "Zip Code of the billing contact",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_extension" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_extension" : {
          "description" : "Work phone extenstion of the billing contact",
          "type" : "string"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method. By default, this is the default currency associated with the account, but can represent an alternate currency_cd.\n",
          "type" : "string"
        },
        "acct_group_no" : {
          "description" : "The collections account group for this account",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "alt_client_acct_group_id" : {
          "description" : "One-time collections account group  to use for this specific call.  Default collections group on the account is not changed.",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "client_acct_group_id" : {
          "description" : "The client-assigned group ID",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "Billing group number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined unique identifier for billing group",
          "type" : "string"
        },
        "fraud_filter" : {
          "description" : "Enable Fraud Filtering.  This is supported if your payment processor supports this feature and has been certified with Aria.  If no values are provided, the system will default to 2.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        },
        "perform_card_type_detail_inquiry" : {
          "description" : "This feature will return marketing information if your payment processor supports it and configured in Aria. This input will be ignored for Gift Card payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "perform_balance_inquiry" : {
          "description" : "When supported, this will provide a balance inquiry that reflects the current balance for prepaid cards and gift cards.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "account_no" ]
    },
    "CreateCmMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "cm_no" : {
          "description" : "The unique Aria-generated number for the credit memo.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_cm_seq_id" : {
          "description" : "Client-defined credit memo sequence ID.",
          "type" : "string"
        },
        "created_by" : {
          "description" : "User ID that created the credit memo.",
          "type" : "string"
        },
        "created_date" : {
          "description" : "Date the credit memo was created in the system.",
          "type" : "string"
        },
        "credit_ref_type_out" : {
          "description" : "Date the credit memo was created in the system.",
          "type" : "string"
        },
        "cm_total" : {
          "description" : "Amount of the credit memo.",
          "type" : "number"
        },
        "cm_reason_cd_out" : {
          "description" : "Reason code.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_comments_out" : {
          "description" : "Explanatory text for the credit memo.",
          "type" : "string"
        },
        "customer_facing_comments_out" : {
          "description" : "Customer facing text for the credit memo.",
          "type" : "string"
        },
        "cm_details" : {
          "description" : "Array of credit transaction details.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CmDetail"
          }
        },
        "cm_tax_details" : {
          "description" : "Array of tax details.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CmTaxDetail"
          }
        }
      }
    },
    "ReceiptAction" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "action_type_id" : {
          "description" : "Aria-assigned unique identifier for this action type.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "action_type_label" : {
          "description" : "Name of action type corresponding to the action type ID.\n",
          "type" : "string"
        },
        "action_type_desc" : {
          "description" : "Description of action type corresponding to the action type ID.\n",
          "type" : "string"
        },
        "action_rec_id_label" : {
          "description" : "Label of object the action invoked by the API was performed. E.g., Plan No.\n",
          "type" : "string"
        },
        "action_rec_id_val" : {
          "description" : "Identifier of the object that action was performed on corresponding to action_rec_id_label.\n",
          "type" : "string"
        },
        "action_date" : {
          "description" : "Date the action occurred",
          "type" : "string"
        },
        "action_user" : {
          "description" : "The user that invoked the action",
          "type" : "string"
        },
        "action_qualifier_1_label" : {
          "description" : "Label of related detail 1 corresponding to action_rec_id_label. E.g., Plan Units\n",
          "type" : "string"
        },
        "action_qualifier_1_val" : {
          "description" : "Value corresponding to action_qualifier_1_label",
          "type" : "string"
        },
        "action_qualifier_2_label" : {
          "description" : "Label of related detail 2 corresponding to action_rec_id_label.\n",
          "type" : "string"
        },
        "action_qualifier_2_val" : {
          "description" : "Value corresponding to action_qualifier_2_label",
          "type" : "string"
        },
        "action_qualifier_3_label" : {
          "description" : "Label of related detail 3 corresponding to action_rec_id_label.\n",
          "type" : "string"
        },
        "action_qualifier_3_val" : {
          "description" : "Value corresponding to action_qualifier_3_label",
          "type" : "string"
        },
        "action_qualifier_4_label" : {
          "description" : "Label of related detail 4 corresponding to action_rec_id_label.\n",
          "type" : "string"
        },
        "action_qualifier_4_val" : {
          "description" : "Value corresponding to action_qualifier_4_label",
          "type" : "string"
        }
      }
    },
    "PlanRateSchedulesDetail" : {
      "type" : "object",
      "description" : "An array of the rate schedules for the requested plan\\n",
      "properties" : {
        "schedule_no" : {
          "description" : "The ID of this rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "client_rate_schedule_id" : {
          "description" : "Client assigned unique rate schedule number",
          "type" : "string"
        },
        "schedule_name" : {
          "description" : "The name of this rate schedule",
          "type" : "string"
        },
        "schedule_currency" : {
          "description" : "The currency this rate schedule is linked to",
          "type" : "string"
        },
        "recurring_billing_interval" : {
          "description" : "Number of months between billing cycles for recurring",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_billing_interval" : {
          "description" : "Number of months between billing cycles for usage",
          "type" : "integer",
          "format" : "int64"
        },
        "default_ind" : {
          "description" : "If true, this is the default rate schedule for the default currency",
          "type" : "integer",
          "format" : "int64"
        },
        "default_ind_curr" : {
          "description" : "If true, this is the default rate schedule for the specified currency",
          "type" : "integer",
          "format" : "int64"
        },
        "schedule_display_ind" : {
          "description" : "Determines whether the rate schedule is displayable",
          "type" : "integer",
          "format" : "int64"
        },
        "available_from_dt" : {
          "description" : "Start date of rate schedule",
          "type" : "string"
        },
        "available_to_dt" : {
          "description" : "End date of rate schedule",
          "type" : "string"
        },
        "followup_rs_no" : {
          "description" : "Aria internal ID of follow-up default rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "client_followup_rs_id" : {
          "description" : "Client-defined ID of followup rate schedule",
          "type" : "string"
        }
      }
    },
    "GetStatementContentSizeMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "num_chars" : {
          "description" : "The size of the message as a count of characters.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "SetAcctTaxExemptStatusMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "set_acct_tax_exempt_status_m" ],
          "default" : "set_acct_tax_exempt_status_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "exemption_level" : {
          "description" : "Exemption level code",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "CreateAcctUniversalContractMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "create_acct_universal_contract_m" ],
          "default" : "create_acct_universal_contract_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_contract_id" : {
          "description" : "Client assigned unique contract identifier",
          "type" : "string"
        },
        "type_no" : {
          "description" : "Type of contract \"end action\" to be enforced by this contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "length_months" : {
          "description" : "Number of months from start_date, that the given contract will be in effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "create_comments" : {
          "description" : "Comments entered by CSR, or included in API input, when contract was created.\n",
          "type" : "string"
        },
        "start_date" : {
          "description" : "Contract start date in the format yyyy-mm-dd. Defaults to the current date if left blank.\n",
          "type" : "string"
        },
        "end_date" : {
          "description" : "End date of the contract in yyyy-mm-dd format.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "NewClientPlanUnitInst" : {
      "type" : "object",
      "description" : "Array of Client-defined ID associated with the plan unit of the account\\n",
      "properties" : {
        "new_client_plan_unit_inst_id" : {
          "description" : "Client-defined ID to be used for a given plan unit being assigned to the account.\n",
          "type" : "string"
        }
      }
    },
    "PlanServiceProrationResult" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for the plan.",
          "type" : "string"
        },
        "service_no" : {
          "description" : "Specifies the Aria-assigned unique service identifier. \n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "A client-defined Service ID for this service",
          "type" : "string"
        },
        "proration_result_total" : {
          "description" : "plan proration total amount.",
          "type" : "number"
        },
        "proration_amount" : {
          "description" : "Proration amount.",
          "type" : "number"
        },
        "proration_tax_charges" : {
          "description" : "Proration tax charges.",
          "type" : "number"
        },
        "proration_tax_credits" : {
          "description" : "Tax credits applied as a result of proration.",
          "type" : "number"
        },
        "proration_surcharge_amount" : {
          "description" : "Surcharge amount applied as a result of proration.",
          "type" : "number"
        },
        "proration_credit_amount" : {
          "description" : "The non-tax pro-rated credit amount",
          "type" : "number"
        },
        "proration_start_date" : {
          "description" : "Start date of the time period used for calculating proration.",
          "type" : "string"
        },
        "proration_end_date" : {
          "description" : "End date of the time period used for calculating proration.",
          "type" : "string"
        }
      }
    },
    "RefreshTokenFromPmtProcessorMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "refresh_token_from_pmt_processor_m" ],
          "default" : "refresh_token_from_pmt_processor_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "payment_method_no" : {
          "description" : "The Aria-assigned sequence number for this pay method. Must be a tokenized credit card.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "The client-defined identifier for the payment method. Must be a tokenized credit card.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "ClearRegUssConfigParamsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "clear_reg_uss_config_params_m" ],
          "default" : "clear_reg_uss_config_params_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "set_name" : {
          "description" : "Client-defined identifier for this set of global application configuration parameters.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "set_name" ]
    },
    "GetClientItemImagesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_client_item_images_m" ],
          "default" : "get_client_item_images_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "item_no" : {
          "description" : "The item number by which to search for images",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_id" : {
          "description" : "The client-defined item ID to search for images",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "GetAcctPlansAllMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "record_count" : {
          "description" : "Returns a total count of the number of records.",
          "type" : "integer",
          "format" : "int64"
        },
        "all_acct_plans_m" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllAcctPlansM"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "string"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "PlanInstanceFieldsDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "field_name" : {
          "description" : "Name of the plan instance field",
          "type" : "string"
        },
        "field_value" : {
          "description" : "Value associated with the plan instance field",
          "type" : "string"
        }
      }
    },
    "AcctPlanInstallCompleteMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetAcctPlanBalanceMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "current_balance_due" : {
          "description" : "The current balance due on the master plan instance.",
          "type" : "string"
        },
        "total_balance_due" : {
          "description" : "The total balance due on the master plan instance.",
          "type" : "string"
        }
      }
    },
    "AllAcctPlansM" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "Plan Name",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "Text description of this plan",
          "type" : "string"
        },
        "plan_instance_no" : {
          "description" : "Unique plan instance number for each assigned master plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined ID for each assigned master plan.",
          "type" : "string"
        },
        "plan_date" : {
          "description" : "Date on which the account was assigned to their current plan.\n",
          "type" : "string"
        },
        "plan_units" : {
          "description" : "Number of plan units the account is billed for.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "last_bill_date" : {
          "description" : "The date the account was last billed",
          "type" : "string"
        },
        "next_bill_date" : {
          "description" : "Date the account will be evaluated for invoicing, whether or not it results in any actual charges.\n",
          "type" : "string"
        },
        "bill_thru_date" : {
          "description" : "Date the accounts forward charges have been billed through.\n",
          "type" : "string"
        },
        "bill_day" : {
          "description" : "Day of the month that the account is billed.",
          "type" : "integer",
          "format" : "int64"
        },
        "recurring_billing_interval" : {
          "description" : "Number of months between billing cycles\n",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_billing_interval" : {
          "description" : "Number of months between billing cycles\n",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_ind" : {
          "description" : "Indicates whether or not this plan is billable\n",
          "type" : "integer",
          "format" : "int64"
        },
        "display_ind" : {
          "description" : "Indicates whether or not the plan is marked as \"displayable\". 0 means not displayable. 1 means displayable.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_months" : {
          "description" : "Number of months in which the account will change from the current plan to the pre-defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_no" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "early_cancel_fee" : {
          "description" : "Fee charged for early cancellations.",
          "type" : "number"
        },
        "early_cancel_min_months" : {
          "description" : "Number of months during which early cancellation fees would apply on master plan cancellation. Not applicable to supplemental plans.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "suspension_period" : {
          "description" : "Pre-defined period in days in which an account will degrade to Suspended status (-1) if action is not taken such as a plan or status change.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_plan_status" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status" : {
          "description" : "Status used for the master plan instance at the completion of the rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_duration" : {
          "description" : "Duration of the plan status rollover period, after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status (used in conjuction with rollover_plan_status_uom_cd).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_uom_cd" : {
          "description" : "Units associated with the duration of the plan status rollover period after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status. (used in conjunction with rollover_plan_status_duration).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_duration" : {
          "description" : "Duration of the initial free period (used in conjunction with init_free_period_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_uom_cd" : {
          "description" : "Units associated with the duration of the initial free period (used in conjunction with init_free_period_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_duration" : {
          "description" : "Duration of the plan rollover period (used in conjunction with rollover_plan_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_uom_cd" : {
          "description" : "Units associated with the duration of the plan rollover period (used in conjunction with rollover_plan_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_plan_status_cd" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_cd" : {
          "description" : "Status used for the master plan instance at the completion of the plan status rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_group_no" : {
          "description" : "The billing group number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined billing group ID.",
          "type" : "string"
        },
        "dunning_group_no" : {
          "description" : "Dunning group number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_dunning_group_id" : {
          "description" : "Client-defined unique identifier for dunning group",
          "type" : "string"
        },
        "plan_2_assign_on_susp" : {
          "description" : "Plan to assign when an account on this plan is suspended.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "default_notify_method" : {
          "description" : "Default notification method given to an account that is assigned to this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "prepaid_ind" : {
          "description" : "Indicates whether or not this plan is prepaid\n",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "rate_schedule_no" : {
          "description" : "Aria-assigned unique rate schedule number",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_schedule_name" : {
          "description" : "Name of the rate schedule",
          "type" : "string"
        },
        "rate_sched_is_default_ind" : {
          "description" : "Indicates whether or not the account is using the plans default rate schedule. 0 means the account is using an alternate rate schedule. 1 means the account is using the default rate schedule.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "supp_plan_ind" : {
          "description" : "Indicates whether or not the plan is a supplemental plan. If it is \"1\", then the plan is a supplemental plan and if it is \"0\", then the plan is a master plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_status_cd" : {
          "description" : "Current status code of the plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_status_label" : {
          "description" : "Current status of the plan instance.\n",
          "type" : "string"
        },
        "plan_instance_status_date" : {
          "description" : "Most recent date on which the status of the plan instance changed.",
          "type" : "string"
        },
        "dunning_state" : {
          "description" : "Dunning state assigned to the master plan instance. In Progress indicates the master plan is in dunning. None indicates the master plan is not in dunning. Note that dunning state is applicable only for master plans and is set to Complete by the system once the dunning process is completed.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_step" : {
          "description" : "Current dunning step of the plan instance (applicable only for master plans currently in dunning).",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_degrade_date" : {
          "description" : "Next future date on which the plan instance would advance to the next dunning step (applicable only for master plans currently in dunning).",
          "type" : "string"
        },
        "plan_assignment_date" : {
          "description" : "The date on which the current plan was assigned on this plan instance.",
          "type" : "string"
        },
        "plan_deprovisioned_date" : {
          "description" : "The date on which the current plan on this plan instance was suspended, cancelled or terminated.",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "The API receipt ID used while creating this plan instance.\n",
          "type" : "string",
          "maxLength" : 50
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for which to query available child plans",
          "type" : "string"
        },
        "client_rollover_plan_id" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined client rollover plan ID.\n",
          "type" : "string"
        },
        "client_plan_2_assign_on_susp" : {
          "description" : "CDID of the plan to be assigned when an account on this plan is suspended.\n",
          "type" : "string"
        },
        "client_rate_schedule_id" : {
          "description" : "Client assigned unique rate schedule number",
          "type" : "string"
        },
        "proration_invoice_timing_cd" : {
          "description" : "Indicates whether to defer the pro-rated charges to the next anniversary date or to create a seperate invoice immediately.\n",
          "type" : "string"
        },
        "product_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductField"
          }
        },
        "plan_instance_fields_detail" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanInstanceFieldsDetail"
          }
        },
        "master_plan_instance_no" : {
          "description" : "Master plan instance number for each supplemental plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client master plan instance ID for each supplemental plan.",
          "type" : "string"
        },
        "parent_plan_instance_no" : {
          "description" : "Parent plan instance number to identify each supplemental plan and child supplemental plan heirarchy.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_parent_plan_instance_id" : {
          "description" : "Client parent plan instance ID to identify each supplemental plan and child supplemental plan heirarchy.",
          "type" : "string"
        },
        "plan_instance_services" : {
          "description" : "A multidimensional array of Services for this plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanInstanceService"
          }
        },
        "surcharges_all" : {
          "description" : "A multidimensional array of Surcharges for this plan'\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SurchargesAll"
          }
        },
        "contract_rollover_plan_no" : {
          "description" : "Pre-defined plan to be used as the rollover plan at the completion of the contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_plan_id" : {
          "description" : "Client-defined ID of the pre-defined plan to be used as the rollover plan at the completion of a contract.\n",
          "type" : "string"
        },
        "contract_rollover_rate_sched_no" : {
          "description" : "Pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_rate_sched_id" : {
          "description" : "Client-defined ID of the pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract",
          "type" : "string"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the plan instance.",
          "type" : "string"
        },
        "available_from_dt" : {
          "description" : "Start date of assigned rate schedule",
          "type" : "string"
        },
        "available_to_dt" : {
          "description" : "End date of assigned rate schedule",
          "type" : "string"
        },
        "followup_rs_no" : {
          "description" : "Aria internal ID of follow-up default rate schedule for the assigned rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "client_followup_rs_id" : {
          "description" : "Client-defined ID of followup rate schedule for the assigned rate schedule",
          "type" : "string"
        }
      }
    },
    "UnsubscribeEventsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "unsubscribe_events_m" ],
          "default" : "unsubscribe_events_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "event_list" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EventList"
          }
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "event_list" ]
    },
    "GetCmDetailsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_cm_details_m" ],
          "default" : "get_cm_details_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "cm_no" : {
          "description" : "The Aria-generated credit memo number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_cm_seq_id_in" : {
          "description" : "Client-defined credit memo sequence ID.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "PlanUnitInstFieldDetail" : {
      "type" : "object",
      "description" : "Array of client-defined plan unit instance fields.\\n",
      "properties" : {
        "plan_unit_inst_no" : {
          "description" : "Aria-assigned identifier for the plan unit instance to specify an existing plan unit instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_unit_inst_id" : {
          "description" : "Client-defined identifier for the plan unit instance to specify an existing plan unit instance.\n",
          "type" : "string"
        },
        "plan_unit_inst_idx" : {
          "description" : "Non-persistent reference for a plan unit instance (being created within the API request) to cross-reference for plan unit instance fields.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_unit_inst_field_list" : {
          "description" : "Array of client-defined plan unit instance fields.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstFieldList"
          }
        }
      }
    },
    "CalcCreditReferenceLineMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "plan_instance_no_out" : {
          "description" : "Unique plan instance number for each assigned supplemental plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no_out" : {
          "description" : "Service number.\t\t  \n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id_out" : {
          "description" : "Client defined service id.\n",
          "type" : "string"
        },
        "credit_reference_amount" : {
          "description" : "Total credit reference amount. \t\t\t\n",
          "type" : "number"
        },
        "charge_reference_amount" : {
          "description" : "Total charge reference amount. \t\t\t\n",
          "type" : "number"
        },
        "amount" : {
          "description" : "Total amount: credit_reference_amount - charge_reference_amount. \t\t\t\n",
          "type" : "number"
        },
        "invoice_reference_details" : {
          "description" : "Array of invoice reference details.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceReferenceDetail"
          }
        }
      },
      "required" : [ "plan_instance_no_out", "service_no_out", "client_service_id_out", "credit_reference_amount", "charge_reference_amount", "amount", "invoice_reference_details" ]
    },
    "ParamName" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "param_name" : {
          "description" : "The name of the parameters to delete",
          "type" : "string"
        }
      },
      "required" : [ "param_name" ]
    },
    "StatementsHistory" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "statement_no" : {
          "description" : "The unique statement number.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "create_date" : {
          "description" : "The date the account record was created.",
          "type" : "string"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "due_date" : {
          "description" : "The date monies are due.",
          "type" : "string"
        },
        "due_date_plus_grace_period" : {
          "description" : "The date monies are due calculated to include any grace period.",
          "type" : "string"
        },
        "new_charges_amount" : {
          "description" : "The monetary amount of new charges detailed in the statement.",
          "type" : "number"
        },
        "new_payments_amount" : {
          "description" : "The monetary amount of any new payments applied in this statement",
          "type" : "number"
        },
        "balance_forward_amount" : {
          "description" : "The monetary amount to apply as balance forward.",
          "type" : "number"
        },
        "total_amount" : {
          "description" : "Total amount of the statement.",
          "type" : "number"
        },
        "is_paid_ind" : {
          "description" : "A boolean value indicating if the statement has been paid.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_activity_ind" : {
          "description" : "Indicates whether statement can be sent or not.",
          "type" : "integer",
          "format" : "int64"
        },
        "seq_statement_id" : {
          "description" : "The unique sequential statement number",
          "type" : "string"
        },
        "statement_master_plan_instances" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StatementMasterPlanInstance"
          }
        }
      }
    },
    "InstanceUsageUnitThreshold" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_no" : {
          "description" : "Aria generated unique identifier for the plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the plan instance.",
          "type" : "string"
        },
        "usage_services" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageService"
          }
        }
      }
    },
    "SetUsgThresholdMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "set_usg_threshold_m" ],
          "default" : "set_usg_threshold_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "mpi_usage_amount_thresholds" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MpiUsageAmountThreshold"
          }
        },
        "instance_usage_unit_thresholds" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InstanceUsageUnitThreshold"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "RemoveAcctFromGroupMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetCmListMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "cm_details_all" : {
          "description" : "Array of returned credit memo numbers and relevand details for each credit memo",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CmDetailsAll"
          }
        }
      }
    },
    "GetPaymentApplicationDtlsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_payment_application_dtls_m" ],
          "default" : "get_payment_application_dtls_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_id" : {
          "description" : "Payment transaction ID for which the application details are to be retrieved.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "transaction_id" ]
    },
    "PreCalcInvoiceMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "pre_calc_invoice_m" ],
          "default" : "pre_calc_invoice_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "log_id" : {
          "description" : "When using a client's custom tax server, this value will identify the Aria log entry for the tax server request.\n",
          "type" : "string"
        },
        "first_name" : {
          "description" : "Contact first name",
          "type" : "string"
        },
        "mi" : {
          "description" : "The Middle Initial of the contact.",
          "type" : "string"
        },
        "last_name" : {
          "description" : "Contact last name",
          "type" : "string"
        },
        "address1" : {
          "description" : "First address line of the contact.",
          "type" : "string"
        },
        "address2" : {
          "description" : "Second address line of the contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "city" : {
          "description" : "City of the contact",
          "type" : "string"
        },
        "state_prov_code" : {
          "description" : "State or Province of the  contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "zip_code" : {
          "description" : "Postal/Zip code for the contact address.",
          "type" : "string"
        },
        "country_code" : {
          "description" : "Country of the contact",
          "type" : "string"
        },
        "currency_code" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "pre_calc_plan" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PreCalcPlan"
          }
        },
        "pre_calc_sku" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PreCalcSku"
          }
        },
        "tax_exempt_cd" : {
          "description" : "Tax exemption status (this is not part of the above arrays). For Aria taxes, 0=not exempt, 1=exempt from state taxes, 2=exempt from country taxes, 3=exempt from state and country taxes. Values may be different for client's custom tax servers.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "address3" : {
          "description" : "The third line of the address",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetRecurringCreditInfoMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_recurring_credit_info_m" ],
          "default" : "get_recurring_credit_info_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "filter_credit_no" : {
          "description" : "The recurring credit number to use in order to filter results.",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "AuthorizeElectronicPaymentMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "authorize_electronic_payment_m" ],
          "default" : "authorize_electronic_payment_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "amount" : {
          "description" : "The monetary amount of the electronic payment.",
          "type" : "number"
        },
        "CVV" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "bill_seq" : {
          "description" : "The unique identifier of the bill sequence number.",
          "type" : "integer",
          "format" : "int64"
        },
        "inTrackingNumber" : {
          "description" : "The XID used for 3DSecure if 3DSecure was used for this authorization",
          "type" : "string"
        },
        "inAuthValue" : {
          "description" : "The 3DSecure authorization value",
          "type" : "string"
        },
        "alt_client_acct_group_id" : {
          "description" : "One-time collections account group  to use for this specific call.  Default collections group on the account is not changed.",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "alt_pay_method" : {
          "description" : "If you want to use the account's current form of payment, leave this field empty. If you want to use an alternate credit card, enter '1' in this field.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_number" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "bank_acct_num" : {
          "description" : "The bank account number.\n",
          "type" : "string"
        },
        "bank_acct_type" : {
          "description" : "The type of bank account being used.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_zip" : {
          "description" : "Zip Code of the billing contact",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_extension" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_extension" : {
          "description" : "Work phone extenstion of the billing contact",
          "type" : "string"
        },
        "record_cc_on_auth_failure" : {
          "description" : "If passed, and 'false', and the authorization fails, the card is added to the account with disabled_ind to 1 to indicate the card is disabled.  If an authorization requires 3DSecure, this will automatically disable the credit card until a successful authorization is achieved using authorize_3dsecure_m.\n",
          "type" : "string"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the master plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the master plan instance.",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "The unique identifier of the billing group.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "The client-defined identifier of the billing group.",
          "type" : "string"
        },
        "soft_descriptor" : {
          "description" : "Transaction description shown on the buyer's statement that displays a Merchant Name or Item Description typically. This field will be ignored if not supported/certified by the payment processor.\n",
          "type" : "string"
        },
        "soft_descriptor_customer_service" : {
          "description" : "Transaction description shown on the buyer's statement that displays a City for Card Present transactions or a Phone Number for Card Not Present transactions. This field will be ignored if not supported/certified by the payment processor.\n",
          "type" : "string"
        },
        "fraud_filter" : {
          "description" : "Enable Fraud Filtering.  This is supported if your payment processor supports this feature and has been certified with Aria.  If no values are provided, the system will default to 2.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        },
        "end_user_session_id" : {
          "description" : "This is a value that can be populated to identify an end user's shopping session that is often used to determine if 3DSecure authorization is required. Please note that this field is ignored if the payment gateway / payment processor configuration in Aria does not support this feature.\n",
          "type" : "string"
        },
        "end_user_ip_address" : {
          "description" : "IP address that was used for placing an online order.\n",
          "type" : "string"
        },
        "end_user_browser_accept_header" : {
          "description" : "Browser Accept Header that was used for placing an online order.  Some examples might include 'text/html,application/xhtmlxml,application/xml ;q=0.9,&ast;/&ast;;q=0.8'.\n",
          "type" : "string"
        },
        "end_user_browser_agent" : {
          "description" : "Browser that was used for placing an online order. Some examples might include \"Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0\".\n",
          "type" : "string"
        },
        "perform_card_type_detail_inquiry" : {
          "description" : "This feature will return marketing information if your payment processor supports it and configured in Aria.",
          "type" : "integer",
          "format" : "int64"
        },
        "perform_balance_inquiry" : {
          "description" : "When supported, this will provide a balance inquiry that reflects the current balance for prepaid cards and gift cards.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no", "amount" ]
    },
    "GetInvoicesToWriteoffOrDisputeMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_invoices_to_writeoff_or_dispute_m" ],
          "default" : "get_invoices_to_writeoff_or_dispute_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The responsibility level code. These are values 1 through 3 as described in the legend for this argument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "The client-defined identifier of the master plan instance on the child account for which payment responsibility is being set.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "CreateAcctBillingGroupMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "create_acct_billing_group_m" ],
          "default" : "create_acct_billing_group_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_group_name" : {
          "description" : "Billing Group name",
          "type" : "string"
        },
        "billing_group_description" : {
          "description" : "Billing group description",
          "type" : "string"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined unique identifier for billing group",
          "type" : "string"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_template_group" : {
          "description" : "Notification Template Group ID.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_template" : {
          "description" : "Statement template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_note_template" : {
          "description" : "Credit note template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_option" : {
          "description" : "This allows you to select either payment methods (such as a credit card or other electronic form of payment) or payment terms (such as a physical check) when creating or modifying a billing group'\n",
          "type" : "string"
        },
        "primary_payment_method_no" : {
          "description" : "Primary payment method ID",
          "type" : "integer",
          "format" : "int64"
        },
        "client_primary_payment_method_id" : {
          "description" : "Client-defined unique identifier of the primary payment method",
          "type" : "string"
        },
        "backup_payment_method_no" : {
          "description" : "Backup payment method ID.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_backup_payment_method_id" : {
          "description" : "Client-defined unique identifier of the backup payment method",
          "type" : "string"
        },
        "stmt_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the statement contact associated with a billing group on the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "stmt_first_name" : {
          "description" : "Statement contact first name",
          "type" : "string"
        },
        "stmt_mi" : {
          "description" : "The Middle Initial of the statement contact.",
          "type" : "string"
        },
        "stmt_last_name" : {
          "description" : "Statement contact Last name",
          "type" : "string"
        },
        "stmt_company_name" : {
          "description" : "Company name of the statement contact",
          "type" : "string"
        },
        "stmt_address1" : {
          "description" : "First address line of the statement contact",
          "type" : "string"
        },
        "stmt_address2" : {
          "description" : "Second address line of the statement contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "stmt_address3" : {
          "description" : "Third address line of the statement contact",
          "type" : "string"
        },
        "stmt_city" : {
          "description" : "City of the statement contact",
          "type" : "string"
        },
        "stmt_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "stmt_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "stmt_country" : {
          "description" : "Country of the contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "stmt_postal_cd" : {
          "description" : "Postal/Zip code for the statement contact address.",
          "type" : "string"
        },
        "stmt_phone" : {
          "description" : "The phone number of the statement contact",
          "type" : "string"
        },
        "stmt_phone_ext" : {
          "description" : "The extension for the statement contact phone",
          "type" : "string"
        },
        "stmt_cell_phone" : {
          "description" : "The contact cell phone of the statement contact.",
          "type" : "string"
        },
        "stmt_work_phone" : {
          "description" : "Work phone number of the statement contact.",
          "type" : "string"
        },
        "stmt_work_phone_ext" : {
          "description" : "The extension for the statement contact work phone",
          "type" : "string"
        },
        "stmt_fax" : {
          "description" : "The fax number for the statement contact.",
          "type" : "string"
        },
        "stmt_email" : {
          "description" : "Email of the statement contact",
          "type" : "string"
        },
        "stmt_birthdate" : {
          "description" : "The birthdate, in yyyy-mm-dd format, of the statement contact.",
          "type" : "string"
        },
        "bill_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact on this account to be used as the billing contact for the payment method. If bill_contact_no is included in the API request, all other billing contact parameters are ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_postal_cd" : {
          "description" : "Postal code for the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_ext" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_ext" : {
          "description" : "This is the work phone extension for the billing contact work phone.\n",
          "type" : "string"
        },
        "bill_fax" : {
          "description" : "Fax number of the billing contact.",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_birthdate" : {
          "description" : "Birthdate of the billing contact.\n",
          "type" : "string"
        },
        "pay_method_name" : {
          "description" : "Payment method name.",
          "type" : "string"
        },
        "client_payment_method_id" : {
          "description" : "Client-defined unique identifier for the payment method.",
          "type" : "string"
        },
        "pay_method_description" : {
          "description" : "Payment method description",
          "type" : "string"
        },
        "pay_method_type" : {
          "description" : "This is the method_id corresponding to a payment method such as credit card, Electronic Check, Pre-Paid, etc.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_num" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_acct_num" : {
          "description" : "The bank account number.\n",
          "type" : "string"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "master_plans_summary" : {
          "description" : "List of master plan instances to be associated with the billing group.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlansSummary"
          }
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "list_start_master_file" : {
          "description" : "Indicates whether the account is listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_id" : {
          "description" : "A numeric code indicating the type of credit card.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_terms_no" : {
          "description" : "Payment terms number assigned to the account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_terms_name" : {
          "description" : "Payment terms name assigned to the account.\n",
          "type" : "string"
        },
        "client_payment_term_id" : {
          "description" : "Client-defined identifier for the billing group's payment term\n",
          "type" : "string"
        },
        "ean_gln_num" : {
          "description" : "'This is the European Article Number or Global Location Number that is a required field if a payment option is terms AND client payment term ID matches a term in which the payment term type equals EAN/GLN. This number should be provided by Aria's clients' customers and is unique to each customer (account).'\n",
          "type" : "string"
        },
        "ean_gln_requisition_num" : {
          "description" : "'This is the European Article Number requisition number or Global Location Number requisition number that is a required field if a payment option is terms AND client payment term ID matches a term in which the payment term type equals EAN/GLN. This number should be provided by Aria's client's customers and is used to track their individual projects similarly to a purchase order. This number is generated by the individual customer (account) and is not provided by any other party'\n",
          "type" : "string"
        },
        "credit_memo_template" : {
          "description" : "Credit template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "rebill_template" : {
          "description" : "Rebill template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_filter" : {
          "description" : "Enable Fraud Filtering.  This is supported if your payment processor supports this feature and has been certified with Aria.  If no values are provided, the system will default to 2.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetAcctStatementHistoryMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "statements_history" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StatementsHistory"
          }
        }
      }
    },
    "GetAcctsWithExistingPayMethodMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_accts_with_existing_pay_method_m" ],
          "default" : "get_accts_with_existing_pay_method_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "pay_method" : {
          "description" : "Determines if this is a credit card or bank account being searched against",
          "type" : "integer",
          "format" : "int64"
        },
        "form_payment_acct_id" : {
          "description" : "The account ID (credit card number or bank account number) of the payment method being searched for",
          "type" : "string"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "pay_method", "form_payment_acct_id" ]
    },
    "GetAcctServiceOutageCreditMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_outage_line_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceOutageLineItem"
          }
        },
        "total_outage_credit" : {
          "description" : "Sum total of the credit amounts of all the effected service plans",
          "type" : "number"
        },
        "adjusted_outage_credit" : {
          "description" : "Total outage credit adjusted based on the adjustment percentage provided in the input adjust_percent\n",
          "type" : "number"
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "WebValsOut" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "out_replacement_names" : {
          "description" : "The name of the replacement string",
          "type" : "string"
        },
        "out_replacement_values" : {
          "description" : "The value with which to replace the replacement name",
          "type" : "string"
        }
      }
    },
    "GetRegUssConfigParamsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_reg_uss_config_params_m" ],
          "default" : "get_reg_uss_config_params_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "set_name" : {
          "description" : "Client-defined identifier for this set of global application configuration parameters.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "set_name" ]
    },
    "ReplaceRegUssParamsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "replace_reg_uss_params_m" ],
          "default" : "replace_reg_uss_params_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "session_id" : {
          "description" : "Client-assigned identifier for the application session.",
          "type" : "string"
        },
        "in_reg_uss_params" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InRegUssParam"
          }
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "session_id", "in_reg_uss_params" ]
    },
    "GetAcctMessageSizeMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_message_size_m" ],
          "default" : "get_acct_message_size_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "message_id" : {
          "description" : "Unique identifier of the message sent during provisioning to the account\n",
          "type" : "integer",
          "format" : "int64"
        },
        "do_encoding" : {
          "description" : "True indicates to acquire the message size after doing MIME encoding, False acquires message size without MIME encoding.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no", "message_id" ]
    },
    "PlanInstanceFieldUpdate" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_field_name" : {
          "description" : "Required based on the definition of each plan instance field associated with the new plan.",
          "type" : "string"
        },
        "plan_instance_field_value" : {
          "description" : "Required based on the definition of each plan instance field associated with the new plan.",
          "type" : "string"
        },
        "plan_instance_field_directive" : {
          "description" : "Required for each plan instance field provided.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetChildAcctsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "child_accts" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChildAcct"
          }
        }
      }
    },
    "ManagePendingInvoiceMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "new_invoice_no" : {
          "description" : "The new invoice number generated.",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "billing_group_no" : {
          "description" : "Billing group number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined unique identifier for billing group",
          "type" : "string"
        },
        "collection_error_code" : {
          "description" : "If a collection is attempted, returns the error code associated with the collection.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_error_msg" : {
          "description" : "The error message associated with collection_error_code.\n",
          "type" : "string"
        },
        "statement_error_code" : {
          "description" : "Error code for statement generation failure.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_error_msg" : {
          "description" : "The text message associated with 'statement_error_code'",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor",
          "type" : "string"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "collection_errors" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CollectionError"
          }
        }
      }
    },
    "AppliedTransaction" : {
      "type" : "object",
      "description" : "Array of specific invoice transactions that the payment was applied to.",
      "properties" : {
        "transaction_id" : {
          "description" : "Id of the specific invoice transaction to allocate the payment",
          "type" : "integer",
          "format" : "int64"
        },
        "original_amount" : {
          "description" : "Charge amount of the original transaction",
          "type" : "number"
        },
        "amount_applied" : {
          "description" : "Amount of the payment to be allocated to the transaction",
          "type" : "number"
        },
        "date_applied" : {
          "description" : "Payment application date.",
          "type" : "string"
        }
      }
    },
    "ContractPlanInstanceDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The client-assigned name for this plan instance.",
          "type" : "string"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined identifier for the plan instance.",
          "type" : "string"
        },
        "plan_instance_status_cd" : {
          "description" : "The status code of the plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_status_label" : {
          "description" : "The status of the plan instance",
          "type" : "string"
        },
        "rollover_plan_no" : {
          "description" : "Note that if the target rollover plan has a surcharge that has already been associated with this account, when the plan rollover occurs at the completion of this contract, the surcharge for this plan may be ignored (depending on the client parameter determining whether duplicate surcharges are permitted). The surcharge at the account level will remain in effect.",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_client_plan_id" : {
          "description" : "Note that if the target rollover plan has a surcharge that has already been associated with this account, when the plan rollover occurs at the completion of this contract, the surcharge for this plan may be ignored (depending on the client parameter determining whether duplicate surcharges are permitted). The surcharge at the account level will remain in effect.",
          "type" : "string"
        },
        "rollover_rate_sched_no" : {
          "description" : "Pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_client_rate_sched_id" : {
          "description" : "Client-defined ID of the pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract",
          "type" : "string"
        },
        "contract_rollover_custom_rate_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractRolloverCustomRateInfo"
          }
        }
      }
    },
    "GetClientPlanServicesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_client_plan_services_m" ],
          "default" : "get_client_plan_services_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "plan_no" : {
          "description" : "The unique plan identifier.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for which to query available child plans",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "PlanNsoGroup" : {
      "type" : "object",
      "description" : "Non-Subscription Offerings that are bundled with the plan as part of NSO group",
      "properties" : {
        "item_no" : {
          "description" : "Inventory item number that is bundled with the plan",
          "type" : "integer",
          "format" : "int64"
        },
        "active_ind" : {
          "description" : "Inventory item status.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_nso_group_price_override" : {
          "description" : "Overridden prices for NSO items.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanNsoGroupPriceOverride"
          }
        }
      },
      "required" : [ "plan_nso_group_price_override" ]
    },
    "RecordAlternativePaymentMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "record_alternative_payment_m" ],
          "default" : "record_alternative_payment_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "reference_code" : {
          "description" : "This code provides a reference correlation to the external payment. This field must be unique for every payment submitted by the client.\n",
          "type" : "string"
        },
        "payment_amount" : {
          "description" : "The amount of the payment to-be made against the outstanding account balance\n",
          "type" : "number"
        },
        "processor_id" : {
          "description" : "The payment processor to use for managing the Boleto, ApplePay - Indirect, PayPal Express Checkout - Indirect, iDEAL, PaySafeCard, SOFORT, WebMoney, and Yandex payments.  Note that some payment processors may not be fully integrated with all of the available alternative pay methods.  Please consult your Aria Professional Services team for more details.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "pay_method_type" : {
          "description" : "Payment method code.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "statement_no" : {
          "description" : "The unique statement number that shall be used to identify the billing group.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "allow_recurring" : {
          "description" : "Specifies whether this payment method can be used for subsequent recurring payments.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "reference_code", "payment_amount", "processor_id", "pay_method_type", "statement_no" ]
    },
    "RateSched" : {
      "type" : "object",
      "description" : "An array of the rate schedules for the requested plan\\n",
      "properties" : {
        "schedule_no" : {
          "description" : "The ID of this rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "schedule_name" : {
          "description" : "The name of this rate schedule",
          "type" : "string"
        },
        "schedule_currency" : {
          "description" : "The currency this rate schedule is linked to",
          "type" : "string"
        },
        "recurring_billing_interval" : {
          "description" : "Number of months between billing cycles for recurring",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_billing_interval" : {
          "description" : "Number of months between billing cycles for usage",
          "type" : "integer",
          "format" : "int64"
        },
        "default_ind" : {
          "description" : "If true, this is the default rate schedule for the default currency of the plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "display_ind" : {
          "description" : "Whether or not this rate schedule is displayable",
          "type" : "integer",
          "format" : "int64"
        },
        "default_ind_curr" : {
          "description" : "If true, this is the default rate schedule for the specified currency",
          "type" : "integer",
          "format" : "int64"
        },
        "client_rate_schedule_id" : {
          "description" : "Client assigned unique rate schedule number",
          "type" : "string"
        },
        "available_from_dt" : {
          "description" : "Start date of rate schedule",
          "type" : "string"
        },
        "available_to_dt" : {
          "description" : "End date of rate schedule",
          "type" : "string"
        },
        "followup_rs_no" : {
          "description" : "Aria internal ID of follow-up default rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "client_followup_rs_id" : {
          "description" : "Client-defined ID of followup rate schedule",
          "type" : "string"
        },
        "rate_sched_translations" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RateSchedTranslation"
          }
        }
      }
    },
    "ContractPlan" : {
      "type" : "object",
      "description" : "List of plan instance(s) to be associated with the contract.\\n",
      "properties" : {
        "plan_instance_idx" : {
          "description" : "If you enter a value in this field, the contract you specify in the client_contract_id field is applied to the plan(s) you specify here. Otherwise, the contract is assigned at the account level.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Client-defined plan instance to be associated with the contract",
          "type" : "string"
        },
        "cascade_action" : {
          "description" : "Determines whether to include all child plan instances of the plan instance specified at the time of contract assignment in the contract\n",
          "type" : "string"
        }
      }
    },
    "GetAcctPlansMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_plans_m" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctPlansM"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned Locale identifier. This value is unique across all Aria-managed accounts.",
          "type" : "string"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "GetCountryFromIpMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "country_code" : {
          "description" : "Phone number dialing prefix indicating the country to dial.\n",
          "type" : "string"
        },
        "country_name" : {
          "description" : "Country name returned from a search using the provided IP address.\n",
          "type" : "string"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetItemsBySuppFieldMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_items_by_supp_field_m" ],
          "default" : "get_items_by_supp_field_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "field_no" : {
          "description" : "The plan supplemental field number which is being searched against",
          "type" : "integer",
          "format" : "int64"
        },
        "field_val" : {
          "description" : "The value of the supplemental field which all returned plans should possess",
          "type" : "string"
        },
        "field_name" : {
          "description" : "The optional name of this supplemental field, if the number is not known",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "field_val" ]
    },
    "UnsubscribeEventClassMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "unsubscribe_event_class_m" ],
          "default" : "unsubscribe_event_class_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "class_no" : {
          "description" : "The event class number to unsubscribe from.",
          "type" : "integer",
          "format" : "int64"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "class_no" ]
    },
    "AcctsWithPayMethod" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "active" : {
          "description" : "This indicator represents if the credit card number or bank account number of the payment method being searched is currently active and is the primary method.  A value of 1 is true, and a value of 0 is false.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AllItemPrice" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "price" : {
          "description" : "The total price for this item",
          "type" : "number"
        },
        "price_per_unit" : {
          "description" : "The price for a single unit of this item",
          "type" : "number"
        },
        "currency_cd" : {
          "description" : "The ISO-compatible 3-digit currency code for the currency this item price bills in",
          "type" : "string"
        }
      }
    },
    "UsageService" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "usage_type_no" : {
          "description" : "The Aria-assigned usage type number to set the threshold unit amount per specific usage type.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_usage_type_id" : {
          "description" : "Client-assigned identifier for the type to set the threshold unit amount per specific usage type. Either this field OR \"usage_type_no\" must be passed into the API to denote which usage type to set the threshold unit.\n",
          "type" : "string"
        },
        "unit_threshold_dest_types" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UnitThresholdDestType"
          }
        }
      }
    },
    "SettleDisputeHoldMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "rec_no" : {
          "description" : "Write-off/dispute record number.",
          "type" : "integer",
          "format" : "int64"
        },
        "created_by" : {
          "description" : "Write-off/dispute creator name.",
          "type" : "string"
        },
        "amount" : {
          "description" : "Write-off/dispute amount.",
          "type" : "number"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_date" : {
          "description" : "Invoice date.",
          "type" : "string"
        },
        "invoice_amt" : {
          "description" : "Invoice amount.",
          "type" : "number"
        },
        "dispute_creation_date" : {
          "description" : "Dispute create date.",
          "type" : "string"
        },
        "dispute_exp_date" : {
          "description" : "Dispute expiration date.",
          "type" : "string"
        },
        "comments" : {
          "description" : "Write-off/dispute comments.",
          "type" : "string"
        },
        "reason_code" : {
          "description" : "Write-off/dispute reason code.",
          "type" : "integer",
          "format" : "int64"
        },
        "secondary_reason_code" : {
          "description" : "Dispute reason code.",
          "type" : "integer",
          "format" : "int64"
        },
        "dispute_ind" : {
          "description" : "Specifies dispute or writeoff",
          "type" : "integer",
          "format" : "int64"
        },
        "can_unsettle" : {
          "description" : "Specifies if this dispute can be unsettled.",
          "type" : "string"
        },
        "writeoff_dispute_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WriteoffDisputeInfo"
          }
        }
      }
    },
    "GetAcctPlanNotifyMethodMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_plan_notify_method_m" ],
          "default" : "get_acct_plan_notify_method_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the master plan instance.",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "'The unique identifier of the billing group.'\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_def_billing_group_id" : {
          "description" : "The client-defined identifier of the billing group.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "SetAcctTaxExemptStatusMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetAcctOpenChargesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_open_charges_m" ],
          "default" : "get_acct_open_charges_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "CreateAcctCompleteMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "create_acct_complete_m" ],
          "default" : "create_acct_complete_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions",
          "type" : "string",
          "maxLength" : 50
        },
        "acct" : {
          "description" : "Defines all information about the top-level account, including contact information, assigned client plans, and payment configuration\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Acct"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "SendAcctEmailMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "ProcFraudScoringInfo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "proc_fraud_score" : {
          "description" : "Fraud Score provided by the Payment processor.",
          "type" : "string"
        },
        "proc_fraud_score_result" : {
          "description" : "Fraud Score result provided by the Payment processor if available.",
          "type" : "string"
        }
      }
    },
    "PlanSuppFieldsT" : {
      "type" : "object",
      "description" : "Supplemental object fields associated with this plan",
      "properties" : {
        "plan_supp_field_no" : {
          "description" : "Supplemental object field ID",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_supp_field_name" : {
          "description" : "Name of the supplemental field. This value is required if you want to assign supplemental fields. For example, if you have any accounts that are tax-exempt or international, you must set up corresponding account supplemental fields prior to your tax provider configuration. Create fields for  the tax exemption number and for the VAT ID used by the tax provider.\n",
          "type" : "string"
        },
        "plan_supp_field_desc" : {
          "description" : "Description of the supplemental object field",
          "type" : "string"
        },
        "plan_supp_field_value" : {
          "description" : "The value in this supplemental field on the plan",
          "type" : "string"
        }
      }
    },
    "PlanTranslationInfo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "Aria-assigned plan identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "plan_name" : {
          "description" : "The short name of this plan.",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "The long description of this plan.",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_scheds_t" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RateSchedsT"
          }
        }
      }
    },
    "SetAcctNotifyOverrideMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "OtherContact" : {
      "type" : "object",
      "description" : "List of contacts saved on the account not currently used as an account contact, billing contact, or statement contact.",
      "properties" : {
        "other_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact.",
          "type" : "integer",
          "format" : "int64"
        },
        "other_first_name" : {
          "description" : "The first name of the contact.",
          "type" : "string"
        },
        "other_middle_initial" : {
          "description" : "The middle initial of the contact.",
          "type" : "string"
        },
        "other_last_name" : {
          "description" : "The last name of the contact.",
          "type" : "string"
        },
        "other_company_name" : {
          "description" : "The company name of the contact.",
          "type" : "string"
        },
        "other_address1" : {
          "description" : "The first address line of the contact.",
          "type" : "string"
        },
        "other_address2" : {
          "description" : "Second address line of the contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "other_address3" : {
          "description" : "The third address line of the contact.",
          "type" : "string"
        },
        "other_city" : {
          "description" : "The city of the contact.",
          "type" : "string"
        },
        "other_locality" : {
          "description" : "The locality of the contact.",
          "type" : "string"
        },
        "other_state_prov" : {
          "description" : "The state or province of the contact. Note that only the official postal-service codes or states, provinces, and   territories in the United States, Australia and Canada are supported. Use the other_locality field for states, provinces, or territories in other countries.\n",
          "type" : "string"
        },
        "other_country_cd" : {
          "description" : "The country of the contact. Provide the ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "other_postal_cd" : {
          "description" : "The postal/zip code of the contact.",
          "type" : "string"
        },
        "other_phone" : {
          "description" : "The phone number of the contact.",
          "type" : "string"
        },
        "other_phone_ext" : {
          "description" : "The phone number extension of the contact.",
          "type" : "string"
        },
        "other_cell_phone" : {
          "description" : "The cell phone number of the contact.",
          "type" : "string"
        },
        "other_work_phone" : {
          "description" : "The work phone number of the contact.",
          "type" : "string"
        },
        "other_work_phone_ext" : {
          "description" : "The work phone number extension of the contact.",
          "type" : "string"
        },
        "other_fax" : {
          "description" : "The fax number of the contact.",
          "type" : "string"
        },
        "other_email" : {
          "description" : "The email address of the contact.",
          "type" : "string"
        },
        "other_birthdate" : {
          "description" : "The birthdate of the contact.",
          "type" : "string"
        },
        "other_address_verification_code" : {
          "description" : "Verification code for the contact address.",
          "type" : "string"
        },
        "other_address_match_score" : {
          "description" : "Match score for the contact address.",
          "type" : "number"
        }
      }
    },
    "CmLineItem" : {
      "type" : "object",
      "description" : "Array of credit memo lines.",
      "properties" : {
        "line_no" : {
          "description" : "Sequence number of the original invoice line associated with the credit memo line.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_reason_cd_det" : {
          "description" : "The reason for providing the credit memo.",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_instance_no" : {
          "description" : "The unique identifier of the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "supp_plan_instance_no" : {
          "description" : "The unique identifier of the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_supp_plan_instance_id" : {
          "description" : "Client-defined plan instance ID for each assigned supplemental plan.",
          "type" : "string"
        },
        "service_no" : {
          "description" : "The unique ID for the service this line represents.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "Client-defined unique for Master plan",
          "type" : "string"
        },
        "cm_line_amount" : {
          "description" : "Amount to be credited against the transaction ID.",
          "type" : "number"
        },
        "cm_line_comments" : {
          "description" : "Explanatory text for the credit memo line.",
          "type" : "string"
        }
      }
    },
    "GetStatementContentMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_statement_content_m" ],
          "default" : "get_statement_content_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_no" : {
          "description" : "The unique ID of the statement for which the details are being fetched",
          "type" : "integer",
          "format" : "int64"
        },
        "do_encoding" : {
          "description" : "True indicates to acquire the message size after doing MIME encoding, False acquires message size without MIME encoding.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "statement_no" ]
    },
    "GetAllAcctReceiptIdsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_all_acct_receipt_ids_m" ],
          "default" : "get_all_acct_receipt_ids_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "start_date_range" : {
          "description" : "The start-date of the given date range.",
          "type" : "string"
        },
        "end_date_range" : {
          "description" : "The end-date of the given date range",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "OrderLineItem" : {
      "type" : "object",
      "description" : "This is an array of line items appearing on the order. The array elements for this argument immediately follow and are indicated as elements with a right-arrow icon.\\n",
      "properties" : {
        "client_sku" : {
          "description" : "",
          "type" : "string"
        },
        "units" : {
          "description" : "The number of units indicated for this SKU on the line item.",
          "type" : "number"
        },
        "amount" : {
          "description" : "The amount for this line item.",
          "type" : "number"
        },
        "unit_discount_amount" : {
          "description" : "The discount amount applied for the number of units indicated for the line item.\n",
          "type" : "number"
        },
        "line_comments" : {
          "description" : "Any client-defined comments, from a CSR or automated system, for this particular line item. Note: The field size limit is less than 3000 characters or 4000 bytes.",
          "type" : "string"
        },
        "item_svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the item (NSO) being purchased. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no will take precedence.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_svc_location_id" : {
          "description" : "The client-defined unique identifier for the origin location for the item (NSO) being purchased. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no will take precedence.",
          "type" : "string"
        },
        "item_dest_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the destination contact for the item (NSO) being purchased. Depending on taxation configuration, this address may be used for tax calculations. If both item_dest_contact_idx and item_dest_contact_no are provided, item_dest_contact_no will take precedence.",
          "type" : "integer",
          "format" : "int64"
        },
        "item_dest_contact_idx" : {
          "description" : "For non-persistent referencing of a destination contact in the contacts array within the API request. Depending on taxation configuration, the address associated with this destination contact may be used for tax calculations.",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "client_sku", "units" ]
    },
    "GetRateSchedulesForPlanMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "rate_scheds" : {
          "description" : "An array of the rate schedules for the requested plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RateSched"
          }
        }
      }
    },
    "GetSuppFieldValuesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_supp_field_values" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctSuppFieldValue"
          }
        }
      }
    },
    "UnapplyCmMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "unapply_cm_m" ],
          "default" : "unapply_cm_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "This is the client-assigned identifier for the account.\n",
          "type" : "string",
          "maxLength" : 50
        },
        "cm_unapply_details" : {
          "description" : "Array of credit memo line unapplication.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CmUnapplyDetail"
          }
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "cm_unapply_details" ]
    },
    "BanAcctMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "SetExternalObjectIdMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "set_external_object_id_m" ],
          "default" : "set_external_object_id_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "destination_id" : {
          "description" : "The external system identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "source_type_id" : {
          "description" : "The type of Aria object being referenced",
          "type" : "integer",
          "format" : "int64"
        },
        "object_id" : {
          "description" : "The ID of the Aria object being referenced",
          "type" : "integer",
          "format" : "int64"
        },
        "external_id" : {
          "description" : "The external system ID being assigned",
          "type" : "string"
        },
        "action_directive" : {
          "description" : "Either \"add\" or \"merge\"",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "destination_id", "source_type_id", "object_id", "external_id" ]
    },
    "SavePaypalBillAgreementMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "paypal_email" : {
          "description" : "",
          "type" : "string"
        },
        "paypal_payerid" : {
          "description" : "",
          "type" : "string"
        },
        "paypal_payerstatus" : {
          "description" : "",
          "type" : "string"
        },
        "paypal_countrycode" : {
          "description" : "",
          "type" : "string"
        },
        "paypal_shiptoname" : {
          "description" : "",
          "type" : "string"
        },
        "paypal_shiptostreet" : {
          "description" : "",
          "type" : "string"
        },
        "paypal_shipttostreet2" : {
          "description" : "",
          "type" : "string"
        },
        "paypal_shiptocity" : {
          "description" : "",
          "type" : "string"
        },
        "paypal_shiptostate" : {
          "description" : "",
          "type" : "string"
        },
        "paypal_shiptozip" : {
          "description" : "",
          "type" : "string"
        },
        "paypal_shiptocountrycode" : {
          "description" : "",
          "type" : "string"
        },
        "paypal_addressstatus" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "error_code", "error_msg", "bill_agreement_id", "paypal_email", "paypal_payerid", "paypal_payerstatus", "paypal_countrycode" ]
    },
    "UpdateAcctStatusMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_acct_status_m" ],
          "default" : "update_acct_status_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "status_cd" : {
          "description" : "This is the status of the object in question for the current API call.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "queue_days" : {
          "description" : "Days in to queue before the status change occurs.",
          "type" : "integer",
          "format" : "int64"
        },
        "queue_date" : {
          "description" : "Specific date for the status change to occur in yyyy-mm-dd format",
          "type" : "string"
        },
        "force_bill_date_reset" : {
          "description" : "Determines whether to reset the billing dates to either the status change date or current anniversary date, reset the billing dates when the status changes from non-provisionable to provisionable depending on client parameter 'RESET_DATES_ON_REPROVISIONED_STATUS' setting, or not reset at all.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "alt_do_dunning" : {
          "description" : "When set to true, indicates that dunning should be initiated.\n",
          "type" : "string"
        },
        "status_degrade_date" : {
          "description" : "Specific date, in yyyy-mm-dd format, to allow controlling of an account's dunning process.\"\n",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "CancelRecurringCreditsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "cancel_recurring_credits_m" ],
          "default" : "cancel_recurring_credits_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "userid" : {
          "description" : "The users unique identifier.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "recurring_credit_no" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RecurringCreditNo"
          }
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "cancel_comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "PlanSuppField" : {
      "type" : "object",
      "description" : "Supplemental object fields associated with this plan",
      "properties" : {
        "plan_supp_field_no" : {
          "description" : "Supplemental object field ID",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_supp_field_name" : {
          "description" : "Name of the supplemental field. This value is required if you want to assign supplemental fields. For example, if you have any accounts that are tax-exempt or international, you must set up corresponding account supplemental fields prior to your tax provider configuration. Create fields for  the tax exemption number and for the VAT ID used by the tax provider.\n",
          "type" : "string"
        },
        "plan_supp_field_desc" : {
          "description" : "Description of the supplemental object field",
          "type" : "string"
        },
        "plan_supp_field_value" : {
          "description" : "The value in this supplemental field on the plan",
          "type" : "string"
        }
      }
    },
    "ReplaceRegUssConfigParamsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "RecurringCreditsDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "out_acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "out_master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_mp_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "recurring_credit_no" : {
          "description" : "The identifier for the recurring credit.",
          "type" : "integer",
          "format" : "int64"
        },
        "create_date" : {
          "description" : "The date the recurring credit record was created.",
          "type" : "string"
        },
        "create_user" : {
          "description" : "The user who created the recurring credit record.",
          "type" : "string"
        },
        "update_date" : {
          "description" : "The date the recurring credit record was last updated.",
          "type" : "string"
        },
        "update_user" : {
          "description" : "The user who last updated the recurring credit record",
          "type" : "string"
        },
        "first_credit_date" : {
          "description" : "The first date that recurring credit was applied to the account.",
          "type" : "string"
        },
        "last_credit_date" : {
          "description" : "The last date that recurring credit will be applied to the account.",
          "type" : "string"
        },
        "next_credit_date" : {
          "description" : "The next date that a recurring credit will be applied to the account (assuming the last_credit_date has not passed)\n",
          "type" : "string"
        },
        "credit_amount" : {
          "description" : "The monetary amount of the credit to be applied for each iteration of the recurring credit sequence.\n",
          "type" : "number"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "credits_completed" : {
          "description" : "The number of credits that have been applied to the account",
          "type" : "integer",
          "format" : "int64"
        },
        "credits_remaining" : {
          "description" : "The number of remaining credits to apply to the account",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_interval_months" : {
          "description" : "The interval (in months) between credits to the account",
          "type" : "integer",
          "format" : "int64"
        },
        "eligible_plan_no" : {
          "description" : "The plan number that is eligible to apply recurring credit.",
          "type" : "integer",
          "format" : "int64"
        },
        "eligible_plan_name" : {
          "description" : "The name of the eligible plan number.",
          "type" : "string"
        },
        "eligible_service_no" : {
          "description" : "The service number eligible for recurring credit",
          "type" : "integer",
          "format" : "int64"
        },
        "eligible_service_name" : {
          "description" : "The name of the eligible service.",
          "type" : "string"
        },
        "service_no_to_apply" : {
          "description" : "The service number to apply the recurring credit to.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name_to_apply" : {
          "description" : "The name of the service to apply the recurring credit to.",
          "type" : "string"
        },
        "credit_status_cd" : {
          "description" : "The status code for the recurring credit.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_status_label" : {
          "description" : "The label for the recurring credit status code.",
          "type" : "string"
        },
        "credit_reason_cd" : {
          "description" : "The reason code for the application of credit toward the account specified",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_reason_text" : {
          "description" : "The text description of the credit reason code.",
          "type" : "string"
        },
        "comments" : {
          "description" : "Free-form comments for the credit applied to the specified account.",
          "type" : "string"
        },
        "cancel_date" : {
          "description" : "The date the credit was cancelled (if any)",
          "type" : "string"
        },
        "cancel_user" : {
          "description" : "The user who cancelled the credit.",
          "type" : "string"
        },
        "cancel_comments" : {
          "description" : "Comments from the user who cancelled the credit",
          "type" : "string"
        },
        "client_eligible_plan_id" : {
          "description" : "The client-defined plan ID that is eligible to apply recurring credit.",
          "type" : "string"
        },
        "client_eligible_service_id" : {
          "description" : "The client-defined service ID eligible for recurring credit",
          "type" : "string"
        },
        "client_service_id_to_apply" : {
          "description" : "The client-defined service ID to apply the recurring credit to.",
          "type" : "string"
        },
        "eligible_service_types" : {
          "description" : "A list of eligible service types",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EligibleServiceType"
          }
        },
        "eligible_service_plan_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EligibleServicePlanDetail"
          }
        }
      }
    },
    "EligibleServicePlan" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "If used, specifies the plan(s) to which the credit is applied. If the credit is to be applied as an offset to ANY charge incurred by the account holder, leave this field empty. If the credit is to be applied to offset a specific type of charge, then this field and either the eligible_service_no or client_eligible_service_id field must be valued.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no" : {
          "description" : "If used, specifies the service(s) to which the credit is applied. If you value this field, you must also value either the corresponding plan_no field. If the credit to be created is to be applied to offset  a specific type of charge, then that specific plan_no and service_no combination referencing that type of charge must be supplied in these two fields. <p> If you use this array to enter multiple service numbers, you must enter the same number of plans in the plan_no array, and the plan number and its corresponding service number must appear in the same sequence in each array, or the API call fails.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CompareAgainstCcBlacklistMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "cc_num_blacklisted" : {
          "description" : "Whether the card is blacklisted.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notes" : {
          "description" : "Notes about this card.\n",
          "type" : "string"
        },
        "date_added" : {
          "description" : "Date on which this card was most recently added to the blacklist.\n",
          "type" : "string"
        },
        "date_removed" : {
          "description" : "Date on which this card was most recently removed from the blacklist.\n",
          "type" : "string"
        }
      }
    },
    "GetCurrentSystemVersionMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "version" : {
          "description" : "The current system version.  Note that Aria system versions are store in a standard syntax by which major and minor versions are separated by a period or decimal point. Therefore, version 6.10 was released more than a year after version 6.2, despite 6.1 being less than 6.2.\n",
          "type" : "string"
        }
      }
    },
    "ReversibleInvTran" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "invoiced_acct_no" : {
          "description" : "The Aria-assigned account ID which was invoiced",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_line_no" : {
          "description" : "The number of this particular line on the invoice",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_trans_id" : {
          "description" : "The Aria-assigned financial transaction ID corresponding to the invoice upon which this usage record was billed to the account holder.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_trans_date" : {
          "description" : "The date of the invoice",
          "type" : "string"
        },
        "invoice_trans_description" : {
          "description" : "The description of this invoice line",
          "type" : "string"
        },
        "invoice_trans_amount" : {
          "description" : "The amount of this invoice",
          "type" : "number"
        },
        "inv_trans_reversed_amount" : {
          "description" : "If any reversals have been previously booked, this is the total of those reversals",
          "type" : "number"
        },
        "inv_trans_reversible_amount" : {
          "description" : "The remaining invoice balance which could be reversed",
          "type" : "number"
        },
        "invoice_trans_is_recur_service" : {
          "description" : "Specifies whether or not this service is a recurring service.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_trans_recur_start_date" : {
          "description" : "Specifies the start date of the recurring service.",
          "type" : "string"
        }
      }
    },
    "AssignCustomAcctPlanRatesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "assign_custom_acct_plan_rates_m" ],
          "default" : "assign_custom_acct_plan_rates_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "Unique plan instance number for each custom rates.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined ID for each custom rates.",
          "type" : "string"
        },
        "service_no" : {
          "description" : "Aria-assigned unique service identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "A multidimensional array of Client-defined Service ID for this plan.\n",
          "type" : "string"
        },
        "custom_acct_rates" : {
          "description" : "This is a multidimensional array containing elements with the attributes rate_seq_no, rate_per_unit, from_unit, to_unit.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomAcctRate"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "custom_acct_rates" ]
    },
    "ThresholdLevel" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "level_no" : {
          "description" : "Returns the threshold level for the threshold_units",
          "type" : "integer",
          "format" : "int64"
        },
        "threshold_value" : {
          "description" : "Returns the threshold value against the level_no",
          "type" : "number"
        },
        "delta_usage_units_bal" : {
          "description" : "Returns the delta usge units balance.",
          "type" : "number"
        },
        "delta_usage_units_sign" : {
          "description" : "A symbolic indicator as to whether the value in parameter \"delta_usage_units_bal\" is above, below, or equal to its associated threshold value.\n",
          "type" : "string"
        }
      }
    },
    "AllItemSuppField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "field_name" : {
          "description" : "The machine-readable name of this field",
          "type" : "string"
        },
        "field_desc" : {
          "description" : "The human-readable name of this field",
          "type" : "string"
        },
        "field_order_no" : {
          "description" : "The sort order of this field",
          "type" : "integer",
          "format" : "int64"
        },
        "field_value" : {
          "description" : "The value stored in this field",
          "type" : "string"
        }
      }
    },
    "ContractRolloverCustomRateInfo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "custom_rate_plan_instance_no" : {
          "description" : "Plan instance for which the custom rates will be used at the completion of the contract.",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_client_plan_instance_id" : {
          "description" : "Client-defined ID of the plan instance for which the custom rates will be used at the completion of the contract.",
          "type" : "string"
        },
        "custom_rate_service_no" : {
          "description" : "Service number for the new custom rate",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_client_rate_service_id" : {
          "description" : "Unique client-defined identifier for the custom rate service number.",
          "type" : "string"
        },
        "custom_rate_seq_no" : {
          "description" : "Sequence number for this line of the rate schedule.",
          "type" : "string"
        },
        "custom_rate_from_unit" : {
          "description" : "Tiered pricing, \"FROM\" unit.",
          "type" : "string"
        },
        "custom_rate_to_unit" : {
          "description" : "Tiered pricing, \"TO\" unit.",
          "type" : "string"
        },
        "custom_rate_per_unit" : {
          "description" : "Rate to charge per unit on this tier.",
          "type" : "string"
        }
      }
    },
    "ValidateAcctFraudScoringMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "validate_acct_fraud_scoring_m" ],
          "default" : "validate_acct_fraud_scoring_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 22
        },
        "amount" : {
          "description" : "The monetary amount of the electronic payment.",
          "type" : "number"
        },
        "plan_instance_list" : {
          "description" : "Array of Master Plan Instances or Client Plan Instance Id",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanInstanceList"
          }
        },
        "billing_group_no" : {
          "description" : "The unique identifier of the billing group.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined unique identifier for billing group",
          "type" : "string"
        },
        "alt_pay_method" : {
          "description" : "If you want to use the account's current form of payment, leave this field empty. If you want to use an alternate credit card, enter '1' in this field.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_num" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_source" : {
          "description" : "Records the source of this payment information.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_method_no" : {
          "description" : "Payment method no.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "Client defined Payment method Id.",
          "type" : "string"
        },
        "alt_acct_group_no" : {
          "description" : "One-time collections account group to use for this specific call. Default collections group on the account is not changed.",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_client_acct_group_id" : {
          "description" : "One-time client collections account group to use for this specific call. Default collections group on the account is not changed.",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_zip" : {
          "description" : "Zip Code of the billing contact",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_extension" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_birthdate" : {
          "description" : "Birthdate of the billing contact.\n",
          "type" : "string"
        },
        "bill_drivers_license_no" : {
          "description" : "Customer Driving License Number",
          "type" : "string"
        },
        "ship_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "ship_first_name" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "string"
        },
        "ship_middle_initial" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "string"
        },
        "ship_last_name" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "string"
        },
        "ship_address1" : {
          "description" : "The first line of the shipping address.",
          "type" : "string"
        },
        "ship_address2" : {
          "description" : "The second line of the shipping address.",
          "type" : "string"
        },
        "ship_address3" : {
          "description" : "The third line of the shipping address.",
          "type" : "string"
        },
        "ship_city" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "string"
        },
        "ship_state_prov" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "string"
        },
        "ship_locality" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "string"
        },
        "ship_country" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "string"
        },
        "ship_zip" : {
          "description" : "Zip Code of the billing contact",
          "type" : "string"
        },
        "ship_phone" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "string"
        },
        "ship_phone_extension" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "string"
        },
        "end_user_ip_address" : {
          "description" : "",
          "type" : "string"
        },
        "end_user_browser_accept_header" : {
          "description" : "",
          "type" : "string"
        },
        "end_user_browser_agent" : {
          "description" : "",
          "type" : "string"
        },
        "end_user_session_id" : {
          "description" : "",
          "type" : "string"
        },
        "fraud_field" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudField"
          }
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "amount", "plan_instance_list" ]
    },
    "SetSessionMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "session_id" : {
          "description" : "Client-assigned identifier for the application session.",
          "type" : "string"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetCreditDetailsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_credit_details_m" ],
          "default" : "get_credit_details_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "credit_no" : {
          "description" : "Aria-assigned unique identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "credit_no" ]
    },
    "GetParentForItemClassMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_parent_for_item_class_m" ],
          "default" : "get_parent_for_item_class_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "filter_class_no" : {
          "description" : "An item class number to use to filter results.",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "filter_class_no" ]
    },
    "ParentPlan" : {
      "type" : "object",
      "description" : "The plans which are mapped as parents of this plan",
      "properties" : {
        "parent_plan_no" : {
          "description" : "ID of the parent plan",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_plan_name" : {
          "description" : "Name of the parent plan",
          "type" : "string"
        },
        "client_parent_plan_id" : {
          "description" : "Client-defined unique parent Plan ID",
          "type" : "string"
        }
      }
    },
    "RecordAlternativePaymentMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "auth_no" : {
          "description" : "The unique number for a given authorization.",
          "type" : "integer",
          "format" : "int64"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "SendAcctStatementEmailMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "SetProvEngineMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "UpdateAcctStatusMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetAcctPreviewStatementMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "out_statement" : {
          "description" : "The returned account statement.",
          "type" : "string"
        },
        "mime_type" : {
          "description" : "MIME type for statement encoding.",
          "type" : "string"
        }
      }
    },
    "UnitThresholdBalanceType" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "threshold_balance_type" : {
          "description" : "Returns a string representing the threshold balance type either month-to-date or billing-period-to-date.\n",
          "type" : "string"
        },
        "threshold_reference_units" : {
          "description" : "The total number of threshold units",
          "type" : "number"
        },
        "notification_levels" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NotificationLevel"
          }
        }
      }
    },
    "RefreshTokenFromPmtProcessorMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_postal_cd" : {
          "description" : "Postal code for the billing contact.",
          "type" : "string"
        },
        "bill_address_verification_code" : {
          "description" : "Billing address verification code for the billing contact address.",
          "type" : "string"
        },
        "bill_address_match_score" : {
          "description" : "Billing address match score for the billing contact address.",
          "type" : "number"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_ext" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_ext" : {
          "description" : "This is the work phone extension for the billing contact work phone.\n",
          "type" : "string"
        },
        "bill_fax" : {
          "description" : "Fax number of the billing contact.",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_birthdate" : {
          "description" : "Birthdate of the billing contact.\n",
          "type" : "string"
        },
        "pay_method_name" : {
          "description" : "The name of this payment method",
          "type" : "string"
        },
        "client_payment_method_id" : {
          "description" : "The method ID for the payment method.",
          "type" : "string"
        },
        "pay_method_description" : {
          "description" : "Description for the pay method.",
          "type" : "string"
        },
        "pay_method_type" : {
          "description" : "This is the method_id corresponding to a payment method such as credit card, Electronic Check, Pre-Paid, Net Terms, etc. nullable: true default: -1\n",
          "type" : "integer",
          "format" : "int64"
        },
        "suffix" : {
          "description" : "The last 4 digits of the account number",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_type" : {
          "description" : "The type of credit card used for the original payment.",
          "type" : "string"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "status" : {
          "description" : "The staus is \"1\", the payment method is enabled for the account, if the status is as \"0\" the payment method is disabled for this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "persistent_ind" : {
          "description" : "If true, this payment method persists on the account. Otherwise it was  used for a one-time payment.",
          "type" : "integer",
          "format" : "int64"
        },
        "from_date" : {
          "description" : "The beginning effective date with time for this payment method on this account.",
          "type" : "string"
        },
        "to_date" : {
          "description" : "The ending effective date with time for this payment method on this account.  If none, this is the current form of payment.",
          "type" : "string"
        },
        "bill_info_api_receipt_id" : {
          "description" : "The receipt ID used in the initial API call which created this billing info record.",
          "type" : "string"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "SurchargeUpdate" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "surcharge_no" : {
          "description" : "Note that only those surcharges with Surcharge Applicablity Scope of Account or Account and Master Plan Instance are acceptable input. Either this field, or client_surcharge_id is required when assigning/removing/updating surcharge for this plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_surcharge_id" : {
          "description" : "Note that only those surcharges with Surcharge Applicablity Scope of Account or Account and Master Plan Instance should be accepted.\n",
          "type" : "string"
        },
        "rate_schedule_no" : {
          "description" : "If not specified, the default rate schedule matching the currency on the account will be used.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "surcharge_directive" : {
          "description" : "Required for each surcharge specified in this array.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "BulkRecordUsageMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "error_records" : {
          "description" : "If client record IDs are provided, an array of error codes and error messages for individual records",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ErrorRecord"
          }
        }
      },
      "required" : [ "error_records" ]
    },
    "UnsubscribeEventsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "PlanServiceRatesT" : {
      "type" : "object",
      "description" : "Represents the rates for the default rate schedule for the default currency for the plan.",
      "properties" : {
        "rate_seq_no" : {
          "description" : "Sequential number in the rate schedule for dertermining tiers",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_schedule_name" : {
          "description" : "Rate Tier Description",
          "type" : "string"
        },
        "rate_tier_description" : {
          "description" : "Rate Tier Description",
          "type" : "string"
        }
      }
    },
    "AuthenticateCallerMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetPlansByPromoCodeAllMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "all_plan_details" : {
          "description" : "This return value is a multidimensional array describing the detail of all available plans.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllPlanDetail"
          }
        }
      }
    },
    "AllPlanBasicDetail" : {
      "type" : "object",
      "description" : "Multidimensional array of returned plans and plan structure.",
      "properties" : {
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "Plan Name",
          "type" : "string"
        },
        "supp_plan_ind" : {
          "description" : "Indicates whether or not this plan is a supplemental plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client assigned unique plan identifier",
          "type" : "string"
        },
        "parent_plan_list" : {
          "description" : "Array of plans which are mapped as parents of this plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ParentPlanList"
          }
        },
        "child_plan_list" : {
          "description" : "Array of the plans mapped as children of this plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChildPlanList"
          }
        }
      }
    },
    "CmLineDetail" : {
      "type" : "object",
      "description" : "Array of credit transaction details.",
      "properties" : {
        "cm_line_no" : {
          "description" : "Invoice line number.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_transaction_id" : {
          "description" : "Aria generated transaction ID for the credit memo line.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_void_transaction_id" : {
          "description" : "Aria generated transaction ID for the void credit memo line, if the credit memo has been voided.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_line_amount" : {
          "description" : "Amount of the credit memo line.",
          "type" : "number"
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "service_no" : {
          "description" : "Aria-assigned unique identifier of the service associated with the invoice line item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "Client-defined identifier of the service associated with the invoice line item.\n",
          "type" : "string"
        },
        "item_no" : {
          "description" : "The unique ID of the item being retrieved.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_id" : {
          "description" : "The unique client-defined item ID being retrieved.\n",
          "type" : "string"
        },
        "client_sku" : {
          "description" : "The client-defined item identifier.\n",
          "type" : "string"
        },
        "reason_code" : {
          "description" : "Reason code.\n",
          "type" : "string"
        }
      }
    },
    "AllPlanInstance" : {
      "type" : "object",
      "description" : "This return value is a multidimensional array describing the detail of all available plans.\\n",
      "properties" : {
        "queued_ind" : {
          "description" : "Queued Indicator",
          "type" : "string"
        },
        "plan_instance_no" : {
          "description" : "The Aria-assigned unique identifier for the plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the plan instance.",
          "type" : "string"
        },
        "parent_plan_instance_no" : {
          "description" : "Aria-assigned Master Plan Instance number for the supplement plan (if applicable).",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The name of the plan returned.",
          "type" : "string"
        },
        "plan_type" : {
          "description" : "Plan type associated with the plan returned by this call.\n",
          "type" : "string"
        },
        "plan_unit_inst_list" : {
          "description" : "This return value is a multidimensional array describing the detail of all available plans unit instances.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstList"
          }
        }
      }
    },
    "GetAcctNotificationDetailsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_notification_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctNotificationDetail"
          }
        }
      }
    },
    "MasterPlanProductField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "field_name" : {
          "description" : "The machine-readable name of this field",
          "type" : "string"
        },
        "field_value" : {
          "description" : "The value stored in this field",
          "type" : "string"
        }
      }
    },
    "GetAllAcctContractsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_all_acct_contracts_m" ],
          "default" : "get_all_acct_contracts_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "filter_status_code" : {
          "description" : "The filter_status_code is the Aria code used to filter account contract for Inactive or Active (0 or 1). Value of \"null\" returns account contracts  without filtering by status, and is the default.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "exclude_terminated_plan_inst" : {
          "description" : "This indicator determines if terminated plan instances should be excluded from the return. If True is passed, the API shall exclude (not return) any plan instances that have a status of Terminated.\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned Locale identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "KeepAliveMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetUnbilledUsageSummaryMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "currency_name" : {
          "description" : "Human-readable currency name, in English.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_id" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "mpi_mtd_threshold_amount" : {
          "description" : "The month-to-date threshold amount which, when crossed over or under by the account's running month-to-date unbilled usage balance, triggers an email notification of such to the account holder (if client is configured for such notices).\n",
          "type" : "number"
        },
        "mpi_ptd_threshold_amount" : {
          "description" : "The billing-period-to-date threshold amount which, when crossed over or under by the account's running billing-period-to-date unbilled usage balance, triggers an email notification of such to the account holder (if client is configured for such notices).\n",
          "type" : "number"
        },
        "client_mtd_threshold_amount" : {
          "description" : "The month-to-date threshold amount which, when crossed over or under by the account's running month-to-date unbilled usage balance, triggers provisioning event notification of such to the client (if client is configured for receipt of such events).\n",
          "type" : "number"
        },
        "client_ptd_threshold_amount" : {
          "description" : "The billing-period-to-date threshold amount which, when crossed over or under by the account's running billing-period-to-date unbilled usage balance, triggers provisioning event notification of such to the client (if client is configured for receipt of such events).\n",
          "type" : "number"
        },
        "mtd_balance_amount" : {
          "description" : "The account's current month-to-date unbilled usage currency value.",
          "type" : "number"
        },
        "ptd_balance_amount" : {
          "description" : "The account's current billing-period-to-date unbilled usage currency value.",
          "type" : "number"
        },
        "mpi_mtd_delta_sign" : {
          "description" : "A symbolic indicator as to whether the value in parameter \"mpi_mtd_delta_amount\" is above, below, or equal to its associated threshold value.\n",
          "type" : "string"
        },
        "mpi_mtd_delta_amount" : {
          "description" : "A symbolic indicator as to whether the value in parameter \"mpi_mtd_delta_amount\" is above, below, or equal to its associated threshold value.\n",
          "type" : "number"
        },
        "mpi_ptd_delta_sign" : {
          "description" : "A symbolic indicator as to whether the value in parameter \"mpi_ptd_delta_amount\" is above, below, or equal to its associated threshold value.\n",
          "type" : "string"
        },
        "mpi_ptd_delta_amount" : {
          "description" : "A symbolic indicator as to whether the value in parameter \"mpi_mtd_delta_amount\" is above, below, or equal to its associated threshold.\n",
          "type" : "number"
        },
        "client_mtd_delta_sign" : {
          "description" : "A symbolic indicator as to whether the value in parameter \"client_mtd_delta_amount\" is above, below, or equal to its associated threshold value.\n",
          "type" : "string"
        },
        "client_mtd_delta_amount" : {
          "description" : "The threshold amount of usage minus the unbilled amount of usage. Used in conjunction with the delta sign, which indicates if the value is above, below, or equal to the client's threshold amount for the month to date.\n",
          "type" : "number"
        },
        "client_ptd_delta_sign" : {
          "description" : "A symbolic indicator as to whether the value in parameter \"client_mtd_delta_amount\" is above, below, or equal to its associated threshold value.\n",
          "type" : "string"
        },
        "client_ptd_delta_amount" : {
          "description" : "The threshold amount of usage minus the unbilled amount of usage. Used in conjunction with the delta sign, which indicates if the value is above, below, or equal to the client's threshold amount for the period to date.\n",
          "type" : "number"
        },
        "unapp_svc_credit_bal_amount" : {
          "description" : "The account's current unapplied usage currency value.\n",
          "type" : "number"
        },
        "unapp_svc_credit_delta_sign" : {
          "description" : "A symbolic indicator as to whether the value in parameter \"unapp_svc_credit_delta_amount\" is above, below, or equal to its initial value.\n",
          "type" : "string"
        },
        "unapp_svc_credit_delta_amount" : {
          "description" : "The amount of usage minus the amount of the service credit. Used in conjunction with the delta sign, which indicates if the value is above, below, or equal to the amount of the unapplied service credit.\n",
          "type" : "number"
        },
        "unbilled_usage_rec" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UnbilledUsageRec"
          }
        },
        "unit_threshold_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UnitThresholdDetail"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "GenInvoiceMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Textual description of any error that occurred. \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "Aria-assigned unique identifier of the invoice generated. Note that if multiple invoices are generated, this parameter is null and details for all invoices are returned in the out_invoices array.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "out_acct_no" : {
          "description" : "Aria-assigned unique identifier of the account. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_acct_id" : {
          "description" : "The client-defined identifier of the account.\n",
          "type" : "string"
        },
        "out_billing_group_no" : {
          "description" : "Aria-assigned unique identifier of the billing group associated with the invoice generated. Note that if multiple invoices are generated, this parameter will be null and details for all invoices will be returned in the out_invoices array.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_billing_group_id" : {
          "description" : "The client-defined identifier of the billing group associated with the invoice generated. Note that if multiple invoices are generated, this parameter will be null and details for all invoices will be returned in the out_invoices array.\n",
          "type" : "string"
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned in this array. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return. Note that if multiple invoices are generated, parameters in this array will be null and details for all invoices will be returned in the out_invoices array.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        },
        "out_invoices" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OutInvoice"
          }
        }
      }
    },
    "TopItemClas" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "class_no" : {
          "description" : "Inventory item class number",
          "type" : "integer",
          "format" : "int64"
        },
        "class_label" : {
          "description" : "Inventory item class label",
          "type" : "string"
        },
        "class_description" : {
          "description" : "Inventory item class description",
          "type" : "string"
        },
        "display_ind" : {
          "description" : "Boolean value indicating if the item is displayable.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CreateAdvancedServiceCreditMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetUsageSummaryByTypeMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "start_date" : {
          "description" : "The start-date of the given date range",
          "type" : "string"
        },
        "start_time" : {
          "description" : "The start-time of the given time range",
          "type" : "string"
        },
        "end_date" : {
          "description" : "The end-date of the given date range",
          "type" : "string"
        },
        "end_time" : {
          "description" : "The end-time of the given time range",
          "type" : "string"
        },
        "usage_summary_recs" : {
          "description" : "Usage summary records of the account (and optional specified usage type) for given date range\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageSummaryRec"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "RemovePlanUnit" : {
      "type" : "object",
      "description" : "Array of plan units associated with the account",
      "properties" : {
        "plan_unit_inst_no" : {
          "description" : "The unique identifier of the plan unit instance to be removed.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_unit_inst_id" : {
          "description" : "The client-defined identifier of the plan unit instance to be removed.",
          "type" : "string"
        }
      }
    },
    "RefundDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "refund_transaction_id" : {
          "description" : "The Aria-generated transaction ID for this refund",
          "type" : "integer",
          "format" : "int64"
        },
        "refund_amount" : {
          "description" : "The monetary amount of the refund.",
          "type" : "number"
        },
        "create_date" : {
          "description" : "The date the refund was created.",
          "type" : "string"
        },
        "create_user" : {
          "description" : "The user responsible for creating the refund.",
          "type" : "string"
        },
        "reason_code" : {
          "description" : "The refund reason code.",
          "type" : "integer",
          "format" : "int64"
        },
        "reason_label" : {
          "description" : "The human-readable refund reason name.",
          "type" : "string"
        },
        "reason_description" : {
          "description" : "The human-readable refund reason description.",
          "type" : "string"
        },
        "ref_payment_transaction_id" : {
          "description" : "Transaction ID for the refund payment.",
          "type" : "integer",
          "format" : "int64"
        },
        "ref_payment_transaction_type" : {
          "description" : "The type of the refund payment transaction.",
          "type" : "integer",
          "format" : "int64"
        },
        "ref_payment_transaction_desc" : {
          "description" : "Description of the refund payment transaction.",
          "type" : "string"
        },
        "ref_payment_amount" : {
          "description" : "The monetary amount of the refund.",
          "type" : "number"
        },
        "ref_payment_ref_code" : {
          "description" : "The monetary amount of the refund.",
          "type" : "string"
        },
        "bill_seq_no" : {
          "description" : "The Aria-assigned bill sequence number.",
          "type" : "integer",
          "format" : "int64"
        },
        "pay_method_id" : {
          "description" : "The method of payment originally used.",
          "type" : "integer",
          "format" : "int64"
        },
        "pay_method_name" : {
          "description" : "The human-readable name of this payment method",
          "type" : "string"
        },
        "cc_id" : {
          "description" : "A numeric code indicating the type of credit card.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_type" : {
          "description" : "The type of credit card used for the original payment.",
          "type" : "string"
        },
        "payment_src_suffix" : {
          "description" : "For electronic payment transactions only, the last 4 digits of the account (e.g. the last 4 digits if the credit card used).\n",
          "type" : "string"
        },
        "refund_check_num" : {
          "description" : "Client's check number for the refund.",
          "type" : "string"
        },
        "is_voided_ind" : {
          "description" : "Indicates if the refund has been voided (true) or applied (false).",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "invoice_reversals" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceReversal"
          }
        }
      }
    },
    "GetTopLevelItemClassMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_top_level_item_class_m" ],
          "default" : "get_top_level_item_class_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "SubscribeEventClassMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "subscribe_event_class_m" ],
          "default" : "subscribe_event_class_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "class_no" : {
          "description" : "The class to assign to the client",
          "type" : "integer",
          "format" : "int64"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "class_no" ]
    },
    "AmountThresholdDestType" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "threshold_dest_type" : {
          "description" : "Returns a string representing the threshold destination type either Stack S or Client C.\n",
          "type" : "string"
        },
        "amount_threshold_balance_types" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AmountThresholdBalanceType"
          }
        }
      }
    },
    "CreateAcctBillingGroupMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor\n",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "The Aria-assigned unique identifier for billing group on this account.",
          "type" : "string"
        },
        "stmt_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the statement contact associated with a billing group on the account.",
          "type" : "string"
        },
        "billing_contact_info" : {
          "description" : "Array",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingContactInfo"
          }
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        }
      }
    },
    "ChildPlan" : {
      "type" : "object",
      "description" : "The plans which are mapped as children of this plan",
      "properties" : {
        "plan_no" : {
          "description" : "Aria generated unique ID of the plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client-defined unique ID for the plan.",
          "type" : "string"
        },
        "is_mandatory" : {
          "description" : "Determines if this child plan must be purchased along with the parent plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "is_default" : {
          "description" : "Determines if this child plan must be added to the purchase plan list in the UI.",
          "type" : "string"
        },
        "min_units" : {
          "description" : "Determines the minimum number of units that must be purchased.",
          "type" : "integer",
          "format" : "int64"
        },
        "max_units" : {
          "description" : "Determines the maximum number of units that can be purchased.",
          "type" : "string"
        },
        "enforcement_level" : {
          "description" : "Determines the level at which the minimum and maximum values are enforced.",
          "type" : "string"
        }
      }
    },
    "GetItemsByClassMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_items_by_class_m" ],
          "default" : "get_items_by_class_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "filter_class_no" : {
          "description" : "An item class number to use to filter results.",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "filter_class_no" ]
    },
    "MasterPlanInstanceFilter" : {
      "type" : "object",
      "description" : "This array will support up to 10 individual inputs.",
      "properties" : {
        "master_plan_instance_no" : {
          "description" : "The Aria-assigned unique identifier of the master plan that will be used to filter the results for this API. Results will only display for plans related to the master plan instance provided.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "The client-defined unique identifier of the master plan that will be used to filter the results for this API. Results will only display for plans related to the master plan instance provided.\n",
          "type" : "string"
        }
      }
    },
    "SetAcctNotifyTmpltGrpMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "set_acct_notify_tmplt_grp_m" ],
          "default" : "set_acct_notify_tmplt_grp_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_user_id" : {
          "description" : "Client (or user)-assigned unique account identifier. If either acct_no or client_acct_id is valued, this field must be blank.\n",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-assigned identifier for the account. If either acct_no or acct_user_id is valued, this field must be blank.\n",
          "type" : "string",
          "maxLength" : 50
        },
        "notification_template_group_id" : {
          "description" : "Client-defined, case-insensitive unique ID of up to 50 characters in length (with no \"whitespace\") to designate a notification template group.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "notification_template_group_id" ]
    },
    "GetInvoiceDetailsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "invoice_line_details" : {
          "description" : "Array of invoice line items for this invoice.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceLineDetail"
          }
        },
        "tax_details" : {
          "description" : "Array of Tax details for this invoice.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TaxDetail"
          }
        },
        "is_pending_ind" : {
          "description" : "Whether or not this invoice is pending",
          "type" : "string"
        },
        "custom_status_label" : {
          "description" : "Value allowed for Client specific custom invoice status that can be edited at the invoice or pending invoice level.\n",
          "type" : "string"
        },
        "custom_status_desc" : {
          "description" : "Description of the Client specific custom invoice status.\n",
          "type" : "string"
        },
        "client_notes" : {
          "description" : "Client notes that are free text.\n",
          "type" : "string"
        },
        "invoice_type_cd" : {
          "description" : "This field identifies the type of the invoice generated",
          "type" : "string"
        },
        "from_date" : {
          "description" : "Invoice start date.\n",
          "type" : "string"
        },
        "to_date" : {
          "description" : "Invoice end date.\n",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "Aria-assigned billing group number",
          "type" : "string"
        },
        "client_billing_group_no" : {
          "description" : "client assagined billing group number",
          "type" : "string"
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "string"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        },
        "rb_flag" : {
          "description" : "Indicates whether the invoice is a rebill or not. 1 = rebill, 0 or null = not a rebill.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rb_status" : {
          "description" : "Indicates whether the invoice was rebilled or not. Values - \"True\" (it was rebilled) or \"False\" (it was not  rebilled).\n",
          "type" : "string"
        },
        "orig_invoice_no" : {
          "description" : "Original invoice number (for a rebilled invoice). The orig invoice number is the predecessor invoice, which could be a rebill.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "SetRegUssConfigParamsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "CreditId" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "credit_ids" : {
          "description" : "Array of credit ids.\n",
          "type" : "string"
        }
      },
      "required" : [ "credit_ids" ]
    },
    "NotificationLevel" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "level_no" : {
          "description" : "Indicates the level no of the threshold value",
          "type" : "integer",
          "format" : "int64"
        },
        "notification_percentage" : {
          "description" : "No units for the threshold level",
          "type" : "number"
        }
      }
    },
    "GetClientPlansAllMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_client_plans_all_m" ],
          "default" : "get_client_plans_all_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "plan_no" : {
          "description" : "Unique Aria-assigned plan number. Provide a value for this field to filter the list of plans returned.",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_no" : {
          "description" : "Unique Aria-assigned account number. Provide a value for this field to filter the list of plans returned.",
          "type" : "integer",
          "format" : "int64"
        },
        "promo_code" : {
          "description" : "Provide a value for this field to filter the list of plans return. This code is provided during registration and generally provides access to a custom set of reduced-rate plans.",
          "type" : "string"
        },
        "parent_plan_no" : {
          "description" : "Unique Aria-assigned plan number. Provide a value for this field to filter the list of plans returned.",
          "type" : "integer",
          "format" : "int64"
        },
        "supp_field_names" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppFieldName"
          }
        },
        "supp_field_values" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppFieldValue"
          }
        },
        "include_all_rate_schedules" : {
          "description" : "If set to \"true\", will retrieve all of the rates and rate schedules associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "include_plan_hierarchy" : {
          "description" : "You can use this input parameter to specify whether to retrieve the child plans associated with the returned plans or with the plan_no or parent_plan_no that you specified. If you set the include_plan_hierarchy parameter to true , then all of the child plans down to the bottom level of your plan hierarchy will be returned.\n",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for which to query available child plans",
          "type" : "string"
        },
        "client_parent_plan_id" : {
          "description" : "Client-defined unique parent Plan ID",
          "type" : "string"
        },
        "retrieve_bundled_nso" : {
          "description" : "If set to \"true\", will retrieve all of the bundled inventory items associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "retrieve_included_nso" : {
          "description" : "If set to \"true\", will retrieve all of the inventory items associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "include_translations" : {
          "description" : "Setting this flag as True will fetch the translated fields in all the locales defined. If not passed it defaults to False.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetUnappliedCreditsPaymentsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "unapplied_payments" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UnappliedPayment"
          }
        }
      }
    },
    "BulkRecordUsageMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "bulk_record_usage_m" ],
          "default" : "bulk_record_usage_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "usage_recs" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageRec"
          }
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "usage_recs" ]
    },
    "GetItemsBySuppFieldMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "items_by_supp_field" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ItemsBySuppField"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "AdvanceVirtualDatetimeMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "virtual_date" : {
          "description" : "Current virtual system date for the given client, in format yyyy-mm-dd (after application of input parameter \"offset_hours\").\n",
          "type" : "string"
        },
        "virtual_time" : {
          "description" : "Current virtual system time for the given client, in format hh24:mi:ss (after application of input parameter \"offset_hours\").\n",
          "type" : "string"
        },
        "system_date" : {
          "description" : "Current actual system date,in format yyyy-mm-dd.",
          "type" : "string"
        },
        "system_time" : {
          "description" : "Current actual system time,in format hh24:mi:ss.",
          "type" : "string"
        },
        "current_offset_hours" : {
          "description" : "Difference, in truncated hours, between the client's current virtual date/time and the actual system date/time. Is always zero or a positive integer in non-production systems, and is always  zero in production systems after application of input parameter \"offset_hours\").\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CreateCmMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "create_cm_m" ],
          "default" : "create_cm_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "cm_reason_cd" : {
          "description" : "The reason for providing the credit memo.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_comments" : {
          "description" : "Explanatory text for the credit memo.",
          "type" : "string"
        },
        "customer_facing_comments" : {
          "description" : "Customer facing text for the credit memo.",
          "type" : "string"
        },
        "orig_invoice_no" : {
          "description" : "Original invoice number reference.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_ref_type" : {
          "description" : "CM type.Invoice-based=null,General=1, price-change=2, cancellation-=3",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_line_items" : {
          "description" : "Array of credit memo lines.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CmLineItem"
          }
        },
        "do_write" : {
          "description" : "Boolean indicator informing Aria whether or not to actually perform the requested operation. If 'false' is passed in this field Aria will, if applicable, calculate any potential effects stemming from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that wish to present the user with a 'confirmation page' informing of the would-be effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "cm_comments", "cm_line_items" ]
    },
    "Schedule" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "schedule_no" : {
          "description" : "The ID of this rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "schedule_name" : {
          "description" : "Name for the rate schedule",
          "type" : "string"
        },
        "client_rate_schedule_id" : {
          "description" : "Client-defined unique identifier",
          "type" : "string"
        },
        "currency_cd" : {
          "description" : "Currency for the schedule",
          "type" : "string"
        },
        "is_default" : {
          "description" : "This flag denotes if this rate schedule is the default one for this plan. One and only one rate schedule can be marked as default. The value of 1 is defaulted for the first rate schedule for a given currency denoting it is the default. For subsequent rate schedules, the default is set to 0.\n",
          "type" : "string"
        },
        "tax_inclusive_ind" : {
          "description" : "This flag denotes if a rate is inclusive of taxes. Valid values are: 1 -  Means tax inclusive rates and 0 (default) - Means tax exclusive rates.\n",
          "type" : "string"
        },
        "tier" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tier"
          }
        }
      }
    },
    "GetPmtUuidMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "uuid" : {
          "description" : "UUID generated for Credit Card number.\n",
          "type" : "string"
        }
      }
    },
    "SuppFieldName" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "supp_field_names" : {
          "description" : "An array of client-defined product field names. Provide a value for this field to filter the list of plans returned.",
          "type" : "string"
        }
      }
    },
    "CancelUnappliedServiceCreditsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "cancel_unapplied_service_credits_m" ],
          "default" : "cancel_unapplied_service_credits_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "credit_ids" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CreditId"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "credit_ids" ]
    },
    "SubscribeEventsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "subscribe_events_m" ],
          "default" : "subscribe_events_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "event_list" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EventList"
          }
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "event_list" ]
    },
    "QueuedPlanInstanceDetail" : {
      "type" : "object",
      "description" : "An array of plans queued for the specified account number\\n",
      "properties" : {
        "original_plan" : {
          "description" : "The \"from\" plan name, which will be removed when this change takes effect",
          "type" : "string"
        },
        "original_plan_no" : {
          "description" : "The \"from\" plan number, which will be removed when this change takes effect",
          "type" : "integer",
          "format" : "int64"
        },
        "new_plan" : {
          "description" : "The \"to\" plan name, which will be added when this change takes effect",
          "type" : "string"
        },
        "new_plan_no" : {
          "description" : "The \"to\" plan number, which will be added when this change takes effect",
          "type" : "integer",
          "format" : "int64"
        },
        "change_date" : {
          "description" : "The date on which this change will happen",
          "type" : "string"
        },
        "new_rate_schedule_no" : {
          "description" : "The new rate schedule which will be assigned",
          "type" : "integer",
          "format" : "int64"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "new_plan_units" : {
          "description" : "An array of new plan units associated with the list of master or supplemental plans array returned in new_plan_no\n",
          "type" : "number"
        },
        "new_plan_type" : {
          "description" : "An array of plan type valued as M for Master plan or S for Supplemental plan associated with the list of new_plan_no\n",
          "type" : "string"
        },
        "client_original_plan_id" : {
          "description" : "The \"from\" client-defined plan ID, which will be removed when this change takes effect",
          "type" : "string"
        },
        "client_new_plan_id" : {
          "description" : "The \"to\" client-defined plan ID, which will be added when this change takes effect",
          "type" : "string"
        },
        "client_new_rate_schedule_id" : {
          "description" : "The client-defined new rate schedule which will be assigned",
          "type" : "string"
        },
        "current_rate_schedule_no" : {
          "description" : "'The current rate schedule number for the plan used by the specified account number.'\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_current_rate_schedule_id" : {
          "description" : "'The current client-defined rate schedule ID for the plan used by the specified account number.'\n",
          "type" : "string"
        },
        "custom_rate" : {
          "description" : "An array of custom rates for the specified account number\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomRate"
          }
        }
      }
    },
    "InvoiceLineItem" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "line_no" : {
          "description" : "The line number on the initial invoice",
          "type" : "integer",
          "format" : "int64"
        },
        "line_type" : {
          "description" : "Specifies the type of charge or credit associated with this line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no" : {
          "description" : "The unique ID for the service this line represents",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name" : {
          "description" : "The name of the service this line represents",
          "type" : "string"
        },
        "line_units" : {
          "description" : "The number of units of the item or plan on this line",
          "type" : "number"
        },
        "rate_per_unit" : {
          "description" : "The charge per unit of the item or plan on this line",
          "type" : "number"
        },
        "line_amount" : {
          "description" : "Specifies the total charge associated with this line item.",
          "type" : "number"
        },
        "line_base_units" : {
          "description" : "Specifies the full, non-prorated number of units of the service code.",
          "type" : "number"
        },
        "proration_factor" : {
          "description" : "Specifies the percentage of the line_base_units billed.",
          "type" : "number"
        },
        "description" : {
          "description" : "The long description of this line, used when printing or otherwise displaying invoices",
          "type" : "string"
        },
        "date_range_start" : {
          "description" : "The starting date range for the item or plan on this line",
          "type" : "string"
        },
        "date_range_end" : {
          "description" : "If any, the ending date range for the item or plan on this line.",
          "type" : "string"
        },
        "credit_coupon_code" : {
          "description" : "Specifies the coupon code applied to the invoice.",
          "type" : "string"
        },
        "plan_no" : {
          "description" : "The unique ID plan this line represents",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The name of the plan this line represents",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "Client-defined unique service identifier.\n",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "Client-defined unique Plan Identifier",
          "type" : "string"
        }
      }
    },
    "DeleteRegUssParamsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "InvoiceItemDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "invoice_line_no" : {
          "description" : "The line number on the invoice",
          "type" : "integer",
          "format" : "int64"
        },
        "line_type" : {
          "description" : "Specifies the type of charge or credit associated with this line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_no" : {
          "description" : "The unique ID plan this line represents.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "The client-defined unique ID for plan this line represents.",
          "type" : "string"
        },
        "plan_name" : {
          "description" : "the name of the service plan this line represents.",
          "type" : "string"
        },
        "service_no" : {
          "description" : "The unique ID for the service this line represents. \n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "The client-defined unique ID for the service this line represents.",
          "type" : "string"
        },
        "service_name" : {
          "description" : "The name of the service this line represents",
          "type" : "string"
        },
        "service_is_tax_ind" : {
          "description" : "Whether or not this line item represents a tax charge.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the plan instance this line represents.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the plan instance this line represents.",
          "type" : "string"
        },
        "line_units" : {
          "description" : "Number of units for the specified invoice line.",
          "type" : "number"
        },
        "rate_per_unit" : {
          "description" : "The monetary rate per unit of service.",
          "type" : "number"
        },
        "line_amount" : {
          "description" : "The total line amount for this invoice line.",
          "type" : "number"
        },
        "line_base_units" : {
          "description" : "Specifies the full, non-prorated number of units of the service code.",
          "type" : "number"
        },
        "proration_factor" : {
          "description" : "Specifies the percentage of the line_base_units billed.",
          "type" : "number"
        },
        "line_description" : {
          "description" : "Specifies the description of this line item",
          "type" : "string"
        },
        "start_date_range" : {
          "description" : "Specifies the start date of the date range covered by this line item.",
          "type" : "string"
        },
        "end_date_range" : {
          "description" : "Specifies the end date of the date range covered by this line item.",
          "type" : "string"
        },
        "usage_type_no" : {
          "description" : "The usage type code associated with this line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type_cd" : {
          "description" : "The usage type code of the usage type specified.",
          "type" : "string"
        },
        "service_coa_id" : {
          "description" : "The Chart of Accounts ID for the service this line represents.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_coa_code" : {
          "description" : "The client-defined Chart of Accounts code for the service this line represents",
          "type" : "string"
        },
        "ref_charge_line_no" : {
          "description" : "The reference charge line number to indicate the item to which the discount applies.",
          "type" : "integer",
          "format" : "int64"
        },
        "nso_order_no" : {
          "description" : "The unique identifier for an order that is created for bundled NSOs.",
          "type" : "integer",
          "format" : "int64"
        },
        "nso_order_status_label" : {
          "description" : "Status label for this order",
          "type" : "string"
        },
        "client_sku" : {
          "description" : "",
          "type" : "string"
        },
        "item_no" : {
          "description" : "The inventory item number for this line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_id" : {
          "description" : "The client-defined item ID for this line item.",
          "type" : "string"
        },
        "credit_coupon_code" : {
          "description" : "Specifies the coupon code applied to the invoice.",
          "type" : "string"
        },
        "credit_reason_code_description" : {
          "description" : "The long description of the credit reason code which was applied, if any.",
          "type" : "string"
        },
        "csr_comments" : {
          "description" : "The manually-entered CSR comments, if any",
          "type" : "string"
        },
        "adv_billing_period_total_days" : {
          "description" : "Total days of period in this invoice",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_schedule_no" : {
          "description" : "Aria-assigned unique rate schedule number",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_schedule_tier_no" : {
          "description" : "Sequential number in the rate schedule for determining tiers",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_from_address_no" : {
          "description" : "Address sent as the bill-from address to the tax engine for tax calculations. Depending on the taxation configuration, this parameter may return the Aria-assigned unique identifier of the service location for the invoice line item. Note that service locations can be associated with a service for a given plan instance on an account, with an item (NSO) purchased as part of a one-time order, or with a service as defined in the product catalog.",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_from_address_no" : {
          "description" : "Address sent as the ship-from address to the tax engine for tax calculations. Depending on the taxation configuration, this parameter may return the Aria-assigned unique identifier of the service location for the invoice line item. Note that service locations can be associated with a service for a given plan instance on an account, with an item (NSO) purchased as part of a one-time order, or with a service as defined in the product catalog.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_to_address_no" : {
          "description" : "Address sent as the bill-to address to the tax engine for tax calculations. This parameter will return the Aria-assigned unique identifier of the contact on the account used as the bill-to address for the invoice line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_to_address_no" : {
          "description" : "Address sent as the ship-to address to the tax engine for tax calculations. This parameter will return the Aria-assigned unique identifier of the contact on the account used as the ship-to address for the invoice line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "proration_text" : {
          "description" : "Specifies the prorated days in total days.",
          "type" : "string"
        },
        "proration_remaining_days" : {
          "description" : "Prorated days of period in this invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "proration_description" : {
          "description" : "Prorated invoice description.",
          "type" : "string"
        }
      }
    },
    "CancelInstanceContractMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "CancelOrderMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "cancel_order_m" ],
          "default" : "cancel_order_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "order_no" : {
          "description" : "The unique identifier for an order in the context of an client_no and account_no.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "order_no" ]
    },
    "VoidCreditMemoMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "void_credit_memo_m" ],
          "default" : "void_credit_memo_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "cm_no" : {
          "description" : "The Aria generated credit memo number to void.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_cm_seq_id" : {
          "description" : "Client-define credit memo sequence ID.",
          "type" : "string"
        },
        "comments" : {
          "description" : "Explanatory text for the void.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "SetRegUssConfigParamsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "set_reg_uss_config_params_m" ],
          "default" : "set_reg_uss_config_params_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "set_name" : {
          "description" : "Client-defined identifier for this set of global application configuration parameters.\n",
          "type" : "string"
        },
        "in_reg_uss_config_params" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InRegUssConfigParam"
          }
        },
        "set_description" : {
          "description" : "The description to be used for a newly-created set",
          "type" : "string"
        },
        "set_type_no" : {
          "description" : "If creating a new set, the set type number, for determining if this is reg, USS, etc.",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "set_name", "in_reg_uss_config_params" ]
    },
    "ContractPlanInstance" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined identifier for the master plan instance.",
          "type" : "string"
        },
        "rollover_plan_no" : {
          "description" : "Note that if the target rollover plan has a surcharge that has already been associated with this account, when the plan rollover occurs at the completion of this contract, the surcharge for this plan may be ignored (depending on the client parameter determining whether duplicate surcharges are permitted). The surcharge at the account level will remain in effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_client_plan_id" : {
          "description" : "Note that if the target rollover plan has a surcharge that has already been associated with this account, when the plan rollover occurs at the completion of this contract, the surcharge for this plan may be ignored (depending on the client parameter determining whether duplicate surcharges are permitted). The surcharge at the account level will remain in effect.\n",
          "type" : "string"
        },
        "rollover_rate_sched_no" : {
          "description" : "Pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_client_rate_sched_id" : {
          "description" : "Client-defined ID of the pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract.\n",
          "type" : "string"
        }
      }
    },
    "DeleteRegUssConfigParamsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "delete_reg_uss_config_params_m" ],
          "default" : "delete_reg_uss_config_params_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "set_name" : {
          "description" : "Client-defined identifier for this set of global application configuration parameters.\n",
          "type" : "string"
        },
        "param_names" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ParamName"
          }
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "set_name", "param_names" ]
    },
    "CancelAcctUniversalContractMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "CreateOrderMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "order_no" : {
          "description" : "The unique identifier for an order in the context of an client_no and account_no.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "invoicing_error_code" : {
          "description" : "The error code generated by Aria when Aria attempted to generate a invoice",
          "type" : "string"
        },
        "invoicing_error_msg" : {
          "description" : "The text message associated with 'invoicing_error_code'",
          "type" : "string"
        },
        "statement_error_cd" : {
          "description" : "Error code produced when statement generation has failed.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_error_msg" : {
          "description" : "The text message associated with 'statement_error_code'",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor\n",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "total_charges_before_tax" : {
          "description" : "Total charges on this invoice before taxes are applied",
          "type" : "number"
        },
        "total_tax_charges" : {
          "description" : "Total amount of taxes charged",
          "type" : "number"
        },
        "total_charges_after_tax" : {
          "description" : "Subtotal combining the total pre-tax charges and the total taxes charged",
          "type" : "number"
        },
        "total_credit" : {
          "description" : "Sum of all the credits on the invoice",
          "type" : "number"
        },
        "cart_invoice_line_items" : {
          "description" : "All of the items on this order. If do_write was FALSE, these are the line items which would be on the eventual invoice",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CartInvoiceLineItem"
          }
        },
        "tax_details" : {
          "description" : "Array of Tax details for this invoice.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TaxDetail"
          }
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned here. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        }
      }
    },
    "FailedRecord" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "usage_record_no" : {
          "description" : "The system-defined usage record ID of the usage which was excluded",
          "type" : "integer",
          "format" : "int64"
        },
        "client_record_id" : {
          "description" : "The client-defined usage record ID of the usage which was excluded, if available",
          "type" : "string"
        },
        "record_error_code" : {
          "description" : "For each record, an error code may be returned to indicate the usage was not properly excluded",
          "type" : "integer",
          "format" : "int64"
        },
        "record_error_msg" : {
          "description" : "For each record, an error message may be returned to indicate the usage was not properly excluded",
          "type" : "string"
        }
      }
    },
    "GetInvoiceDetailsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_invoice_details_m" ],
          "default" : "get_invoice_details_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number. The line items in the response are filtered by the master plan instance number or client master plan instance ID\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Specifies the language in which the information is returned.",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "invoice_no" ]
    },
    "AcctPaymentMethod" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "payment_method_name" : {
          "description" : "Payment method name.",
          "type" : "string"
        },
        "client_payment_method_id" : {
          "description" : "Client-defined unique identifier for the payment method.",
          "type" : "string"
        },
        "payment_method_description" : {
          "description" : "Payment method description",
          "type" : "string"
        },
        "payment_method_idx" : {
          "description" : "For non-persistent referencing of a payment method within the API request to be used as the primary or backup payment method on the billing group.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_method_type" : {
          "description" : "This is the method_id corresponding to a payment method such as credit card, Electronic Check, Pre-Paid, Net Terms, etc.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_num" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_acct_num" : {
          "description" : "The bank account number.\n",
          "type" : "string"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_mi" : {
          "description" : "Middle initial of the billing contact",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_postal_cd" : {
          "description" : "Postal code for the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_ext" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_ext" : {
          "description" : "This is the work phone extension for the billing contact work phone.\n",
          "type" : "string"
        },
        "bill_fax" : {
          "description" : "Fax number of the billing contact.",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_birthdate" : {
          "description" : "Birthdate of the billing contact.\n",
          "type" : "string"
        },
        "bill_contact_idx" : {
          "description" : "For non-persistent referencing of a contact in the contacts array within the API request. If an idx value is specified, inputs provided for other billing contact fields will be ignored..",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact on this account to be used as the billing contact for the payment method. If bill_contact_no is included in the API request, all other billing contact parameters are ignored.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetTopLevelItemClassMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "top_item_class" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TopItemClas"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "AllItemImage" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "image_class_name" : {
          "description" : "The category of the image, such as thumbnail or full",
          "type" : "string"
        },
        "image_class_no" : {
          "description" : "The unique ID for the image class",
          "type" : "integer",
          "format" : "int64"
        },
        "image_class_seq_no" : {
          "description" : "The sequence number of this image within its class",
          "type" : "integer",
          "format" : "int64"
        },
        "image_url" : {
          "description" : "The actual URL for this image",
          "type" : "string"
        },
        "image_text" : {
          "description" : "The alt text for the image tag displaying the item image",
          "type" : "string"
        },
        "default_ind" : {
          "description" : "Whether or not this image is the default for that item",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAcctsWithExistingPayMethodMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "accts_with_pay_method" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctsWithPayMethod"
          }
        }
      }
    },
    "Order" : {
      "type" : "object",
      "description" : "An array containing the order record",
      "properties" : {
        "order_no" : {
          "description" : "Unique order number for this order",
          "type" : "integer",
          "format" : "int64"
        },
        "amount" : {
          "description" : "Monetary amount for this order",
          "type" : "number"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "status_label" : {
          "description" : "Status label for this order",
          "type" : "string"
        },
        "plan_instance_no" : {
          "description" : "plan instance no",
          "type" : "string"
        },
        "client_plan_instance_id" : {
          "description" : "Client plan instance id",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "create_date" : {
          "description" : "Date the order was created",
          "type" : "string"
        },
        "update_date" : {
          "description" : "Date the order was modified",
          "type" : "string"
        },
        "comments" : {
          "description" : "Comments for this order",
          "type" : "string"
        },
        "client_order_id" : {
          "description" : "Client assigned ID for this order",
          "type" : "string"
        },
        "transaction_id" : {
          "description" : "Unique transaction ID for this order.",
          "type" : "integer",
          "format" : "int64"
        },
        "order_create_client_receipt_id" : {
          "description" : "When calling create_order, it accepts a client receipt ID.  If the order has such an ID, it is returned here",
          "type" : "string"
        },
        "order_status_client_receipt_id" : {
          "description" : "The API receipt ID associated with the most recent status change on the order",
          "type" : "string"
        },
        "statement_message" : {
          "description" : "Alternate contact details for orders.",
          "type" : "string"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the one-time order.",
          "type" : "string"
        },
        "order_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderItem"
          }
        }
      }
    },
    "GetAcctPlanNotifyMethodMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "list_start_master_file" : {
          "description" : "Indicates whether the account is listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_method_name" : {
          "description" : "The name of the notify method to be used in communicating with the account holder.\n",
          "type" : "string"
        }
      }
    },
    "CreateAcctUniversalContractMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "contract_no" : {
          "description" : "Aria-assigned unique contract identifier",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAcctWriteoffOrDisputesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "writeoff_dispute_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WriteoffDisputeInfo"
          }
        }
      }
    },
    "CartInvLineItem" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "line_no" : {
          "description" : "The invoice line number associated with the current record.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no" : {
          "description" : "Aria-assigned unique service identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name" : {
          "description" : "The name corresponding to this line item's service code.",
          "type" : "string"
        },
        "service_is_tax_ind" : {
          "description" : "A boolean value indicating the service is actually a tax. (true/1=yes, false/0=no)\n",
          "type" : "integer",
          "format" : "int64"
        },
        "line_units" : {
          "description" : "Number of units for the specified invoice line.",
          "type" : "number"
        },
        "rate_per_unit" : {
          "description" : "The monetary rate per unit of service.",
          "type" : "number"
        },
        "line_amount" : {
          "description" : "The total line amount for this invoice line.",
          "type" : "number"
        },
        "description" : {
          "description" : "Description of the invoice line item.",
          "type" : "string"
        },
        "date_range_start" : {
          "description" : "The starting date range for the item or plan on this line",
          "type" : "string"
        },
        "date_range_end" : {
          "description" : "If any, the ending date range for the item or plan on this line.",
          "type" : "string"
        },
        "usage_type_no" : {
          "description" : "The usage type of the usage units specified.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The plan number associated with the usage asserted in this invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The name of the plan for the specified plan_no.",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "Client-defined service identifier.",
          "type" : "string"
        },
        "usage_type_cd" : {
          "description" : "The usage type code of the usage type specified.",
          "type" : "string"
        },
        "client_plan_instance_id" : {
          "description" : "Client-defined Plan ID associated with the usage asserted in this invoice.",
          "type" : "string"
        },
        "ref_charge_line_no" : {
          "description" : "The reference charge line number to indicate the item to which the discount applies.",
          "type" : "integer",
          "format" : "int64"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the plan instance.",
          "type" : "string"
        },
        "bill_from_address_no" : {
          "description" : "Address sent as the bill-from address to the tax engine for tax calculations. Depending on the taxation configuration, this parameter may return the Aria-assigned unique identifier of the service location for the invoice line item. Note that service locations can be associated with a service for a given plan instance on an account, with an item (NSO) purchased as part of a one-time order, or with a service as defined in the product catalog.",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_from_address_no" : {
          "description" : "Address sent as the ship-from address to the tax engine for tax calculations. Depending on the taxation configuration, this parameter may return the Aria-assigned unique identifier of the service location for the invoice line item. Note that service locations can be associated with a service for a given plan instance on an account, with an item (NSO) purchased as part of a one-time order, or with a service as defined in the product catalog.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_to_address_no" : {
          "description" : "Address sent as the bill-to address to the tax engine for tax calculations. This parameter will return the Aria-assigned unique identifier of the contact on the account used as the bill-to address for the invoice line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_to_address_no" : {
          "description" : "Address sent as the ship-to address to the tax engine for tax calculations. This parameter will return the Aria-assigned unique identifier of the contact on the account used as the ship-to address for the invoice line item.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetInstanceContractMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_instance_contract_m" ],
          "default" : "get_instance_contract_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "contract_no" : {
          "description" : "Aria-assigned unique contract identifier.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_contract_id" : {
          "description" : "Client assigned unique contract identifier..",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Specifies the language in which the information is returned.",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "UpdateAcctPlanStatusMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetUnappliedServiceCreditsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "unapplied_service_credits_details" : {
          "description" : "A multidimensional array of service credit records for the given account\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UnappliedServiceCreditsDetail"
          }
        }
      }
    },
    "GetAllAcctContractsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "all_acct_contracts_m" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllAcctContractsM"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "string"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "PlanInstanceField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_field_name" : {
          "description" : "Required based on the definition of each plan instance field associated with the new plan.",
          "type" : "string"
        },
        "plan_instance_field_value" : {
          "description" : "Required based on the definition of each plan instance field associated with the new plan.",
          "type" : "string"
        }
      }
    },
    "EligiblePlanInstance" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_no" : {
          "description" : "Plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_service_no" : {
          "description" : "If used must be used in conjunction with field plan_instance_no. If the credit(s) to be created are to be applied as offsets to ANY charge incurred by the account holder, leave both of these fields empty. If the credit(s) to be created are to be applied as offsets to a specific type of charge, then that specific plan_instance_no and service_no combination referencing that charge are to be supplied in these two fields.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ApplyCouponToAcctMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "user_success_msg" : {
          "description" : "The message to display to account the holder upon successful application of the coupon code they've provided.\n",
          "type" : "string"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "DeleteAcctCouponMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetPendingInvoiceNoMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_pending_invoice_no_m" ],
          "default" : "get_pending_invoice_no_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "UpdateAcctCustomRate" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "custom_rate_plan_instance_no" : {
          "description" : "unique identifier for Master plan instance",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_service_no" : {
          "description" : "The unique identifier for the service no, relative to the value provided in corresponding \"custom_rate_plan_no\", to which this custom rate is to be applied for this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_seq_no" : {
          "description" : "The rate tier number, relative to the values provided in corresponding \"custom_rate_plan_no\" and \"custom_rate_service_no\", to which this custom rate is to be applied for this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_from_unit" : {
          "description" : "The unit starting point, relative to the values provided in corresponding \"custom_rate_plan_no\", \"custom_rate_service_no\" and \"custom_rate_seq_no\", to which this custom rate is to be applied for this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_to_unit" : {
          "description" : "The unit ending point, relative to the values provided in corresponding \"custom_rate_plan_no\", \"custom_rate_service_no\" and \"custom_rate_seq_no\", to which this custom rate is to be applied for this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_per_unit" : {
          "description" : "The custom rate per unit, relative to the values provided in corresponding \"custom_rate_plan_no\", \"custom_rate_service_no\" and \"custom_rate_seq_no\", to be applied for this account.\n",
          "type" : "number"
        },
        "custom_rate_client_service_id" : {
          "description" : "The unique identifier by client the service ID to determine which custom rate is to be applied for this account.\n",
          "type" : "string"
        }
      }
    },
    "GetAcctContactsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "account_contact" : {
          "description" : "Account contact",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountContact"
          }
        },
        "billing_contacts" : {
          "description" : "Array of billing contacts",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingContact"
          }
        },
        "backup_contacts" : {
          "description" : "Array of backup contacts",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BackupContact"
          }
        },
        "statement_contacts" : {
          "description" : "Array of statement contacts",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StatementContact"
          }
        },
        "other_contacts" : {
          "description" : "List of contacts saved on the account not currently used as an account contact, billing contact, or statement contact.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OtherContact"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetCurrentSystemVersionMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_current_system_version_m" ],
          "default" : "get_current_system_version_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "QueuedChange" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "queue_id" : {
          "description" : "Unique identifier associated with a specific queued plan change.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the plan instance.\n",
          "type" : "string"
        },
        "edit_queued_change_status_cd" : {
          "description" : "The status of the modification submitted for each queued plan change.",
          "type" : "integer",
          "format" : "int64"
        },
        "edit_queued_change_status_label" : {
          "description" : "The status of the modification submitted for each queued plan change.",
          "type" : "string"
        }
      }
    },
    "GetRefundablePaymentsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_refundable_payments_m" ],
          "default" : "get_refundable_payments_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "GetAllClientReceiptIdsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_all_client_receipt_ids_m" ],
          "default" : "get_all_client_receipt_ids_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "start_date_range" : {
          "description" : "The start-date of the given date range.",
          "type" : "string"
        },
        "end_date_range" : {
          "description" : "The end-date of the given date range",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "MasterPlanService" : {
      "type" : "object",
      "description" : "List of services associated with the master plan being assigned on the account",
      "properties" : {
        "service_no" : {
          "description" : "Multidimensional array of services for this plan\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "Multidimensional array of client-defined service ID for this plan\n",
          "type" : "string"
        },
        "svc_location_no" : {
          "description" : "Aria-assigned unique location identifier\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_svc_location_id" : {
          "description" : "The client-defined unique identifier for the origin location for the service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no takes precedence.",
          "type" : "string"
        },
        "dest_contact_idx" : {
          "description" : "The Aria-assigned address sequence number",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "KillSessionMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "kill_session_m" ],
          "default" : "kill_session_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "session_id" : {
          "description" : "Client-assigned identifier for the application session.",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "session_id" ]
    },
    "GetStatementContentMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "statement_content" : {
          "description" : "The contents of the statement",
          "type" : "string"
        },
        "mime_type" : {
          "description" : "MIME type for statement encoding.",
          "type" : "string"
        }
      }
    },
    "Acct" : {
      "type" : "object",
      "description" : "Defines all information about the top-level account, including contact information, assigned client plans, and payment configuration\\n",
      "properties" : {
        "acct" : {
          "description" : "Defines the child accounts. Zero or more child accounts can be created under the top-level account. Each child account contains the same set of fields as the top-level account, including their own child accounts. This supports the creation of an account hierarchy within a single call to create_acct_complete_m.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Acct"
          }
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "userid" : {
          "description" : "The user's unique identifier. Every account must have a userid. If the client parameters are not configured to generate this value, the userid must be provided in this API request.\n",
          "type" : "string"
        },
        "status_cd" : {
          "description" : "The status of the account after it is created.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "password" : {
          "description" : "Password for the given user",
          "type" : "string"
        },
        "secret_question" : {
          "description" : "User's secret question recorded to recover a password",
          "type" : "string"
        },
        "secret_question_answer" : {
          "description" : "Response to a user's secret_question",
          "type" : "string"
        },
        "acct_contact_idx" : {
          "description" : "For non-persistent referencing of a contact in the contacts array within the API request. If an idx value is specified, inputs provided for other account contact fields will be ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "first_name" : {
          "description" : "First name of the contact",
          "type" : "string"
        },
        "mi" : {
          "description" : "Middle initial of the contact",
          "type" : "string"
        },
        "last_name" : {
          "description" : "Last name of the contact",
          "type" : "string"
        },
        "company_name" : {
          "description" : "Company name of the contact",
          "type" : "string"
        },
        "address1" : {
          "description" : "First address line of the contact.",
          "type" : "string"
        },
        "address2" : {
          "description" : "Second address line of the contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "address3" : {
          "description" : "The third line of the address",
          "type" : "string"
        },
        "city" : {
          "description" : "City of the contact",
          "type" : "string"
        },
        "locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "state_prov" : {
          "description" : "State or Province of the contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "country" : {
          "description" : "Country of the contact as the ISO-compliant 2-character country code abbreviation in uppercase. If you enter contact address information, but leave this field blank, then this field defaults to \"US\". If no contact address information is entered, this field remains blank.\n",
          "type" : "string"
        },
        "postal_cd" : {
          "description" : "Postal/Zip code for the contact's address",
          "type" : "string"
        },
        "phone" : {
          "description" : "Phone number for the contact",
          "type" : "string"
        },
        "phone_ext" : {
          "description" : "Extension for the contact's phone number",
          "type" : "string"
        },
        "cell_phone" : {
          "description" : "Cell phone number for the contact",
          "type" : "string"
        },
        "work_phone" : {
          "description" : "Work phone number for the contact",
          "type" : "string"
        },
        "work_phone_ext" : {
          "description" : "Extension for the contact work phone",
          "type" : "string"
        },
        "fax" : {
          "description" : "Fax phone number for the contact",
          "type" : "string"
        },
        "email" : {
          "description" : "Email for the contact.",
          "type" : "string"
        },
        "birthdate" : {
          "description" : "Birthdate of the contact in yyyy-mm-dd format.",
          "type" : "string"
        },
        "senior_acct_no" : {
          "description" : "Unique account number for the parent account. It is used to establish parent-child billing relationships. This field, or senior_acct_userid, or client_senior_acct_userid, is required if you are using the current API call to create a child account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "senior_acct_userid" : {
          "description" : "User ID of the parent account",
          "type" : "string"
        },
        "client_senior_acct_id" : {
          "description" : "Client-account ID of the parent account",
          "type" : "string"
        },
        "legal_entity_no" : {
          "description" : "Aria-assigned legal entity identification number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_legal_entity_id" : {
          "description" : "Client-assigned unique identifier for the legal entity.",
          "type" : "string"
        },
        "invoicing_option" : {
          "description" : "Indicator for performing full invoicing, prorated invoicing or client-defined configuration setting on this account as part of this call.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_start_date" : {
          "description" : "Alternative start date, in yyyy-mm-dd format, for the master plan instance being assigned on the account. This date can be used to delay providing services to the account holder (for example: until they have been email validated), and must be within one billing interval of the plan being assigned.\n",
          "type" : "string"
        },
        "alt_bill_day" : {
          "description" : "Number specifying a day of the month to use as an alternate bill day. You can enter a bill date other than the anniversary date in this field. The invoice_mode must be set to 0 or must be blank to enter a date in this field, it cannot be set to 1.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "retroactive_start_date" : {
          "description" : "Date, in yyyy-mm-dd format, to set for retroactive start.",
          "type" : "string"
        },
        "override_bill_thru_date" : {
          "description" : "Applicable only for master plan assignment. When provided, this date is used as the bill thru date for the master plan instance. The alt_start_date or retroactive_start_date input is honored with override_bill_thru_date, but invoicing_option must be set to Perform Prorated Invoicing. The date provided must be in the future, must be after the alt_start_date (if provided), and cannot exceed one recurring billing interval. This parameter cannot be used with alt_bill_day or status_until_alt_start (defaults to Inactive). A prorated invoice is generated for recurring services from the effective start date of the plan instance through the override_bill_thru_date provided. If the plan being assigned has no usage services, the next_bill_date (aka anniversary date) is the override_bill_thru_date + 1 day. If the plan has usage services, then the next_bill_date is calculated based on the usage interval to be the earliest date in the future that ensures usage and recurring services are invoiced together on the override_bill_thru_date + 1 day.\n",
          "type" : "string"
        },
        "functional_acct_group" : {
          "description" : "Array of functional account groups",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FunctionalAcctGroup"
          }
        },
        "collection_acct_group" : {
          "description" : "Array for collection account groups.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CollectionAcctGroup"
          }
        },
        "supp_field" : {
          "description" : "Assigns one or more supplemental field values to the account",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppField"
          }
        },
        "test_acct_ind" : {
          "description" : "Indicates that the account is a test account and is treated as such in the system. The default value is 0.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_start_date" : {
          "description" : "Date, in yyyy-mm-dd format, on which the account was first created outside of Aria",
          "type" : "string"
        },
        "acct_currency" : {
          "description" : "3-character ISO-compliant currency code in lowercase for monetary values used for this account\n",
          "type" : "string"
        },
        "seq_func_group_no" : {
          "description" : "Functional account group number specifically designated for statement sequence number assignment\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_seq_func_group_id" : {
          "description" : "Client-defined functional account group number specifically designated for statement sequence number assignment\n",
          "type" : "string"
        },
        "taxpayer_id" : {
          "description" : "Taxpayer identification number",
          "type" : "string"
        },
        "tax_exemption_level" : {
          "description" : "Provides the Tax Exemption Level for the account. This field only applies to the Aria internal tax engine.",
          "type" : "integer",
          "format" : "int64"
        },
        "list_start_master_file" : {
          "description" : "Indicates whether the account is listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_msg_template_no" : {
          "description" : "Email template number assigned to this account",
          "type" : "integer",
          "format" : "int64"
        },
        "cn_alt_msg_template_no" : {
          "description" : "Alternate email template number to use for this account",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_approval_required" : {
          "description" : "Boolean indicator to override client's default configured behavior for creating Pending/Real invoice.\n",
          "type" : "string"
        },
        "create_session" : {
          "description" : "Creates an Aria session for the newly created account. Within an Aria session, you can perform functions such as securely processing payment transactions or securely retrieving account information in registration or User Self Service applications.\n",
          "type" : "string"
        },
        "client_alt_msg_template_id" : {
          "description" : "Client-defined email template ID assigned to this account",
          "type" : "string"
        },
        "client_cn_alt_msg_template_id" : {
          "description" : "Client-defined alternate email template ID to use for this account",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_surcharges" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctSurcharge"
          }
        },
        "coupon_codes" : {
          "description" : "Array of coupon details for the account",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CouponCode"
          }
        },
        "payment_method" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentMethod"
          }
        },
        "billing_group" : {
          "description" : "This array contains information about the account's billing groups. A billing group defines the statement configuration, primary payment method, and/or backup payment method for one or more master plan instances.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingGroup"
          }
        },
        "dunning_group" : {
          "description" : "This array contains information about the account's dunning groups. A dunning group defines the process followed for delinquent payments associated with one or more master plan instances. Each account must have at least one master plan instance, and each master plan instance must have a dunning group. Therefore, you must define at least one dunning group for each account in the API request.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DunningGroup"
          }
        },
        "contracts" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contract"
          }
        },
        "master_plans_detail" : {
          "description" : "Allows multiple master plans subscription for an account",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlansDetail"
          }
        },
        "consumer_acct_ind" : {
          "description" : "Indicates that the account represents a single individual, used primarily in Business-to-Consumer (B2C) business models.  The primary purpose of this field is to support Person Accounts objects in Salesforce via Aria for Salesforce.\n",
          "type" : "string"
        },
        "revrec_profile_no" : {
          "description" : "Profile ID of an existing revenue recognition profile\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_revrec_id" : {
          "description" : "Client-defined identifier of an existing revenue recognition profile.  If this parameter is specified, it takes precedence over revrec_profile_no.\n",
          "type" : "string"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the account.\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "contacts" : {
          "description" : "List of contacts to be created on the account. Note that contacts not used as an account contact, billing contact, or statement contact will be saved on the account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contact"
          }
        },
        "combine_invoices" : {
          "description" : "Indicator for combining invoices when retroactive start dates, negative bill lag days, or plan changes just prior to the next billing date would otherwise have generated multiple invoices. The allowable values are 1, 2, or 3.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_filter" : {
          "description" : "Enable Fraud Filtering.  This is supported if your payment processor supports this feature and has been certified with Aria.  If no values are provided, the system will default to 2.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        }
      },
      "required" : [ "dunning_group", "master_plans_detail" ]
    },
    "ClientRecordId" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "client_record_id" : {
          "description" : "If the above is not available, the client-defined record ID for the usage to be discarded",
          "type" : "string"
        }
      }
    },
    "AdvanceVirtualDatetimeMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "advance_virtual_datetime_m" ],
          "default" : "advance_virtual_datetime_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "offset_hours" : {
          "description" : "Positive integer number of hours to advance the given client's current virtual time.\n",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "offset_hours" ]
    },
    "GetClientItemClassesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "all_item_classes" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllItemClasse"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "InvoicePaymentDetail" : {
      "type" : "object",
      "description" : "Array of invoice payments returned upon succesful completion of the API call.\\n",
      "properties" : {
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction\n",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_type" : {
          "description" : "Aria-assigned identifier for this type of transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "description" : "Text description of the transaction",
          "type" : "string"
        },
        "amount" : {
          "description" : "Total monetary value of this transaction\n",
          "type" : "number"
        },
        "applied_amount" : {
          "description" : "For transaction types that decrease an accounts balance (e.g. Payments) the amount of this transaction applied to date to charge transactions on the account.\n",
          "type" : "number"
        },
        "currency_code" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "transaction_date" : {
          "description" : "Date the transaction was executed.\n",
          "type" : "string"
        },
        "is_voided" : {
          "description" : "A return value of \"true\" here indicates the transaction has been voided.\n",
          "type" : "string"
        },
        "statement_no" : {
          "description" : "If the given transaction has been included within a statement (an Aria-generated internal grouping of all financial transactions on this account within a given period), the Aria-assigned identifier of that statement.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_type" : {
          "description" : "For payment transactions only, the type of payment (e.g. Credit Card).\n",
          "type" : "string"
        },
        "payment_src_description" : {
          "description" : "For electronic payment transactions only, the granular type of the source of the payment (e.g. American Express)\n",
          "type" : "string"
        },
        "payment_src_suffix" : {
          "description" : "For electronic payment transactions only, the last 4 digits of the account (e.g. the last 4 digits if the credit card used).\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "seq_statement_id" : {
          "description" : "The unique sequential statement number.\n",
          "type" : "string"
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "The client-defined identifier of the payment method used for payment.\n",
          "type" : "string"
        },
        "reason_code" : {
          "description" : "Client-defined reason code for the transaction\n",
          "type" : "integer",
          "format" : "int64"
        },
        "reason_description" : {
          "description" : "Client-defined reason code description\n",
          "type" : "string"
        },
        "payment_option" : {
          "description" : "This allows you to select either payment methods (such as a credit card or other electronic form of payment) or payment terms (such as a physical check) when creating or modifying a billing group'\n",
          "type" : "string"
        },
        "client_payment_term_id" : {
          "description" : "Client Payment Term ID from Payment Terms configuration.\n",
          "type" : "string"
        },
        "payment_terms_name" : {
          "description" : "Payment Terms Name from Payment Terms configuration.\n",
          "type" : "string"
        },
        "payment_terms_no" : {
          "description" : "Payment Terms Number from Payment Terms configuration.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "ean_gln_num" : {
          "description" : "'EAN or GLN Number from billing group that is only applicable if payment_option=\"Terms\" and pmt_terms_type=\"EAN/GLN\"'\n",
          "type" : "string"
        },
        "ean_gln_requisition_num" : {
          "description" : "'EAN or GLN Requisition Number from billing group that is only applicable if payment_option=\"Terms\" and pmt_terms_type=\"EAN/GLN\"'\n",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "payment_terms_type" : {
          "description" : "Payment Terms Type from Payment Terms configuration.",
          "type" : "string"
        }
      }
    },
    "ProrationDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_no" : {
          "description" : "The unique identifier of the plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the plan instance.",
          "type" : "string"
        },
        "proration_result_total_amount" : {
          "description" : "Plan proration total amount",
          "type" : "number"
        },
        "proration_amount" : {
          "description" : "Plan proration amount",
          "type" : "number"
        },
        "proration_tax_amount" : {
          "description" : "Plan proration tax amount",
          "type" : "number"
        },
        "proration_surcharge_amount" : {
          "description" : "Plan proration surcharge amount",
          "type" : "number"
        },
        "proration_credit_amount" : {
          "description" : "Plan proration credit amount",
          "type" : "number"
        }
      }
    },
    "GetAcctServiceOutageCreditMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_service_outage_credit_m" ],
          "default" : "get_acct_service_outage_credit_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "outage_start_date" : {
          "description" : "The date of the beginning of the service outage for which a credit is being calculated.",
          "type" : "string"
        },
        "outage_start_time" : {
          "description" : "The time the service outage started on the date provided in outage_start_date, in 24-hour format",
          "type" : "string"
        },
        "outage_end_date" : {
          "description" : "The date of the end of the service outage for which a credit is being calculated.",
          "type" : "string"
        },
        "outage_end_time" : {
          "description" : "The time the service outage ended on the date provided in outage_end_date, in 24-hour format",
          "type" : "string"
        },
        "plans_to_get_outage" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlansToGetOutage"
          }
        },
        "adjust_percent" : {
          "description" : "If a full pro-rated credit is not desired, this adjustment factor will be multiplied against the calculated credit to deliver a final value.  Allowable values for this field are numbers between 0 and 100, and represent a percentage\n",
          "type" : "number"
        },
        "client_plan_ids_to_get_outage" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClientPlanIdsToGetOutage"
          }
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "outage_start_date", "outage_end_date" ]
    },
    "WriteoffTransaction" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "writeoff_transaction_id" : {
          "description" : "Aria generated ID for the reversal transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no" : {
          "description" : "Aria generated unique service number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "Client-defined Identifier for the service",
          "type" : "string"
        },
        "original_amount" : {
          "description" : "Original amount of the invoice transaction",
          "type" : "number"
        },
        "amount" : {
          "description" : "Writeoff/dispute amount for this transaction",
          "type" : "number"
        },
        "date" : {
          "description" : "Date of the writeoff/dispute",
          "type" : "string"
        },
        "writeoff_reasoncode" : {
          "description" : "Reason code, if any, on this writeoff",
          "type" : "integer",
          "format" : "int64"
        },
        "dispute_creation_date" : {
          "description" : "Date of dispute creation",
          "type" : "string"
        },
        "dispute_expiry_date" : {
          "description" : "Dispute expiration date",
          "type" : "string"
        },
        "dispute_ind" : {
          "description" : "Indicates whether a dispute or a writeoff",
          "type" : "integer",
          "format" : "int64"
        },
        "can_unsettle" : {
          "description" : "Specifies if this dispute can be unsettled.",
          "type" : "string"
        }
      }
    },
    "ParentItemClas" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "class_no" : {
          "description" : "Inventory item class number",
          "type" : "integer",
          "format" : "int64"
        },
        "class_label" : {
          "description" : "Inventory item class label",
          "type" : "string"
        },
        "class_description" : {
          "description" : "Inventory item class description",
          "type" : "string"
        },
        "display_ind" : {
          "description" : "Boolean value indicating if the item is displayable.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "InvoiceCmLineDetail" : {
      "type" : "object",
      "description" : "Array of invoice line items.",
      "properties" : {
        "line_no" : {
          "description" : "Invoice line number.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no" : {
          "description" : "Aria generated service number.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name" : {
          "description" : "Service name.",
          "type" : "string"
        },
        "client_sku" : {
          "description" : "Client-defined SKU.",
          "type" : "string"
        },
        "item_no" : {
          "description" : "Aria generated unique item ID.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "Unique Client-defined service ID.",
          "type" : "string"
        },
        "client_item_id" : {
          "description" : "Unique client-defined item ID.",
          "type" : "string"
        },
        "amount" : {
          "description" : "Amount.",
          "type" : "number"
        },
        "max_credit_amount" : {
          "description" : "Maximum Credit Amount.",
          "type" : "number"
        }
      }
    },
    "GetAcctPlanUnitInstanceAllMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_plan_unit_instance_all_m" ],
          "default" : "get_acct_plan_unit_instance_all_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "plan_instance_no" : {
          "description" : "The Master Plan Instance number from which plan unit instance details should be pulled.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Client-defined Master Plan Instance ID from which plan unit instance details should be pulled.",
          "type" : "string"
        },
        "plan_unit_inst_no" : {
          "description" : "Aria-assigned plan unit instance number that filters available plan unit instances for the Master Plan Instance number specified.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_unit_inst_id" : {
          "description" : "Client-assigned plan unit ID that filters available plan unit instances for the Master Plan Instance number specified.",
          "type" : "string"
        },
        "status_cd" : {
          "description" : "Filters plan unit instances by fulfillment status code (e.g. All Statuses, No Fulfillment Date, Queued for Invoicing, or Invoiced).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_unit_inst_status_cd" : {
          "description" : "Filters plan unit instances by plan unit instance status code (e.g. All Statuses, Active, Inactive, or Queued).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fulfillment_only" : {
          "description" : "This parameter governs whether only fulfillment based or all services should be outputted as part of plan unit instance details.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "AssignAcctPlanMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "proration_result_amount" : {
          "description" : "The currency amount of any resulting proration action performed as a result of the requested plan change. For plan assignments with an assignment directive of '1' (perform on anniversary date), or '2' (honor client default proration action) when the default configuration is to not do proration, or '3' (force no proration), the value returned in this field will always be '0'. When proration is performed the value returned in this field will either be a positive currency value (indicating a resulting charge to the account) or a negative currency value (indicating a credit to the account). If the value passed in field do_write is false then any positive or negative value returned in this field is notational only, demonstrating what proration effect would be applied to the account if the requested plan assignment/de-assignment were to be actually performed.\n",
          "type" : "number"
        },
        "collection_error_code" : {
          "description" : "If a collection is attempted, returns the error code associated with the collection.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_error_msg" : {
          "description" : "The error message associated with collection_error_code.\n",
          "type" : "string"
        },
        "statement_error_code" : {
          "description" : "The error code if statement generation fails.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_error_msg" : {
          "description" : "The text message associated with 'statement_error_code'\n",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor\n",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "expectd_activation_fee" : {
          "description" : "The activation fee the account holder can expect based on the activation fees of the plans on this invoice",
          "type" : "number"
        },
        "expectd_mthly_recurring_cost" : {
          "description" : "Regardless of the billing interval on the account, the monthly recurring cost of this change\n",
          "type" : "number"
        },
        "expectd_annu_recurring_cost" : {
          "description" : "",
          "type" : "number"
        },
        "acct_plan_line_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctPlanLineItem"
          }
        },
        "total_charges_before_tax" : {
          "description" : "Total amount to be charged to the account before taxes have been calculated.",
          "type" : "number"
        },
        "total_tax_charges" : {
          "description" : "Total taxes as calculated for the amount of the transaction.",
          "type" : "number"
        },
        "total_charges_after_tax" : {
          "description" : "Total amount to be charged to the account after taxes have been calculated.",
          "type" : "number"
        },
        "total_credit" : {
          "description" : "The total amount of the credit to be applied to the account",
          "type" : "number"
        },
        "total_tax_credit" : {
          "description" : "The tax amount of the credit to be applies",
          "type" : "number"
        },
        "total_credit_before_tax" : {
          "description" : "The credit to be applied before tax is taken into account",
          "type" : "number"
        },
        "total" : {
          "description" : "The grand total of this invoice",
          "type" : "number"
        },
        "proration_tax_amount" : {
          "description" : "The pro-rated tax credit amount",
          "type" : "number"
        },
        "proration_credit_result_amount" : {
          "description" : "The total pro-rated credit amount",
          "type" : "number"
        },
        "proration_credit_amount" : {
          "description" : "The non-tax pro-rated credit amount",
          "type" : "number"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the plan instance (can be either a master or supplemental plan) on which the plan will be replaced.",
          "type" : "integer",
          "format" : "int64"
        },
        "nso_order_no" : {
          "description" : "The unique identifier for an order that is created for bundled NSOs.",
          "type" : "integer",
          "format" : "int64"
        },
        "nso_order_status_label" : {
          "description" : "Status label for this order",
          "type" : "string"
        }
      }
    },
    "GetAcctNsoInclusionListMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_nso_incl_list" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctNsoInclList"
          }
        }
      }
    },
    "ClearRegUssConfigParamsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "SuppFieldValue" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "supp_field_values" : {
          "description" : "An array of client-defined product field values paired with the provided product field names above. Provide a value for this field to filter the list of plans returned.",
          "type" : "string"
        }
      }
    },
    "GetStatementContentSizeMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_statement_content_size_m" ],
          "default" : "get_statement_content_size_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_no" : {
          "description" : "The unique ID of the statement for which the details are being fetched",
          "type" : "integer",
          "format" : "int64"
        },
        "do_encoding" : {
          "description" : "True indicates to acquire the message size after doing MIME encoding, False acquires message size without MIME encoding.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "statement_no" ]
    },
    "InvoiceLineDetail" : {
      "type" : "object",
      "description" : "Array of invoice line items for this invoice.",
      "properties" : {
        "line_no" : {
          "description" : "The sequential line number of this line item. Initial record value is always 1.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no" : {
          "description" : "Aria-assigned unique service identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name" : {
          "description" : "The name corresponding to this line items service code.\n",
          "type" : "string"
        },
        "units" : {
          "description" : "The number of units of this service code billed on this line item.\n",
          "type" : "number"
        },
        "rate_per_unit" : {
          "description" : "The rate per unit billed\n",
          "type" : "number"
        },
        "amount" : {
          "description" : "The total amount of this line item",
          "type" : "number"
        },
        "description" : {
          "description" : "Text description of this line item",
          "type" : "string"
        },
        "date_range_start" : {
          "description" : "(Deprecated) The starting date range for this line item",
          "type" : "string"
        },
        "date_range_end" : {
          "description" : "(Deprecated) The ending date range for this line item",
          "type" : "string"
        },
        "usage_type_no" : {
          "description" : "The usage type code associated with this line item",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_no" : {
          "description" : "The unique plan ID associated with this line item",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The name of the plan associated with this line item",
          "type" : "string"
        },
        "credit_reason_cd" : {
          "description" : "The reason code associated with the credit that was applied, if any.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_reason_code_description" : {
          "description" : "The long description of the credit reason code which was applied, if any",
          "type" : "string"
        },
        "csr_comments" : {
          "description" : "The manually-entered CSR comments, if any",
          "type" : "string"
        },
        "client_sku" : {
          "description" : "",
          "type" : "string"
        },
        "order_no" : {
          "description" : "The unique identifier for an order in the context of an client_no and account_no.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "item_no" : {
          "description" : "The unique ID of the item being retrieved",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "The unique client-defined unique service ID associated with this line item.",
          "type" : "string"
        },
        "usage_type_cd" : {
          "description" : "An array containing usage_type_cd(s) to denote which usage type(s) to record.",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "The unique client-defined plan ID associated with this line item",
          "type" : "string"
        },
        "client_item_id" : {
          "description" : "The unique client-defined item ID  being retrieved.",
          "type" : "string"
        },
        "base_plan_units" : {
          "description" : "Total base unit of this invoice.",
          "type" : "number"
        },
        "plan_units_change" : {
          "description" : "Total base units change from last invoice.",
          "type" : "number"
        },
        "proration_factor" : {
          "description" : "Specifies the percentage of the line_base_units billed.",
          "type" : "number"
        },
        "proration_text" : {
          "description" : "Specifies the prorated days in total days.",
          "type" : "string"
        },
        "adv_billing_period_total_days" : {
          "description" : "Total days of period in this invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "proration_remaining_days" : {
          "description" : "Prorated days of period in this invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "proration_description" : {
          "description" : "Prorated invoice description.",
          "type" : "string"
        },
        "line_type" : {
          "description" : "Specifies the type of charge or credit associated with this line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "rate_schedule_no" : {
          "description" : "Aria-assigned unique identifier for the rate schedule used to generate this invoice line item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_rate_schedule_id" : {
          "description" : "Client-defined unique identifier for the rate schedule used to generate this invoice line item.\n",
          "type" : "string"
        },
        "rate_schedule_tier_no" : {
          "description" : "Sequential number for the rate tier associated with the rate schedule used to generate this invoice line item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_coupon_code" : {
          "description" : "Specifies the coupon code applied to the invoice.",
          "type" : "string"
        },
        "plan_instance_no" : {
          "description" : "Aria-assigned unique identifier of the plan instance directly associated with this invoice line item. Note that this parameter may be a master plan instance or a supplemental plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Client-defined unique identifier of the plan instance directly associated with this invoice line item. Note that this parameter may be a master plan instance or a supplemental plan instance.\n",
          "type" : "string"
        },
        "tax_related_ind" : {
          "description" : "Indicates whether the invoice line is related to tax. Invoice lines that are a tax charge or a credit applied to a tax charge will be returned as '1'. All other invoice lines will be returned as '0'.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "svc_credit_source_invoice_no" : {
          "description" : "Unique number of the original invoice associated with the service credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "svc_credit_source_line_no" : {
          "description" : "Line item (sequence number) from the original invoice associated with the service credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "svc_credit_source_trans_id" : {
          "description" : "Aria transaction ID (aka event_no) associated with the original invoice that was the source of the service credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "svc_credit_applied_line_no" : {
          "description" : "Line item (sequence number) from this invoice against which this service credit was applied.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "svc_credit_applied_trans_id" : {
          "description" : "Aria transaction ID (aka event_no) from this invoice against which this service credit was applied.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_mp_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "invoice_transaction_id" : {
          "description" : "event_no for invoice line item transactions (type 21, 22).",
          "type" : "integer",
          "format" : "int64"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the plan instance.",
          "type" : "string"
        },
        "bill_from_location_no" : {
          "description" : "Address sent as the bill-from address to the tax engine for tax calculations. Depending on the taxation configuration, this parameter may return the Aria-assigned unique identifier of the service location for the invoice line item. Note that service locations can be associated with a service for a given plan instance on an account, with an item (NSO) purchased as part of a one-time order, or with a service as defined in the product catalog.",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_from_location_no" : {
          "description" : "Address sent as the ship-from address to the tax engine for tax calculations. Depending on the taxation configuration, this parameter may return the Aria-assigned unique identifier of the service location for the invoice line item. Note that service locations can be associated with a service for a given plan instance on an account, with an item (NSO) purchased as part of a one-time order, or with a service as defined in the product catalog.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_to_address_seq" : {
          "description" : "Address sent as the bill-to address to the tax engine for tax calculations. This parameter will return the Aria-assigned unique identifier of the contact on the account used as the bill-to address for the invoice line item..",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_to_address_seq" : {
          "description" : "Address sent as the ship-to address to the tax engine for tax calculations. This parameter will return the Aria-assigned unique identifier of the contact on the account used as the ship-to address for the invoice line item.",
          "type" : "integer",
          "format" : "int64"
        },
        "rb_excluded" : {
          "description" : "Indicates that the original invoice line was not rebilled.",
          "type" : "integer",
          "format" : "int64"
        },
        "rb_line_comments" : {
          "description" : "Comments introduced on the rebill line.",
          "type" : "string"
        }
      }
    },
    "UpdateCcBlacklistMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_cc_blacklist_m" ],
          "default" : "update_cc_blacklist_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "cc_num" : {
          "description" : "Card number to be added to or removed from the blacklist.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "credit_card_payment_methods" : {
          "description" : "An Array of sequence no will be added to the blacklist.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CreditCardPaymentMethod"
          }
        },
        "assignment_directive" : {
          "description" : "Action to take for provided card number.  Notes may be added with any option.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notes" : {
          "description" : "Notes to be added about this card.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "assignment_directive" ]
    },
    "AcctPlanInstallCompleteMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "acct_plan_install_complete_m" ],
          "default" : "acct_plan_install_complete_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "install_complete_ind" : {
          "description" : "Boolean indicating the account installation process is complete.\n",
          "type" : "string"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "UpdateAcctPlanStatusMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_acct_plan_status_m" ],
          "default" : "update_acct_plan_status_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the plan instance (can be either a master or supplemental plan).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the plan instance (can be either a master or supplemental plan).\n",
          "type" : "string"
        },
        "status_cd" : {
          "description" : "The status of this plan instance. If you are updating a master plan instance, you must enter a value either in this field or in the dunning_state field. If you are updating a supplemental plan, this field is required.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "dunning_state" : {
          "description" : "Dunning state assigned to the master plan instance. In Progress indicates the master plan is in dunning. None indicates the master plan is not in dunning. Note that dunning state is applicable only for master plans and is set to Complete by the system once the dunning process is completed. If you are updating a master plan, you must enter a value either in this field or in the status_cd field.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "degrade_date" : {
          "description" : "Date on which the Dunning Manager evaluates whether the master plan should be advanced to the next step of the dunning process. Applicable only for master plans. Enter a value in this field only if the dunning_state is set to 1.\n",
          "type" : "string"
        },
        "queue_days" : {
          "description" : "Days in to queue before the status change occurs.",
          "type" : "integer",
          "format" : "int64"
        },
        "queue_date" : {
          "description" : "Specific date for the status change to occur",
          "type" : "string"
        },
        "force_bill_date_reset" : {
          "description" : "When a master plan's status changes from non-billable to billable, this input will determine what the billing dates of the specific master plan and all associated supplemental plans anniversary date will be.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "AcctNotificationDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "notify_tmplt_grp_id" : {
          "description" : "client-defind, case-insensitive unique template group ID",
          "type" : "string"
        },
        "notify_tmplt_grp_label" : {
          "description" : "description of the template group",
          "type" : "string"
        },
        "notify_tmplt_grp_assign_lvl" : {
          "description" : "designate which level the template group is assigned to the account",
          "type" : "string"
        }
      }
    },
    "IssueRefundToAcctMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "issue_refund_to_acct_m" ],
          "default" : "issue_refund_to_acct_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "payment_transaction_id" : {
          "description" : "The Aria-generated transaction ID of the payment made.",
          "type" : "integer",
          "format" : "int64"
        },
        "total_refund_amount" : {
          "description" : "The total amount intended to refund. If it is null and auto is set to 'true', the refund amount is calculated based on line items reversed.\n",
          "type" : "number"
        },
        "refund_check_number" : {
          "description" : "The check number associated to the refund.",
          "type" : "string"
        },
        "reason_code" : {
          "description" : "The refund reason code.",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "The user comment on the refund.",
          "type" : "string"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "auto_calc_refund" : {
          "description" : "This indicates if the refund amount is to be calculated based on reversal line items. If auto_calc_refund is set to 'true' and if do_write is 'true', if the total_refund_amount is not null, process will use the input total_refund_amount, but if the total_refund_amount is null, then the total_refund_amount will be equal to the calculated total reversal amount.  However, do_write = 'true' and auto_calc_refund = 'false' is not a valid combination and will error out.\n",
          "type" : "string"
        },
        "invoice_trans_to_reverse" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceTransToReverse"
          }
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions.",
          "type" : "string",
          "maxLength" : 50
        },
        "is_unlinked_refund" : {
          "description" : "This indicates that the refund amount is to be passed against a payment transaction or it is passed as stand alone refund. If is_unlinked_refund is set to 'true', then the refund amount is considered as stand alone refund for the account. but if is_unlinked_refund is set to 'false' then the refund amount is processed for payment transaction. <p> Refunds passed against a payment transaction (value='false') are only supported for  Payjunction and Cybersource payment processors.  <p> Refunds that are unlinked (value='true') are only supported for the Vantiv payment processor.\n",
          "type" : "string"
        },
        "alt_pay_method" : {
          "description" : "If you want to use the current form of payment, leave this field empty.  To use an alternate payment method, enter the appropriate value.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_number" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card refund instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card refund instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_zip" : {
          "description" : "Zip Code of the billing contact",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "soft_descriptor" : {
          "description" : "Transaction description shown on the buyer's statement that displays a Merchant Name or Item Description typically. This field will be ignored if not supported/certified by the payment processor.\n",
          "type" : "string"
        },
        "soft_descriptor_customer_service" : {
          "description" : "Transaction description shown on the buyer's statement that displays a City for Card Present transactions or a Phone Number for Card Not Present transactions. This field will be ignored if not supported/certified by the payment processor.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "payment_transaction_id", "reason_code" ]
    },
    "CmDetail" : {
      "type" : "object",
      "description" : "Array of credit transaction details.",
      "properties" : {
        "cm_line_no" : {
          "description" : "The unique Aria-generated number for the credit memo.",
          "type" : "integer",
          "format" : "int64"
        },
        "applied_invoice_no" : {
          "description" : "For a linked CM. the details of about the reference doc.",
          "type" : "integer",
          "format" : "int64"
        },
        "applied_invoice_line_no" : {
          "description" : "For a linked CM. the details of about the reference doc.",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_instance_no_out" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "supp_plan_instance_no_out" : {
          "description" : "The unique identifier of the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_reason_cd_det_out" : {
          "description" : "Reason code.",
          "type" : "integer",
          "format" : "int64"
        },
        "orig_transaction_id" : {
          "description" : "Transaction ID of the original invoice line for the credit.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no_out" : {
          "description" : "Service number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id_out" : {
          "description" : "Client-defined service ID.",
          "type" : "string"
        },
        "cm_transaction_id" : {
          "description" : "Transaction ID for the credit memo line.",
          "type" : "integer",
          "format" : "int64"
        },
        "item_no_out" : {
          "description" : "Item Number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_id_out" : {
          "description" : "Client item id.",
          "type" : "string"
        },
        "sku_out" : {
          "description" : "Client SKU .",
          "type" : "string"
        },
        "cm_line_amount_out" : {
          "description" : "Amount of the credit memo line.",
          "type" : "number"
        }
      }
    },
    "CreditCardPaymentMethod" : {
      "type" : "object",
      "description" : "An Array of sequence no will be added to the blacklist.",
      "properties" : {
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "Client-defined identifier associated with a payment method in Aria.",
          "type" : "string"
        }
      }
    },
    "MasterPlanInstance" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "master_plan_instance_no" : {
          "description" : "Unique plan instance number for each assigned master plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_def_master_plan_instance_id" : {
          "description" : "Client-defined plan instance ID for each assigned master plan.",
          "type" : "string"
        },
        "master_plan_name" : {
          "description" : "Master plan name",
          "type" : "string"
        },
        "master_plan_instance_desc" : {
          "description" : "Description for each assigned master plan",
          "type" : "string"
        },
        "master_plan_instance_balance" : {
          "description" : "Stack balance of each master plan",
          "type" : "number"
        }
      }
    },
    "SpecificMasterPlanInstancesList" : {
      "type" : "object",
      "description" : "A list of specific master plan instance charges, see below",
      "properties" : {
        "master_plan_instance_no" : {
          "description" : "The Aria-assigned unique identifier for master plan instances (MPI). If a single MPI is provided, collection will be attempted for the total or current balance due (based on the client parameter setting) of that MPI. If multiple MPIs are provided, one collection will be attempted for the combined total / current balance due for all MPIs specified. Payment will be automatically applied to the invoice line items for the MPIs provided (first-in, first-out). Note that invoice_no takes precedence over master_plan_instance_no, which in turn takes precedence over client_master_plan_instance_id.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "The client-defined unique identifier for master plan instances (MPI). If a single MPI is provided, collection will be attempted for the total or current balance due (based on the client parameter setting) of that MPI. If multiple MPIs are provided, one collection will be attempted for the combined total / current balance due for all MPIs specified. Payment will be automatically applied to the invoice line items for the MPIs provided (first-in, first-out). Note that invoice_no takes precedence over master_plan_instance_no, which in turn takes precedence over client_master_plan_instance_id.\n",
          "type" : "string"
        }
      }
    },
    "GetVirtualDatetimeMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_virtual_datetime_m" ],
          "default" : "get_virtual_datetime_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "ContactsList" : {
      "type" : "object",
      "description" : "List of contacts to be created on the account. Note that contacts not used as an account contact, billing contact, or statement contact will be saved on the account.\\n",
      "properties" : {
        "addr_contact_idx" : {
          "description" : "The Aria-assigned address sequence number.",
          "type" : "integer",
          "format" : "int64"
        },
        "addr_first_name" : {
          "description" : "The first name of the contact.",
          "type" : "string"
        },
        "addr_middle_initial" : {
          "description" : "The middle initial of the contact.",
          "type" : "string"
        },
        "addr_last_name" : {
          "description" : "The last name of the contact.",
          "type" : "string"
        },
        "addr_company_name" : {
          "description" : "The company name of the contact.",
          "type" : "string"
        },
        "addr_address1" : {
          "description" : "The first address line of the contact.",
          "type" : "string"
        },
        "addr_address2" : {
          "description" : "Second address line of the contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field\n",
          "type" : "string"
        },
        "addr_address3" : {
          "description" : "The third line of the address",
          "type" : "string"
        },
        "addr_city" : {
          "description" : "The city of the contact.",
          "type" : "string"
        },
        "addr_locality" : {
          "description" : "The locality of the contact.",
          "type" : "string"
        },
        "addr_state_prov" : {
          "description" : "The state or province of the contact. Note that only the official postal-service codes for states, provinces, and territories in the United States, Australia and Canada are supported. Use the other_locality field for states, provinces, or territories in other countries.\n",
          "type" : "string"
        },
        "addr_country" : {
          "description" : "The country of the contact. Provide the ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "addr_postal_cd" : {
          "description" : "The postal/zip code of the contact.",
          "type" : "string"
        },
        "addr_phone" : {
          "description" : "The phone number of the contact.",
          "type" : "string"
        },
        "addr_phone_ext" : {
          "description" : "The phone number extension of the contact.\n",
          "type" : "string"
        },
        "addr_cell_phone" : {
          "description" : "The cell phone number of the contact.",
          "type" : "string"
        },
        "addr_work_phone" : {
          "description" : "The work phone number of the contact.",
          "type" : "string"
        },
        "addr_work_phone_ext" : {
          "description" : "The work phone number extension of the contact.\n",
          "type" : "string"
        },
        "addr_fax" : {
          "description" : "The fax number of the contact.",
          "type" : "string"
        },
        "addr_email" : {
          "description" : "The email address of the contact.",
          "type" : "string"
        },
        "addr_birthdate" : {
          "description" : "The birthdate of the contact.",
          "type" : "string"
        }
      }
    },
    "GetAcctDunningGroupDetailsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "dunning_groups" : {
          "description" : "Array of dunning groups",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DunningGroup"
          }
        }
      }
    },
    "GetWebReplacementValsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_web_replacement_vals_m" ],
          "default" : "get_web_replacement_vals_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "web_vals_in" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WebValsIn"
          }
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "CancelUnconsumedCreditMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "cancel_unconsumed_credit_m" ],
          "default" : "cancel_unconsumed_credit_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "coupon_cd" : {
          "description" : "Client-defined unqique coupon code.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "coupon_cd" ]
    },
    "GetAcctPaymentHistoryMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_payment_history_m" ],
          "default" : "get_acct_payment_history_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "Aria generated unique identifier for the master plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance.\n",
          "type" : "string"
        },
        "start_date" : {
          "description" : "Specifies start date. The date is in the format yyyy-mm-dd",
          "type" : "string"
        },
        "end_date" : {
          "description" : "Specifies end date. The date is in the format yyyy-mm-dd",
          "type" : "string"
        },
        "limit_records" : {
          "description" : "Specifies the number of payment transactions to be returned. There will be no limits if not specified.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "details_flag" : {
          "description" : "If 1, also returns the details for the payments.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "RecordOutGoingPaymentMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "record_out_going_payment_m" ],
          "default" : "record_out_going_payment_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "reference_code" : {
          "description" : "The external reference code for this object, such as a check number or an ID assigned by an external system",
          "type" : "string"
        },
        "payment_amount" : {
          "description" : "The amount of the payment being/to-be made against the outstanding account balance\n",
          "type" : "number"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "account_no", "payment_amount" ]
    },
    "ModifyAcctSuppFieldsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "modify_acct_supp_fields_m" ],
          "default" : "modify_acct_supp_fields_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_supp_fields" : {
          "description" : "Array of supplemental field values to be updated. This array contains three sub-arrays: supp_field_names, supp_field_values, and supp_field_directives. The first value in each sub-array is automatically associated with the first values in the other sub-arrays, as are the second values, third values and so on. Each sub-array must contain the same number of values, or the API fails.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctSuppField"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "OtherContactDetail" : {
      "type" : "object",
      "description" : "List of contacts saved on the account that are not used as an account, billing, or statement contact",
      "properties" : {
        "other_contact_no" : {
          "description" : "Aria-assigned unique identifier for the contact saved on the account",
          "type" : "integer",
          "format" : "int64"
        },
        "other_contact_idx" : {
          "description" : "Value provided for the idx parameter in the API request",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAcctNoFromUserIdMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CollectionAcctGroup" : {
      "type" : "object",
      "description" : "Array for collection account groups.",
      "properties" : {
        "collections_acct_group_no" : {
          "description" : "Group ID for the collections account groups in which to place this account. You can create collections account groups to specify that financial transactions conducted with specific groups of accounts are completed with a specific payment gateway or combination of payment gateways and merchant accounts. <p> If you created a collections group for a specific payment gateway, be sure to add the account to that collections group during the account registration process or soon afterward. This ensures that collections for accounts in that collections group are completed successfully.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_collections_acct_group_id" : {
          "description" : "Client-defined collections account group ID to assign to this account",
          "type" : "string"
        }
      }
    },
    "GetInvNoFromBalXferMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "outacct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "outclient_acct_id" : {
          "description" : "This is the client-assigned identifier for the account.\n",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "Aria-assigned billing group number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "client assagined billing group id",
          "type" : "string"
        }
      }
    },
    "BillingGroupsArray" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "billing_group_name" : {
          "description" : "Billing Group name",
          "type" : "string"
        },
        "billing_group_description" : {
          "description" : "Billing group description",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "Billing group number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined billing group ID. This value must be unique across all client accounts. This field can also be used as a reference to assign this billing group to one or more master plan instances within this API request.\n",
          "type" : "string"
        },
        "bg_notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_template_group" : {
          "description" : "Notify template number.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_template" : {
          "description" : "Statement template number.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_note_template" : {
          "description" : "Credit note template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_option" : {
          "description" : "This allows you to select either payment methods (such as a credit card or other electronic form of payment) or payment terms (such as a physical check) when creating or modifying a billing group'\n",
          "type" : "string"
        },
        "primary_payment_method_no" : {
          "description" : "ID corresponding to the primary payment method such as credit card, electronic check, prepaid, etc. You must specify a payment method when creating billing information.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_primary_payment_method_id" : {
          "description" : "Client-defined unique identifier of the primary payment method",
          "type" : "string"
        },
        "backup_payment_method_no" : {
          "description" : "ID corresponding to the backup payment method such\n  as credit card, electronic check, prepaid, etc. The backup payment method\n  must be the same as the primary payment method. You must specify a payment method when\n  creating billing information.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_backup_payment_method_id" : {
          "description" : "Client-defined unique identifier of the backup payment method. The payment method specified must be the same as the primary payment method.",
          "type" : "string"
        },
        "stmt_contact_idx" : {
          "description" : "For non-persistent referencing of a contact in the contacts array within the API request. If an idx value is specified, inputs provided for other account contact fields will be ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "stmt_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the statement contact associated with a billing group on the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "stmt_first_name" : {
          "description" : "Statement contact first name",
          "type" : "string"
        },
        "stmt_mi" : {
          "description" : "The Middle Initial of the statement contact.",
          "type" : "string"
        },
        "stmt_last_name" : {
          "description" : "Statement contact Last name",
          "type" : "string"
        },
        "stmt_company_name" : {
          "description" : "Company name of the statement contact",
          "type" : "string"
        },
        "stmt_address1" : {
          "description" : "First address line of the statement contact",
          "type" : "string"
        },
        "stmt_address2" : {
          "description" : "Second address line of the statement contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "stmt_address3" : {
          "description" : "Thirs address line of the statement contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "stmt_city" : {
          "description" : "City of the statement contact",
          "type" : "string"
        },
        "stmt_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "stmt_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "stmt_country" : {
          "description" : "Country of the contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "stmt_postal_cd" : {
          "description" : "Postal/Zip code for the statement contact address.",
          "type" : "string"
        },
        "stmt_phone" : {
          "description" : "The phone number of the statement contact",
          "type" : "string"
        },
        "stmt_phone_ext" : {
          "description" : "The extension for the statement contact phone",
          "type" : "string"
        },
        "stmt_cell_phone" : {
          "description" : "The contact cell phone of the statement contact.",
          "type" : "string"
        },
        "stmt_work_phone" : {
          "description" : "Work phone number of the statement contact.",
          "type" : "string"
        },
        "stmt_work_phone_ext" : {
          "description" : "The extension for the statement contact work phone",
          "type" : "string"
        },
        "stmt_fax" : {
          "description" : "The fax number for the statement contact.",
          "type" : "string"
        },
        "stmt_email" : {
          "description" : "Email of the statement contact",
          "type" : "string"
        },
        "stmt_birthdate" : {
          "description" : "The birthdate, in yyyy-mm-dd format, of the statement contact.",
          "type" : "string"
        },
        "bg_list_start_master_file" : {
          "description" : "Indicates whether the account is listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_terms_no" : {
          "description" : "Payment terms number assigned to the account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_terms_name" : {
          "description" : "Payment terms name assigned to the account.\n",
          "type" : "string"
        },
        "client_payment_term_id" : {
          "description" : "Client-defined identifier for the billing group's payment term\n",
          "type" : "string"
        },
        "ean_gln_num" : {
          "description" : "The European Article Number or Global Location Number that is a required field if a payment option is terms AND client payment term ID matches a term in which the payment term type equals EAN/GLN. This number should be provided by Aria's client's customers and is unique to each customer (account).\n",
          "type" : "string"
        },
        "ean_gln_requisition_num" : {
          "description" : "The European Article Number requisition number or Global Location Number requisition number that is a required field if a payment option is terms AND client payment term ID matches a term in which the payment term type equals EAN/GLN. This number should be provided by Aria's client's customers and is used to track their individual projects similarly to a purchase order. This number is generated by the individual customer (account) and is not provided by any other party.\n",
          "type" : "string"
        },
        "credit_memo_template" : {
          "description" : "Credit template No.",
          "type" : "integer",
          "format" : "int64"
        },
        "rebill_template" : {
          "description" : "Rebill template No.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "VoidInvoiceMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "void_invoice_m" ],
          "default" : "void_invoice_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "reason_code" : {
          "description" : "The reason this invoice is voided\n",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "invoice_no", "reason_code" ]
    },
    "AcctSurcharge" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "acct_surcharge_no" : {
          "description" : "Surcharge number to be attached to the account",
          "type" : "integer",
          "format" : "int64"
        },
        "client_surcharge_id" : {
          "description" : "Note that only those surcharges with Surcharge Applicablity Scope of Account or Account and Master Plan Instance should be accepted.\n",
          "type" : "string"
        },
        "acct_rate_schedule_no" : {
          "description" : "",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetOrderItemsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "order_items_list" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrderItemsList"
          }
        }
      }
    },
    "UseridIsAvailableMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "userid_is_available_m" ],
          "default" : "userid_is_available_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "user_id" : {
          "description" : "Account's user ID.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "user_id" ]
    },
    "GetUnappliedServiceCreditsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_unapplied_service_credits_m" ],
          "default" : "get_unapplied_service_credits_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "UpdateAcctCompleteMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "collection_error_code" : {
          "description" : "If a collection is attempted, returns the error code associated with the collection.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_error_msg" : {
          "description" : "The error message associated with collection_error_code.\n",
          "type" : "string"
        },
        "parent_child_sync_error_code" : {
          "description" : "The result of the synchronization of the parent/child billing dates (if attempted).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_child_sync_error_msg" : {
          "description" : "The corresponding text error message for the parent_child_sync_error_code value.\n",
          "type" : "string"
        },
        "master_plan_error_code" : {
          "description" : "Error code returned upon failure when attempting to update the master plan\n",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_error_msg" : {
          "description" : "Human-readable error message corresponding to master_plan_error_code\n",
          "type" : "string"
        },
        "master_plan_coll_error_code" : {
          "description" : "Error code for master plan collection errors.",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_coll_error_msg" : {
          "description" : "Human-readable error text corresponding to the master_plan_coll_error_code\n",
          "type" : "string"
        },
        "master_plan_stmt_error_code" : {
          "description" : "Error code returned upon failure to update the master plan statement\n",
          "type" : "integer",
          "format" : "int64"
        },
        "master_plan_stmt_error_msg" : {
          "description" : "Human-readable error message corresponding to master_plan_stmt_error_code.\n",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor\n",
          "type" : "string"
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned here. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        },
        "master_plan_instance_id" : {
          "description" : "Master plan instance number",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_mp_instance_id" : {
          "description" : "Client-defined unique identifier for Master plan instance",
          "type" : "string"
        },
        "out_master_plan_no" : {
          "description" : "Master plan number",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_master_plan_id" : {
          "description" : "Client-defined unique identifier for Master plan",
          "type" : "string"
        },
        "out_master_plan_instance_description" : {
          "description" : "Master plan instance description",
          "type" : "string"
        },
        "master_plan_proration_result_total_amount" : {
          "description" : "Master plan proration total amount",
          "type" : "number"
        },
        "master_plan_proration_amount" : {
          "description" : "Master plan proration amount",
          "type" : "number"
        },
        "master_plan_proration_tax_amount" : {
          "description" : "Master plan proration tax amount",
          "type" : "number"
        },
        "master_plan_proration_surcharge_amount" : {
          "description" : "Master plan proration surcharge amount",
          "type" : "number"
        },
        "master_plan_proration_credit_amount" : {
          "description" : "Master plan prorration credit amount",
          "type" : "number"
        },
        "supp_plan_instance_id" : {
          "description" : "Supplemental plan instance number",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_supp_plan_instance_id" : {
          "description" : "Client-defined unique identifier for supplemental plan instance",
          "type" : "string"
        },
        "supp_plan_proration_amount" : {
          "description" : "Supplemental plan proration amount",
          "type" : "number"
        },
        "supp_plan_proration_tax_amount" : {
          "description" : "Supplemental plan proration tax amount",
          "type" : "number"
        },
        "supp_plan_proration_surcharge_amount" : {
          "description" : "Supplemental plan proration surcharge amount",
          "type" : "number"
        },
        "supp_plan_proration_credit_amount" : {
          "description" : "Supplemental plan proration credit amount",
          "type" : "number"
        },
        "out_invoice_no" : {
          "description" : "The unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "out_billing_group_no" : {
          "description" : "Billing group number",
          "type" : "integer",
          "format" : "int64"
        },
        "out_client_billing_group_id" : {
          "description" : "Client-defined unique identifier for billing group",
          "type" : "string"
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        },
        "acct_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the account contact saved on the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_contact_details" : {
          "description" : "List of billing contacts saved on the account.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingContactDetail"
          }
        },
        "payment_method_no" : {
          "description" : "The Aria-assigned unique identifier for the payment method on the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact on this account to be used as the billing contact for the payment method. If bill_contact_no is included in the API request, all other billing contact parameters are ignored.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_contact_details" : {
          "description" : "List of statement contacts saved on the account.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StatementContactDetail"
          }
        },
        "other_contact_details" : {
          "description" : "List of contacts saved on the account that are not used as an account, billing, or statement contact.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OtherContactDetail"
          }
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        }
      }
    },
    "GetParentForItemClassMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "parent_item_class" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ParentItemClas"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetRegUssParamsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_reg_uss_params_m" ],
          "default" : "get_reg_uss_params_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "session_id" : {
          "description" : "Client-assigned identifier for the application session.",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "session_id" ]
    },
    "AssignCollectionsAcctGroupMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "assign_collections_acct_group_m" ],
          "default" : "assign_collections_acct_group_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "group_no" : {
          "description" : "Aria-assigned collections account group Identifier to which the account is assigned. If client_acct_group_id is valued, this value must be blank.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_group_id" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account. If group_no is valued, this value must be blank.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "GetAvailPlansForAcctMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "all_client_avail_plans" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllClientAvailPlan"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "DeleteRegUssConfigParamsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "ReversedInvoiceTransaction" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "invoice_no" : {
          "description" : "The invoice number reversed",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_line_no" : {
          "description" : "The line of this item",
          "type" : "integer",
          "format" : "int64"
        },
        "reversed_transaction_id" : {
          "description" : "The Transaction Id of this item",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no" : {
          "description" : "The service number on this invoice",
          "type" : "integer",
          "format" : "int64"
        },
        "reversed_amount" : {
          "description" : "The reversed amount for this particular line",
          "type" : "number"
        },
        "reversing_date" : {
          "description" : "Specifies the reversing date on this invoice line.",
          "type" : "string"
        },
        "transaction_comments" : {
          "description" : "Comments, if any, for the original invoice line",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "The client-defined service ID on this invoice",
          "type" : "string"
        }
      }
    },
    "SendAcctStatementEmailMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "send_acct_statement_email_m" ],
          "default" : "send_acct_statement_email_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_no" : {
          "description" : "Statement number",
          "type" : "integer",
          "format" : "int64"
        },
        "sequential_statement_no" : {
          "description" : "sequential statement no",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "ReverseAuthorizedElectronicPaymentMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "reverse_authorized_electronic_payment_m" ],
          "default" : "reverse_authorized_electronic_payment_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_no" : {
          "description" : "Aria-assigned authorization identifier.",
          "type" : "integer",
          "format" : "int64"
        },
        "reason_code" : {
          "description" : "The authorization reversal reason code.",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "The user comment on the authorization reversal",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "auth_no", "reason_code" ]
    },
    "DiscardUsageMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "failed_records" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FailedRecord"
          }
        }
      }
    },
    "AssignFunctionalAcctGroupMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetAriaXmlStatementMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_aria_xml_statement_m" ],
          "default" : "get_aria_xml_statement_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "xml_statement_no" : {
          "description" : "The unique xml statement number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "xml_statement_no" ]
    },
    "ProductCatalogPlanFilter" : {
      "type" : "object",
      "description" : "This array will support up to 10 individual inputs.",
      "properties" : {
        "plan_no" : {
          "description" : "The Aria-assigned unique plan identifier that will be used to filter the results for this API. If the plan instance doesn’t have this plan_no assigned, it will not be returned.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "The client-defined unique identifier for the plan that will be used to filter the results for this API. If the plan instance doesnâ€™t have this plan name assigned, it will not be returned.\n",
          "type" : "string"
        }
      }
    },
    "ThirdPartyError" : {
      "type" : "object",
      "description" : "Errors from third-party systems like taxation engines are returned here. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\\n",
      "properties" : {
        "error_class" : {
          "description" : "Type of error code being represented, such as taxation",
          "type" : "string"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "string"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "BillingError" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "invoicing_error_code" : {
          "description" : "Aria-defined error code specific to any error encountered during any invoicing/billing processes performed inline as a result of this method call\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoicing_error_msg" : {
          "description" : "The explanatory text corresponding to the value returned (if any) in output \"invoicing_error_code\"\n",
          "type" : "string"
        },
        "collection_error_code" : {
          "description" : "If a collection is attempted, returns the error code associated with the collection\n",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_error_msg" : {
          "description" : "The error message associated with collection_error_code\n",
          "type" : "string"
        },
        "statement_error_code" : {
          "description" : "The error code if statement generation fails\n",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_error_msg" : {
          "description" : "Text message associated with statement_error_code\n",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "The billing group number mapped against each master plan",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "Client-defined billing group ID",
          "type" : "string"
        }
      }
    },
    "GetClientItemPricesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "item_rates" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ItemRate"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "AllServiceSuppField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "field_name" : {
          "description" : "The machine-readable name of this field",
          "type" : "string"
        },
        "field_desc" : {
          "description" : "The human-readable name of this field",
          "type" : "string"
        },
        "field_order_no" : {
          "description" : "The sort order of this field",
          "type" : "integer",
          "format" : "int64"
        },
        "field_value" : {
          "description" : "The value stored in this field",
          "type" : "string"
        }
      }
    },
    "SavePaypalBillAgreementMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "save_paypal_bill_agreement_m" ],
          "default" : "save_paypal_bill_agreement_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "token" : {
          "description" : "PayPal assigned session token retrieved with init_paypal_bill_agreement\n",
          "type" : "string"
        },
        "billing_group_no" : {
          "description" : "The unique identifier of the billing group.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_billing_group_id" : {
          "description" : "The client-defined identifier of the billing group.",
          "type" : "string"
        },
        "master_plan_instance_no" : {
          "description" : "The unique identifier of the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "The client-defined identifier of the master plan instance.",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "token" ]
    },
    "PaymentMethodsInfo" : {
      "type" : "object",
      "description" : "List of primary and secondary payment methods of billing groups on this account.",
      "properties" : {
        "billing_group_no" : {
          "description" : "The billing group number mapped against each master plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_def_billing_group_id" : {
          "description" : "Client-defined billing group ID",
          "type" : "string"
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_address_verification_code" : {
          "description" : "The address verification code for account billing address\n",
          "type" : "string"
        },
        "client_payment_method_id" : {
          "description" : "The client-defined billing primary payment method ID.",
          "type" : "string"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_postal_cd" : {
          "description" : "Postal code for the billing contact.",
          "type" : "string"
        },
        "bill_address_match_score" : {
          "description" : "The score of match for account billing address verification code",
          "type" : "number"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_phone_ext" : {
          "description" : "Phone extension of the billing contact.",
          "type" : "string"
        },
        "bill_cell_phone" : {
          "description" : "Cell phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_ext" : {
          "description" : "This is the work phone extension for the billing contact work phone.\n",
          "type" : "string"
        },
        "bill_fax" : {
          "description" : "Fax number of the billing contact.",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_birthdate" : {
          "description" : "Birthdate of the billing contact.\n",
          "type" : "string"
        },
        "pay_method_name" : {
          "description" : "The human-readable name of the payment method.",
          "type" : "string"
        },
        "pay_method_description" : {
          "description" : "Description for the primary payment method.'",
          "type" : "string"
        },
        "pay_method_type" : {
          "description" : "This is the method_id corresponding to a payment method such as credit card, Electronic Check, Pre-Paid, Net Terms, etc.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "suffix" : {
          "description" : "The last 4 digits of the credit card number",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_type" : {
          "description" : "The type of credit card used for the original payment.",
          "type" : "string"
        },
        "bill_agreement_id" : {
          "description" : "Unique ID of the bill agreement (also referred to as a token).\n",
          "type" : "string"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "bill_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact on this account to be used as the billing contact for the payment method. If bill_contact_no is included in the API request, all other billing contact parameters are ignored.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Authorize3dsecureMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor",
          "type" : "string"
        }
      }
    },
    "GetAcctTaxExemptStatusMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_tax_exempt_status_m" ],
          "default" : "get_acct_tax_exempt_status_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "TaxDetail" : {
      "type" : "object",
      "description" : "Array of Tax details for this invoice.",
      "properties" : {
        "tax_detail_line" : {
          "description" : "Line number associated with each tax detail record.",
          "type" : "integer",
          "format" : "int64"
        },
        "seq_num" : {
          "description" : "The tax line on the invoice which includes the tax amount associated with this tax_detail_line.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "taxed_seq_num" : {
          "description" : "The invoice line item for which the tax for this tax_detail_line was calculated.",
          "type" : "integer",
          "format" : "int64"
        },
        "debit" : {
          "description" : "Amount of tax applied for the given tax type.",
          "type" : "number"
        },
        "tax_authority_level" : {
          "description" : "Tax jurisdiction code: 0 = Federal, 1 = State / Province.",
          "type" : "integer",
          "format" : "int64"
        },
        "tax_rate" : {
          "description" : "Rate at which tax is calculated for the tax type used by the tax engine.",
          "type" : "number"
        },
        "orig_was_tax_inclusive" : {
          "description" : "Indicates whether or not the invoice line amount was tax inclusive.",
          "type" : "integer",
          "format" : "int64"
        },
        "tax_srv_tax_type_id" : {
          "description" : "Identifier of the tax type returned by the tax engine.",
          "type" : "string"
        },
        "tax_srv_tax_type_desc" : {
          "description" : "Description of the tax type returned by the tax engine.",
          "type" : "string"
        },
        "tax_srv_cat_text" : {
          "description" : "Category of the tax type returned by the tax engine",
          "type" : "string"
        },
        "tax_srv_juris_nm" : {
          "description" : "Jurisdiction name returned by the tax engine",
          "type" : "string"
        },
        "tax_srv_tax_sum_text" : {
          "description" : "Invoice summary text returned by the tax engine.",
          "type" : "string"
        }
      }
    },
    "GetUnbilledUsageSummaryMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_unbilled_usage_summary_m" ],
          "default" : "get_unbilled_usage_summary_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_id" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "usage_details_flag" : {
          "description" : "Flag when false will suppress the unbilled usage detail records.\n",
          "type" : "string"
        },
        "include_all_usage_unit_thresholds" : {
          "description" : "Flag decides whether to return values of all plans/usage types or not.",
          "type" : "string"
        },
        "plan_no" : {
          "description" : "The unique plan identifier.",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type_no" : {
          "description" : "The Aria-assigned usage type number to set the threshold unit amount per specific usage type.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type_cd" : {
          "description" : "Client-assigned identifier for the type to set the threshold unit amount per specific usage type. Either this field OR \"usage_type_no\" must be passed into the API to denote which usage type to set the threshold unit.\n",
          "type" : "string"
        },
        "retrieve_excluded_usage" : {
          "description" : "Use this field to include usage records that have been permanently excluded from billing",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "UpdateContactMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact created on this account.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "UpdateOrderMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "invoicing_error_code" : {
          "description" : "The error code generated by Aria when Aria attempted to generate a invoice",
          "type" : "string"
        },
        "invoicing_error_msg" : {
          "description" : "The text message associated with 'invoicing_error_code'",
          "type" : "string"
        },
        "statement_error_cd" : {
          "description" : "Error code produced when statement generation has failed.",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_error_msg" : {
          "description" : "The text message associated with 'statement_error_code'",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor\n",
          "type" : "string"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "total_charges_before_tax" : {
          "description" : "Total charges on this invoice before taxes are applied",
          "type" : "number"
        },
        "total_tax_charges" : {
          "description" : "Total amount of taxes charged",
          "type" : "number"
        },
        "total_charges_after_tax" : {
          "description" : "Subtotal combining the total pre-tax charges and the total taxes charged",
          "type" : "number"
        },
        "total_credit" : {
          "description" : "Sum of all the credits on the invoice",
          "type" : "number"
        },
        "cart_invoice_line_items" : {
          "description" : "All of the items on this order. If do_write was FALSE, these are the line items which would be on the eventual invoice",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CartInvoiceLineItem"
          }
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned here. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        }
      }
    },
    "MasterPlansService" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "service_no" : {
          "description" : "The Aria-assigned unique identifier for the service associated with the plan.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "The client-defined identifier for the service associated with the plan.",
          "type" : "string"
        },
        "svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_svc_location_id" : {
          "description" : "The client-defined unique identifier for the origin location for the service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.",
          "type" : "string"
        },
        "dest_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the destination contact for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AllItemClasse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "class_no" : {
          "description" : "The unique ID of the item class to which this item belongs",
          "type" : "integer",
          "format" : "int64"
        },
        "label" : {
          "description" : "The label or name for the item class",
          "type" : "string"
        }
      }
    },
    "ClientCurrency" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "currency_cd" : {
          "description" : "The ISO-compliant 3-character currency codes in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "currency_name" : {
          "description" : "Human-readable currency name",
          "type" : "string"
        },
        "currency_short_name" : {
          "description" : "Alternative short name for the currency",
          "type" : "string"
        },
        "iso_4217n" : {
          "description" : "ISO 4217-N Currency Identrifier",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_symbol" : {
          "description" : "Currency symbol.",
          "type" : "string"
        },
        "currency_html" : {
          "description" : "HTML currency symbol code",
          "type" : "string"
        },
        "default_ind" : {
          "description" : "Boolean value indicating if the currency is the cleint default currency true = yes, false = no).\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AcctSuppFieldsUpdate" : {
      "type" : "object",
      "description" : "Array of objects to be updated. Each object contains a list of values for one of the following fields: acct_supp_field_name, acct_supp_field_value, or acct_supp_field_directive. The first value in each object is automatically associated with the first values in the other objects, as are the second values, third values and so on. Each object must contain the same number of values, or the API fails.\\n",
      "properties" : {
        "acct_supp_field_name" : {
          "description" : "Pipe-delimited array of supplemental field names. This value is required if you want to assign supplemental fields. For example, if you have any accounts that are tax-exempt or international, you must set up corresponding account supplemental fields prior to your tax provider configuration. Create fields for  the tax exemption number and for the VAT ID used by the tax provider.\n",
          "type" : "string"
        },
        "acct_supp_field_value" : {
          "description" : "Pipe-delimited array of supplemental field values.",
          "type" : "string"
        },
        "acct_supp_field_directive" : {
          "description" : "Pipe-delimited array of account supplemental field directives. Specifies what actions to take (update, delete, etc.)\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ReplaceAcctPlanMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "replace_acct_plan_m" ],
          "default" : "replace_acct_plan_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the plan instance (can be either a master or supplemental plan) on which the plan will be replaced.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the plan instance (can be either a master or supplemental plan) on which the plan will be replaced.",
          "type" : "string"
        },
        "new_plan_no" : {
          "description" : "The unique identifier of the new plan replacing the existing plan on the instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "new_client_plan_id" : {
          "description" : "The client-defined identifier of the new plan replacing the existing plan on the instance.",
          "type" : "string"
        },
        "new_client_plan_instance_id" : {
          "description" : "The new client-defined identifier for the plan instance",
          "type" : "string"
        },
        "alt_rate_schedule_no" : {
          "description" : "Alternative Rate Schedule Number. The alt_rate_schedule_no is the unique identifier for an alternative rate schedule that can be assigned to the account holder in place of the default rate schedule. This is often done by CSR's to provide special compensation or discounts as incentives to account holders.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_units" : {
          "description" : "The units of the plan added at this change",
          "type" : "number"
        },
        "coupon_codes" : {
          "description" : "An array of coupon details for the master plan instance.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CouponCode"
          }
        },
        "promo_cd" : {
          "description" : "This is the code provided the client  and used by the account holder during registration or when executing a transaction. A promotion generally provides access to a custom set of reduced-rate plans.\n",
          "type" : "string"
        },
        "mp_surcharges" : {
          "description" : "Surcharge for master plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MpSurcharge"
          }
        },
        "plan_status" : {
          "description" : "Updates the plan status for the plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_description" : {
          "description" : "Updated the description for the plan instance.\n",
          "type" : "string"
        },
        "plan_instance_field_update" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanInstanceFieldUpdate"
          }
        },
        "assignment_directive" : {
          "description" : "The rule to be applied to this assignment request, governing the proration rule is applied. Default behavior is to make the plan change (assign/deassign a plan to an account, change units on an existing plan, etc.) immediately based on client-defined default proration rule, resulting in appropriate prorated charge and credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "offset_months" : {
          "description" : "Number of months to add to the prorated period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_proration_start_date" : {
          "description" : "The date, in yyyy-mm-dd format, from which the proration calculations begin. If this field is NULL, then the proration calculations begin from the current date. This date cannot be before the beginning of the current billing period.\n",
          "type" : "string"
        },
        "auto_offset_months_option" : {
          "description" : "Automatically set the offset for the billing anniversary month.",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_client_acct_group_id" : {
          "description" : "One-time collections account group  to use for this specific call.  Default collections group on the account is not changed.",
          "type" : "string"
        },
        "custom_rates" : {
          "description" : "An array of custom rates for the specified account number\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomRate"
          }
        },
        "effective_date" : {
          "description" : "If the assignment directive is for a future date assignment, this is the date, in yyyy-mm-dd format, on which the plan change will be executed. If this field is NULL, then the plan change will not happen until it is manually executed or until the effective_date is updated.\n",
          "type" : "string"
        },
        "offset_interval" : {
          "description" : "If assigning a change on an anniversary day, the number of billing periods by which to delay that change. If the new plan is different from the old plan, and this value is greater than 0, then the billing date continues to be the annniversary date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_unbilled_usage" : {
          "description" : "Specifies whether to invoice the unbilled usage if a plan is terminated in the middle of a billing period.\n",
          "type" : "string"
        },
        "force_master_bill_date_reset" : {
          "description" : "Overrides the \"Sync_mstr_bill_dates_on_1st_supp\" client-level setting that determines whether or not no-charge master plan billing dates should be reset when assigning a new supplemental plan or when the supplemental plan instance status is updated to a billable status. If this value is left empty, the client-level setting will take effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_rate_schedule_id" : {
          "description" : "Client-defined alternate rate schedule identifier to assign (if any). If none is specified, the default rate schedule number will be used.\n",
          "type" : "string"
        },
        "usage_accumulation_reset_months" : {
          "description" : "The number of reset months for each plan",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_pooling" : {
          "description" : "Indicates whether usage pooling is enabled for this plan instance. Allowable values are 'true' and 'false'.\n",
          "type" : "string"
        },
        "usage_threshold_applicability" : {
          "description" : "Usage tracking options on the plans in the account",
          "type" : "string"
        },
        "proration_invoice_timing" : {
          "description" : "Determines whether to create a separate invoice for prorated charges immediately, or defer to the next anniversary date. Note that this will override the Proration Invoice Timing configuration saved with the plan in the product catalog.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the plan instance.",
          "type" : "string"
        },
        "plan_update_services" : {
          "description" : "List of services associated with the plan being assigned or updated on the account.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUpdateService"
          }
        },
        "force_bill_date_reset" : {
          "description" : "When a master plan's status changes from non-billable to billable, this input will determine what the billing dates of the specific master plan and all associated supplemental plans anniversary date will be.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "GetAcctNotifyMethodMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_notify_method_m" ],
          "default" : "get_acct_notify_method_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "account_no" ]
    },
    "CreateWriteoffOrDisputeMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "writeoff_transactions" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WriteoffTransaction"
          }
        }
      }
    },
    "GetAcctCommentsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_comments_m" ],
          "default" : "get_acct_comments_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "date_range_start" : {
          "description" : "The start-date of the given date range.",
          "type" : "string"
        },
        "date_range_end" : {
          "description" : "The end-date of the given date range",
          "type" : "string"
        },
        "do_url_encoding" : {
          "description" : "A boolean value that informs the API method to do MIME Encoding of the data to be returned (if any).\n",
          "type" : "string"
        },
        "filter_application_id" : {
          "description" : "When provided, the search shall perform an exact equals to the input that is provided to fetch the relevant application ID and application date.\n",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "date_range_start", "date_range_end" ]
    },
    "OutRegUssConfigParam" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "param_name" : {
          "description" : "Client-assigned name of configuration parameter.\n",
          "type" : "string"
        },
        "param_val" : {
          "description" : "The value of this configuration parameter",
          "type" : "string"
        }
      }
    },
    "GetAcctOpenChargesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "total_amount" : {
          "description" : "The total amount of all the open charges",
          "type" : "number"
        },
        "open_charge_items" : {
          "description" : "Array of open charge line items.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OpenChargeItem"
          }
        }
      }
    },
    "GetAcctPlanHistoryMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "plan_history" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanHistory"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "string"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "UsageRecordNo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "usage_record_no" : {
          "description" : "The system-defined usage record ID of the usage to be discarded",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "MasterPlansSummary" : {
      "type" : "object",
      "description" : "List of master plan instances to be associated with the billing group.",
      "properties" : {
        "plan_instance_no" : {
          "description" : "The unique numberic identifier of the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The unique client-defined identifier of the master plan instance.",
          "type" : "string"
        }
      }
    },
    "CreateOrderWithPlanMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "order_no" : {
          "description" : "The unique identifier for an order in the context of an client_no and account_no.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "invoicing_error_code" : {
          "description" : "The error code generated by Aria when Aria attempted to generate a invoice",
          "type" : "string"
        },
        "invoicing_error_msg" : {
          "description" : "The text message associated with 'invoicing_error_code'",
          "type" : "string"
        },
        "statement_error_code" : {
          "description" : "The error code generated by Aria when Aria attempted to generate a statement",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_error_msg" : {
          "description" : "The text message associated with 'statement_error_code'",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : " Additional information passed to payment processor",
          "type" : "string"
        },
        "total_charges_before_tax" : {
          "description" : "Total charges on this invoice before taxes are applied",
          "type" : "string"
        },
        "total_tax_charges" : {
          "description" : "Total amount of taxes charged",
          "type" : "string"
        },
        "total_charges_after_tax" : {
          "description" : "Subtotal combining the total pre-tax charges and the total taxes charged",
          "type" : "string"
        },
        "total_credit" : {
          "description" : "Sum of all the credits on the invoice",
          "type" : "string"
        },
        "cart_inv_line_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CartInvLineItem"
          }
        },
        "third_party_errors" : {
          "description" : "Errors from third-party systems like taxation engines are returned here. Aria-generated error codes are returned in the error_code and error_msg fields at the root level of the API return.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThirdPartyError"
          }
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        }
      }
    },
    "QueuedChangeDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "queue_id" : {
          "description" : "Unique identifier associated with a specific queued plan change",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the plan instance",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the plan instance",
          "type" : "string"
        },
        "parent_plan_instance_no" : {
          "description" : "The unique identifier of the parent plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_parent_plan_instance_id" : {
          "description" : "The client-defined identifier of the parent plan instance.",
          "type" : "string"
        },
        "queued_action_status_cd" : {
          "description" : "The current status code associated with a queued plan change",
          "type" : "integer",
          "format" : "int64"
        },
        "queued_action_status_label" : {
          "description" : "The current status associated with a queued plan change",
          "type" : "string"
        },
        "current_plan_no" : {
          "description" : "Unique identifier of the plan currently associated with the plan instance",
          "type" : "integer",
          "format" : "int64"
        },
        "current_client_plan_id" : {
          "description" : "Client-defined identifier of the plan currently associated with the plan instance",
          "type" : "string"
        },
        "current_plan_name" : {
          "description" : "Name of the plan currently associated with the plan instance",
          "type" : "string"
        },
        "current_plan_units" : {
          "description" : "Number of plan units currently associated with the plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "current_plan_inst_status" : {
          "description" : "Status currently associated with the plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "current_rate_schedule_no" : {
          "description" : "Unique identifier of the rate schedule currently associated with the plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "current_client_rate_schedule_id" : {
          "description" : "Client-defined identifier of the rate schedule currently associated with the plan instance",
          "type" : "string"
        },
        "effective_date" : {
          "description" : "Date on which the queued plan change will take effect",
          "type" : "string"
        },
        "target_plan_no" : {
          "description" : "Unique identifier of the plan that will be associated with the plan instance after the queued plan change takes effect.",
          "type" : "integer",
          "format" : "int64"
        },
        "target_client_plan_id" : {
          "description" : "Client-defined identifier of the plan that will be associated with the plan instance after the queued plan change takes effect.",
          "type" : "string"
        },
        "target_plan_name" : {
          "description" : "Name of the plan that will be associated with the plan instance after the queued plan change takes effect",
          "type" : "string"
        },
        "target_plan_units" : {
          "description" : "Number of plan units that will be associated with the plan instance after the queued plan change takes effect",
          "type" : "integer",
          "format" : "int64"
        },
        "target_plan_inst_status" : {
          "description" : "Status of the plan instance after the queued plan change takes effect.",
          "type" : "integer",
          "format" : "int64"
        },
        "target_rate_schedule_no" : {
          "description" : "Unique identifier of the rate schedule that will be associated with the plan instance after the queued plan change takes effect",
          "type" : "integer",
          "format" : "int64"
        },
        "target_client_rate_schedule_id" : {
          "description" : "Client-defined identifier of the rate schedule that will be associated with the plan instance after the queued plan change takes effect",
          "type" : "string"
        },
        "queuing_user_id" : {
          "description" : "User ID that created the queued plan change.",
          "type" : "string"
        },
        "queuing_date" : {
          "description" : "Date on which the queued plan change was created",
          "type" : "string"
        },
        "deleting_user_id" : {
          "description" : "User ID that deleted the queued plan change",
          "type" : "string"
        },
        "deleting_date" : {
          "description" : "Date on which the queued plan change was deleted",
          "type" : "string"
        },
        "execute_immediately_user_id" : {
          "description" : "User ID that immediately executed the queued plan change",
          "type" : "string"
        },
        "execute_immediately_date" : {
          "description" : "Date on which the queued plan change was immediately executed",
          "type" : "string"
        },
        "editing_user_id" : {
          "description" : "User ID that most recently edited the queued plan change",
          "type" : "string"
        },
        "editing_date" : {
          "description" : "Date on which the queued plan change was most recently edited",
          "type" : "string"
        }
      }
    },
    "PlanDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "The unique ID of this plan",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The short name of this plan",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "The long description of this plan",
          "type" : "string"
        },
        "supp_plan_ind" : {
          "description" : "Whether or not this is a supplemental plan.  If not, it is a master plan",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_ind" : {
          "description" : "Whether or not this plan is currently billable",
          "type" : "integer",
          "format" : "int64"
        },
        "display_ind" : {
          "description" : "Whether or not this plan is to be displayed to the end-users",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_months" : {
          "description" : "Number of months in which the account will change from the current plan to the pre-defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_no" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "early_cancel_fee" : {
          "description" : "Fee charged for early cancellations.",
          "type" : "number"
        },
        "early_cancel_min_months" : {
          "description" : "Number of months during which early cancellation fees would apply on plan cancellation.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "suspension_period" : {
          "description" : "Pre-defined period in days in which an account will degrade to Suspended status (-1) if action is not taken such as a plan or status change.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "new_acct_status" : {
          "description" : "The status code to assert for the new account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_acct_status" : {
          "description" : "Default status for new accounts created on this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_acct_status_days" : {
          "description" : "Number of days in which an account will change from the initial status code to the pre-defined rollover status code.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_months" : {
          "description" : "Initial free months.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_2_assign_on_susp" : {
          "description" : "Plan to assign when an account on this plan is suspended.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "default_notify_method" : {
          "description" : "Default notification method given to an account that is assigned to this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "prepaid_ind" : {
          "description" : "Indicates whether or not this plan is prepaid",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for which to query available child plans",
          "type" : "string"
        },
        "client_rollover_plan_id" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined client rollover plan ID.\n",
          "type" : "string"
        },
        "client_plan_id_2_assign_on_susp" : {
          "description" : "Client-defined Plan ID to assign when an account on this plan is suspended.\n",
          "type" : "string"
        },
        "proration_invoice_timing_cd" : {
          "description" : "Indicates whether to defer the pro-rated charges to the next anniversary date or to create a seperate invoice immediately.\n",
          "type" : "string"
        },
        "rollover_plan_duration" : {
          "description" : "Duration of the plan rollover period (used in conjunction with rollover_plan_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_uom_cd" : {
          "description" : "Units associated with the duration of the plan rollover period (used in conjunction with rollover_plan_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_duration" : {
          "description" : "Duration of the initial free period (used in conjunction with init_free_period_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_uom_cd" : {
          "description" : "Units associated with the duration of the initial free period (used in conjunction with init_free_period_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_plan_status_cd" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_duration" : {
          "description" : "Duration of the plan status rollover period, after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status (used in conjuction with rollover_plan_status_uom_cd).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_uom_cd" : {
          "description" : "Units associated with the duration of the plan status rollover period after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status. (used in conjunction with rollover_plan_status_duration).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_cd" : {
          "description" : "Status used for the master plan instance at the completion of the plan status rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_rate_schedules_details" : {
          "description" : "An array of the rate schedules for the requested plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanRateSchedulesDetail"
          }
        },
        "contract_rollover_plan_no" : {
          "description" : "Pre-defined plan to be used as the rollover plan at the completion of the contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_plan_id" : {
          "description" : "Client-defined ID of the pre-defined plan to be used as the rollover plan at the completion of a contract.\n",
          "type" : "string"
        },
        "contract_rollover_rate_sched" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractRolloverRateSched"
          }
        },
        "plan_translation_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanTranslationInfo"
          }
        }
      }
    },
    "CmUnapplyDetail" : {
      "type" : "object",
      "description" : "Array of credit memo line unapplication.",
      "properties" : {
        "cm_no" : {
          "description" : "The unique Aria-generated number for the credit memo.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_line_no" : {
          "description" : "Credit memo line number.",
          "type" : "integer",
          "format" : "int64"
        },
        "cm_transaction_id" : {
          "description" : "Credit memo line transaction id.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_no" : {
          "description" : "The invoice number this credit memo line unapplies from.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_line_no" : {
          "description" : "The invoice line number this credit memo line unapplies from.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_line_transaction_id" : {
          "description" : "The invoice line transaction id.",
          "type" : "integer",
          "format" : "int64"
        },
        "line_unapply_amount" : {
          "description" : "Gross amount to be unapplied from the invoice line.",
          "type" : "number"
        }
      },
      "required" : [ "cm_no", "invoice_no" ]
    },
    "SettleDisputeHoldMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "settle_dispute_hold_m" ],
          "default" : "settle_dispute_hold_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "dispute_no" : {
          "description" : "Dispute number.",
          "type" : "integer",
          "format" : "int64"
        },
        "settlement_action" : {
          "description" : "The amount need to be writeoff/dispute.",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Comments to settle dispute.",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no", "dispute_no", "settlement_action" ]
    },
    "GetSuppFieldValuesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_supp_field_values_m" ],
          "default" : "get_supp_field_values_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "field_name" : {
          "description" : "The supplemental field name.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no", "field_name" ]
    },
    "ClientEligiblePlanInstance" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "client_plan_instance_id" : {
          "description" : "Client-defined unique eligible plan IDs.",
          "type" : "string"
        },
        "client_plan_instance_service_id" : {
          "description" : "Client-defined unique eligible service ids.",
          "type" : "string"
        }
      }
    },
    "PlanNsoInclList" : {
      "type" : "object",
      "description" : "Non-Subscription Offerings inclusion list that is in addition to NSOs that are  bundled with the plan\\n",
      "properties" : {
        "item_no" : {
          "description" : "Inventory item number",
          "type" : "integer",
          "format" : "int64"
        },
        "active_ind" : {
          "description" : "Inventory item status.",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ClientEligibleServicePlanId" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "client_plan_id" : {
          "description" : "If used, specifies the plan(s) to which the credit is applied. If the credit is to be applied as an offset to ANY charge incurred by the account holder, leave this field empty. If the credit is to be applied to offset a specific type of charge, then this field and the client_service_id field must be valued.\n",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "If used, specifies the service to which the credit is applied. If you value this field, you must also value either the client_plan_id field. If the credit to be created is to be applied to offset a specific type of charge, then that specific client_plan_id and client_service_id combination referencing that type of charge must be supplied in these two fields. <p> If you use this array to enter multiple service numbers, you must enter the same number of plans in the client_plan_id array, and the client_plan_id and its corresponding client_service_id must appear in the same sequence in each array, or the API call fails.\n",
          "type" : "string"
        }
      }
    },
    "GetClientPlanServiceRatesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_client_plan_service_rates_m" ],
          "default" : "get_client_plan_service_rates_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "plan_no" : {
          "description" : "The unique plan identifier.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no" : {
          "description" : "Aria-assigned unique service identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_rate_schedule_no" : {
          "description" : "Alternative Rate Schedule Number. The alt_rate_schedule_no is the unique identifier for an alternative rate schedule that can be assigned to the account holder in place of the default rate schedule. This is often done by CSR's to provide special compensation or discounts as incentives to account holders.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for which to query available child plans",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "A multidimensional array of client-defined Service ID for this plan.\n",
          "type" : "string"
        },
        "client_alt_rate_schedule_id" : {
          "description" : "Client-defined alternate rate schedule number to assign (if any). If none is specified, the default rate schedule number will be used.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "AcctNsoInclList" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "item_no" : {
          "description" : "The unique ID of the item being retrieved",
          "type" : "integer",
          "format" : "int64"
        },
        "purchase_scope" : {
          "description" : "Purchase scope for inventory item, default is null (both 0 and 1)",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GenStatementMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "gen_statement_m" ],
          "default" : "gen_statement_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The unique identifier for the master plan instance",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance",
          "type" : "string"
        },
        "send_email" : {
          "description" : "A boolean directive to send the statement via email to the account holder.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "GetWriteoffDetailsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_writeoff_details_m" ],
          "default" : "get_writeoff_details_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "writeoff_transaction_id" : {
          "description" : "The transaction ID of the write-off.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "writeoff_transaction_id" ]
    },
    "GetFamilyTransHistoryMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_family_trans_history_m" ],
          "default" : "get_family_trans_history_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "parent_acct_no" : {
          "description" : "The parent account for this child account. Designating a parent account number implies the account holder is under a parent account umbrella.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "Aria generated unique identifier for the master plan instance",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance",
          "type" : "string"
        },
        "do_multi_level" : {
          "description" : "Allow multi-level account hierarchies.",
          "type" : "string"
        },
        "trans_type" : {
          "description" : "Valid transaction type to use when searching family transaction history.",
          "type" : "integer",
          "format" : "int64"
        },
        "start_date" : {
          "description" : "Specifies start date. The date is in the format yyyy-mm-dd",
          "type" : "string"
        },
        "end_date" : {
          "description" : "Specifies end date. The date is in the format yyyy-mm-dd",
          "type" : "string"
        },
        "record_limit" : {
          "description" : "This is the maximum number of records to retrieve from the query.",
          "type" : "integer",
          "format" : "int64"
        },
        "include_void_transactions" : {
          "description" : "Allows whether or not to include void transactions.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetEmailTemplatesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "templates_by_client" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TemplatesByClient"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GenRandomStringMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "random_string" : {
          "description" : "Random string generated by the API method.",
          "type" : "string"
        }
      }
    },
    "GetSuppPlansByPromoCodeMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "plans_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlansDetail"
          }
        }
      }
    },
    "GetInstanceContractMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "type_no" : {
          "description" : "The type of contract end action to be enforced by this contract.\n",
          "type" : "string"
        },
        "length_months" : {
          "description" : "The number of months, starting from start_date, that the given contract will be in effect.\n",
          "type" : "string"
        },
        "create_comments" : {
          "description" : "CSR or API-provided comments provided at time of contract creation.\n",
          "type" : "string"
        },
        "update_comments" : {
          "description" : "Comments provided at time of last contract update.",
          "type" : "string"
        },
        "create_date" : {
          "description" : "The date the contract was created.",
          "type" : "string"
        },
        "update_date" : {
          "description" : "The date the contract was last modified.",
          "type" : "string"
        },
        "start_date" : {
          "description" : "Specifies contract start date. The date is in the format yyyy-mm-dd\n",
          "type" : "string"
        },
        "end_date" : {
          "description" : "Contract end date",
          "type" : "string"
        },
        "status_code" : {
          "description" : "Status code of this contract.",
          "type" : "string"
        },
        "contract_plan_instance_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractPlanInstanceDetail"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "string"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "PlanInstanceFieldsInfo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "field_no" : {
          "description" : "Product field number",
          "type" : "integer",
          "format" : "int64"
        },
        "field_name" : {
          "description" : "Product field name",
          "type" : "string"
        },
        "field_value" : {
          "description" : "Value of the product field. Values for product fields that do not match what is expected based on product field configuration are ignored.\n",
          "type" : "string"
        }
      }
    },
    "GetPaymentApplicationDtlsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "payment_application_details" : {
          "description" : "An Array of account payment application details.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentApplicationDetail"
          }
        }
      }
    },
    "SettleAccountBalanceBulkMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred. \"Batch successfully submitted\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "PlanUnitInstField" : {
      "type" : "object",
      "description" : "Array of client-defined plan unit instance fields\\n",
      "properties" : {
        "field_name" : {
          "description" : "Field name of plan unit instance field. Entering a value in this field creates a field if it does not exist, or assigns it if it does exist.\n",
          "type" : "string"
        },
        "field_value" : {
          "description" : "Value stored under this field",
          "type" : "string"
        },
        "plan_unit_inst_directive" : {
          "description" : "Directive is mandatory if field name/value pair are specified",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AllPlanServiceRate" : {
      "type" : "object",
      "description" : "All rates for all rate schedules and currencies for this plan",
      "properties" : {
        "schedule_no" : {
          "description" : "Rate schedule number",
          "type" : "integer",
          "format" : "int64"
        },
        "client_rate_schedule_id" : {
          "description" : "Client assigned unique rate schedule number",
          "type" : "string"
        },
        "future_rate" : {
          "description" : "Indicates whether future rates are captured or not.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "future_change_date" : {
          "description" : "Future Change Date of the rates.",
          "type" : "string"
        },
        "followup_rs_no" : {
          "description" : "Aria internal ID of follow-up default rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "client_followup_rs_id" : {
          "description" : "Client-defined ID of followup rate schedule",
          "type" : "string"
        },
        "plan_service_rates" : {
          "description" : "Represents the rates for the default rate schedule for the default currency for the plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanServiceRate"
          }
        }
      }
    },
    "DiscountRule" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rule_no" : {
          "description" : "The unique ID of this discount rule",
          "type" : "integer",
          "format" : "int64"
        },
        "client_rule_id" : {
          "description" : "Client-defined name or ID for this discount rule",
          "type" : "string"
        },
        "rule_name" : {
          "description" : "The name of this discount rule",
          "type" : "string"
        },
        "scope_no" : {
          "description" : "The applicability of this discount rule",
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "description" : "The long description of this discount rule",
          "type" : "string"
        },
        "flat_percent_ind" : {
          "description" : "Whether or not this is a flat discount or a percentage based one",
          "type" : "string"
        },
        "currency_cd" : {
          "description" : "The currency code to which this discount rule applies",
          "type" : "string"
        },
        "amount" : {
          "description" : "The amount of discount, which is either a flat amount or a percentage, based on the value of flat_percent_ind",
          "type" : "number"
        },
        "inline_offset_ind" : {
          "description" : "Whether or not this discount is applied inline or as its own line",
          "type" : "string"
        },
        "duration_type_ind" : {
          "description" : "Indicates whether this discount rule expires after a specific duration, or after a number of uses",
          "type" : "string"
        },
        "max_applicable_months" : {
          "description" : "How many months this discount rule will apply",
          "type" : "integer",
          "format" : "int64"
        },
        "max_applications_per_acct" : {
          "description" : "The maximum number of times a single account can use this discount rule",
          "type" : "integer",
          "format" : "int64"
        },
        "ext_description" : {
          "description" : "A user-friendly public facing description",
          "type" : "string"
        },
        "alt_service_no_2_apply" : {
          "description" : "The alternate service number to use on the eventual invoice for this discount rule",
          "type" : "integer",
          "format" : "int64"
        },
        "discount_bundle_no" : {
          "description" : "If this rule is part of multiple discount bundles, they are all listed here",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DiscountBundleNo"
          }
        }
      }
    },
    "CollectionError" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "collection_error_code" : {
          "description" : "If a collection is attempted, returns the error code associated with the collection.",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_error_msg" : {
          "description" : "The error message associated with collection_error_code.",
          "type" : "string"
        }
      }
    },
    "GetCcUuidMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_cc_uuid_m" ],
          "default" : "get_cc_uuid_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "cc_number" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "cc_number" ]
    },
    "GetRegUssConfigParamsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "out_reg_uss_config_params" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OutRegUssConfigParam"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "DiscardUsageMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "discard_usage_m" ],
          "default" : "discard_usage_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "usage_record_nos" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsageRecordNo"
          }
        },
        "client_record_ids" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClientRecordId"
          }
        },
        "exclusion_reason_cd" : {
          "description" : "The exclude reason code, defining why these usage records are being removed",
          "type" : "integer",
          "format" : "int64"
        },
        "exclusion_comment" : {
          "description" : "Optional comment on the reason behind this API call",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "TransferAccountBalanceMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "transfer_account_balance_m" ],
          "default" : "transfer_account_balance_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "source_account_no" : {
          "description" : "The Source account is the account who's entire balance will be credited and a the amount applied to the specified Target account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "target_account_no" : {
          "description" : "The Target account is the account that will received a debit for the entire balance of the Source account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions.",
          "type" : "string",
          "maxLength" : 50
        },
        "target_master_plan_instance_no" : {
          "description" : "The MPI associated with the target account that will receive a debit for the  entire balance of the Source account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "target_client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "source_account_no", "target_account_no" ]
    },
    "GetAllActionsByReceiptIdMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "receipt_action" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReceiptAction"
          }
        }
      }
    },
    "GetAcctGroupsByAcctMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_groups_by_acct_m" ],
          "default" : "get_acct_groups_by_acct_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "user_id" : {
          "description" : "Account's user ID. Alternative to using acct_no.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "AuthorizeElectronicPaymentMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "Payment Gateway / Payment Processor ID used to identify the transaction requiring 3DSecure authorization. Please note that this field is used in other places to identify a particular ID for payment gateway orders and 3DSecure transactions.\n",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor",
          "type" : "string"
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        },
        "proc_payer_auth_request" : {
          "description" : "The unique number for a given authorization.",
          "type" : "string"
        },
        "proc_redirect_issuer_url" : {
          "description" : "The URL where you must post the 3DS data to. This will redirect the shopper.",
          "type" : "string"
        },
        "proc_card_available_balance" : {
          "description" : "Additional information passed back from processor for available balance on prepaid, gift card, and in some cases credit cards, if available.",
          "type" : "number"
        },
        "proc_prepaid_ind" : {
          "description" : "Additional information passed back from processor identifying this card as a prepaid card (if available).",
          "type" : "string"
        },
        "proc_prepaid_reloadable" : {
          "description" : "Additional information passed back from processor identifying whether prepaid card is reloadable (if available).",
          "type" : "string"
        },
        "proc_prepaid_card_type" : {
          "description" : "Additional information passed back from processor to categorize the type of prepaid card (if available).",
          "type" : "string"
        },
        "proc_affluence_type" : {
          "description" : "Additional information passed back from processor indicating if card is affluent.",
          "type" : "string"
        },
        "proc_issuing_country" : {
          "description" : "Additional information passed back from processor indicating issuing country for the card.",
          "type" : "string"
        },
        "proc_card_product_type" : {
          "description" : "Additional information passed back from processor indicating whether the submitted card is a commercial or consumer card, providing you with additional data useful when analyzing sales patterns and/or planning marketing campaigns.",
          "type" : "string"
        }
      }
    },
    "ValidatePaymentInformationMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "collection_errors" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CollectionError"
          }
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor",
          "type" : "string"
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        },
        "proc_card_available_balance" : {
          "description" : "Additional information passed back from processor for available balance on prepaid, gift card, and in some cases credit cards, if available.",
          "type" : "number"
        },
        "proc_prepaid_ind" : {
          "description" : "Additional information passed back from processor identifying this card as a prepaid card (if available).",
          "type" : "string"
        },
        "proc_prepaid_reloadable" : {
          "description" : "Additional information passed back from processor identifying whether prepaid card is reloadable (if available).",
          "type" : "string"
        },
        "proc_prepaid_card_type" : {
          "description" : "Additional information passed back from processor to categorize the type of prepaid card (if available).",
          "type" : "string"
        },
        "proc_affluence_type" : {
          "description" : "Additional information passed back from processor indicating if card is affluent.",
          "type" : "string"
        },
        "proc_issuing_country" : {
          "description" : "Additional information passed back from processor indicating issuing country for the card.",
          "type" : "string"
        },
        "proc_card_product_type" : {
          "description" : "Additional information passed back from processor indicating whether the submitted card is a commercial or consumer card, providing you with additional data useful when analyzing sales patterns and/or planning marketing campaigns.",
          "type" : "string"
        }
      }
    },
    "SurchargePlan" : {
      "type" : "object",
      "description" : "Represents all the plans of the surcharge",
      "properties" : {
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "Specifies the name of the plan associated with the plan_no.",
          "type" : "string"
        }
      }
    },
    "SuppPlansDtlBySuppField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "The unique ID of this plan",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_name" : {
          "description" : "The short name of this plan",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "The long description of this plan",
          "type" : "string"
        },
        "billing_ind" : {
          "description" : "Whether or not this plan is currently billable",
          "type" : "integer",
          "format" : "int64"
        },
        "display_ind" : {
          "description" : "Whether or not this plan is to be displayed to the end-users",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_months" : {
          "description" : "Number of months in which the account will change from the current plan to the pre-defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_no" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined rollover plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_2_assign_on_susp" : {
          "description" : "Plan to assign when an account on this plan is suspended.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "default_notify_method" : {
          "description" : "Default notification method given to an account that is assigned to this plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "prepaid_ind" : {
          "description" : "Indicates whether or not this plan is prepaid",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for which to query available child plans",
          "type" : "string"
        },
        "client_rollover_plan_id" : {
          "description" : "Pre-defined plan to which the account will change based on the defined rollover_months value; the rollover record is created when an account is placed on a plan with a defined client rollover plan ID.\n",
          "type" : "string"
        },
        "client_plan_id_2_assign_on_susp" : {
          "description" : "Client-defined Plan ID to assign when an account on this plan is suspended.\n",
          "type" : "string"
        },
        "proration_invoice_timing_cd" : {
          "description" : "Indicates whether to defer the pro-rated charges to the next anniversary date or to create a seperate invoice immediately.\n",
          "type" : "string"
        },
        "rollover_plan_duration" : {
          "description" : "Duration of the plan rollover period (used in conjunction with rollover_plan_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_uom_cd" : {
          "description" : "Units associated with the duration of the plan rollover period (used in conjunction with rollover_plan_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_duration" : {
          "description" : "Duration of the initial free period (used in conjunction with init_free_period_uom_cd).",
          "type" : "integer",
          "format" : "int64"
        },
        "init_free_period_uom_cd" : {
          "description" : "Units associated with the duration of the initial free period (used in conjunction with init_free_period_duration).",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_plan_status_cd" : {
          "description" : "Default status used when master plan is initially assigned on an account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_duration" : {
          "description" : "Duration of the plan status rollover period, after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status (used in conjuction with rollover_plan_status_uom_cd).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_uom_cd" : {
          "description" : "Units associated with the duration of the plan status rollover period after which the initial plan status on the master plan instance will change to the pre-defined rollover plan status. (used in conjunction with rollover_plan_status_duration).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_plan_status_cd" : {
          "description" : "Status used for the master plan instance at the completion of the plan status rollover period.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_rate_schedules_details" : {
          "description" : "An array of the rate schedules for the requested plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanRateSchedulesDetail"
          }
        },
        "contract_rollover_plan_no" : {
          "description" : "Pre-defined plan to be used as the rollover plan at the completion of the contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_rollover_client_plan_id" : {
          "description" : "Client-defined ID of the pre-defined plan to be used as the rollover plan at the completion of a contract.\n",
          "type" : "string"
        },
        "contract_rollover_rate_sched" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractRolloverRateSched"
          }
        },
        "plan_translation_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanTranslationInfo"
          }
        }
      }
    },
    "GetAcctWriteoffOrDisputesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_writeoff_or_disputes_m" ],
          "default" : "get_acct_writeoff_or_disputes_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "dispute_or_writeoff_flag" : {
          "description" : "Specifies if the api should return write off details or dispute details or both",
          "type" : "integer",
          "format" : "int64"
        },
        "details_flag" : {
          "description" : "Flag to indicate whether the api will return writeoff invoices or not.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GenStatementMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "statement_no" : {
          "description" : "The unique statement number.",
          "type" : "integer",
          "format" : "int64"
        },
        "seq_statement_id" : {
          "description" : "The unique sequential statement number.",
          "type" : "string"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "PlanServiceRate" : {
      "type" : "object",
      "description" : "Represents the rates for the default rate schedule for the default currency for the plan",
      "properties" : {
        "rate_seq_no" : {
          "description" : "Sequential number in the rate schedule for dertermining tiers",
          "type" : "integer",
          "format" : "int64"
        },
        "from_unit" : {
          "description" : "Tiered Units (from) This value represents the start of a tiered range of values.\n",
          "type" : "number"
        },
        "to_unit" : {
          "description" : "Tiered Units (to) This value represents the end of the range for a single tier of values.\n",
          "type" : "number"
        },
        "rate_per_unit" : {
          "description" : "The cost per unit of this service over the time period the plan is billed for",
          "type" : "number"
        },
        "future_rate_per_unit" : {
          "description" : "The future cost per unit of this service over the time period the plan is billed for",
          "type" : "number"
        },
        "monthly_fee" : {
          "description" : "If the plan interval is more than one month, this field will rate per unit per month",
          "type" : "number"
        },
        "client_rate_schedule_id" : {
          "description" : "Client assigned unique rate schedule number",
          "type" : "string"
        },
        "rate_tier_description" : {
          "description" : "Rate Tier Description",
          "type" : "string"
        }
      }
    },
    "MpCoupon" : {
      "type" : "object",
      "description" : "An array of coupon details for the master plan instance.",
      "properties" : {
        "mp_coupon_cd" : {
          "description" : "The coupon codes to assign to this master plan instance, if any",
          "type" : "string"
        }
      }
    },
    "ReverseAuthorizedElectronicPaymentMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "applied_total_reversal_amount" : {
          "description" : "The total amount that has been reversed.",
          "type" : "number"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_auth_id" : {
          "description" : "The processor authorization ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor",
          "type" : "string"
        }
      }
    },
    "RecordUsageMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "record_usage_m" ],
          "default" : "record_usage_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "userid" : {
          "description" : "Client(or user)-assigned account identifier. If \"acct_no\" is not provided, must correctly identify the account to which the given usage record is to be assigned. All usage records must identify either an \"acct_no\" or a \"userid\".\n",
          "type" : "string"
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined identifier for the master plan instance.",
          "type" : "string"
        },
        "usage_type" : {
          "description" : "Aria-assigned identifier for the type of usage being recorded. Either this field OR \"usage_type_code\" must be passed into the API to denote which usage type to record. Please consult Aria support representatives for a list of allowable usage_type values for the given client.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_units" : {
          "description" : "The volume of usage consumed by the account holder.\n",
          "type" : "number"
        },
        "usage_date" : {
          "description" : "The date the usage was consumed by the account holder in the format yyyy-mm-dd hh24:mi:ss. The timestamp is optional and will default to 00:00 hrs.\n",
          "type" : "string"
        },
        "billable_units" : {
          "description" : "If the number of units of usage incurred differs from the number of units to be accrued for billing purposes, this fields provides for the optional designation of the billable units. If null, the number of units provided in \"usage_units\" will be billed.\n",
          "type" : "number"
        },
        "amt" : {
          "description" : "Optional currency value (with up to 2 positions after the decimal) denoting a specific total amount for which the account holder should be charged for this specific usage record. If this field (and field \"\"rate\"\") are null (the standard case) the system will aggregate the number of units on this usage record with all other usage records of the same type on this account within the same billing period at invoicing time and bill the account holder for the aggregate total per the rate structures defined by their applicable service plans.This field should not be used under normal circumstances.\"\n",
          "type" : "number"
        },
        "rate" : {
          "description" : "Optional currency value (with up to 5 positions after the decimal) denoting a specific amount per unit for which the account holder should be charged for each unit of usage denoted on this specific usage record. This field is ignored if a value is provided in field \"\"amt\"\". If this field (and field \"\"amt\"\") are null (the standard case) the system will aggregate the number of units on this usage record with all other usage records of the same type on this account within the same billing period at invoicing time and bill the account holder for the aggregate total per the rate structures defined by their applicable service plans. This field should not be used under normal circumstances.\"\n",
          "type" : "number"
        },
        "telco_from" : {
          "description" : "The unconstrained string identifying the \"sender\" of the message represented by this usage record. Intended for usage records that represent a telecom-based form of usage whereby the sender/originator and the recipient/terminator of the message/usage record are desired to be recorded as notational-only elements (e.g. a phone call whereby the \"from\" telephone number and the \"to\" telephone number are desired as notational elements). Does not effect assignment, categorization, rating, or billing/invoicing in any way.\n",
          "type" : "string"
        },
        "telco_to" : {
          "description" : "The unconstrained string identifying the \"recipient\" of the message represented by this usage record. Intended for usage records that represent a telecom-based form of usage whereby the sender/originator and the recipient/terminator of the message/usage record are desired to be recorded as notational-only elements (e.g. a phone call whereby the \"from\" telephone number and the \"to\" telephone number are desired as notational elements). Does not effect assignment, categorization, rating, or billing/invoicing in any way.\n",
          "type" : "string"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.",
          "type" : "string"
        },
        "exclude_from_billing" : {
          "description" : "Determines whether or not the given usage record should be entirely and permanently excluded from inclusion in any future billing (invoicing) process. Setting this value to \"true\" results in the usage record being recorded for notational purposes only.\n",
          "type" : "string"
        },
        "exclusion_comments" : {
          "description" : "Free text comments intended to explain the decision to exclude this record from billing. Only honored/recorded if value passed to \"exclude_from_billing\" = \"true\".\n",
          "type" : "string"
        },
        "qualifier_1" : {
          "description" : "Client-defined string of any value meant for internal use and/or display to customers in statements.\n",
          "type" : "string"
        },
        "qualifier_2" : {
          "description" : "Client-defined string of any value meant for internal use and/or display to customers in statements.\n",
          "type" : "string"
        },
        "qualifier_3" : {
          "description" : "Client-defined string of any value meant for internal use and/or display to customers in statements.\n",
          "type" : "string"
        },
        "qualifier_4" : {
          "description" : "Client-defined string of any value meant for internal use and/or display to customers in statements.\n",
          "type" : "string"
        },
        "parent_usage_rec_no" : {
          "description" : "The Aria-assigned parent usage record identifier for a child account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type_code" : {
          "description" : "Client-assigned identifier for the type of usage being recorded. Either this field OR \"usage_type\" must be passed into the API to denote which usage type to record.\n",
          "type" : "string"
        },
        "client_record_id" : {
          "description" : "Client-provided identifier for a given usage record\n",
          "type" : "string"
        },
        "caller_id" : {
          "description" : "Client-provided unique identifier for the calling user or system.\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions",
          "type" : "string",
          "maxLength" : 50
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "usage_units" ]
    },
    "InvCalcOut" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "tax_item_code" : {
          "description" : "Tax Item Code",
          "type" : "integer",
          "format" : "int64"
        },
        "tax_item_desc" : {
          "description" : "Description of the Tax Item",
          "type" : "string"
        },
        "tax_item_amount" : {
          "description" : "Calculated amount of the Tax item",
          "type" : "number"
        }
      }
    },
    "GetReversibleInvsByPaymentMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_reversible_invs_by_payment_m" ],
          "default" : "get_reversible_invs_by_payment_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_transaction_id" : {
          "description" : "The payment transaction by which to search for invoices",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "payment_transaction_id" ]
    },
    "SpecificInvoice" : {
      "type" : "object",
      "description" : "Array of transaction details.",
      "properties" : {
        "invoice_no" : {
          "description" : "The invoice number is used to identify object to which credit are applied.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_credit_amount" : {
          "description" : "The amount of credit to be applied against the invoice_no.\n",
          "type" : "number"
        }
      }
    },
    "ContractPlanInstancesUpdate" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_no" : {
          "description" : "The Aria-assigned unique identifier of the master plan instance or supplemental plan instance to be added to or removed from the contract (per the modify_directive input parameter).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the master plan instance or supplemental plan instance to be added to or removed from the contract (per the modify_directive input parameter).\n",
          "type" : "string"
        },
        "rollover_plan_no" : {
          "description" : "Note that if the target rollover plan has a surcharge that has already been associated with this account, when the plan rollover occurs at the completion of this contract, the surcharge for this plan may be ignored (depending on the client parameter determining whether duplicate surcharges are permitted). The surcharge at the account level will remain in effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_client_plan_id" : {
          "description" : "Note that if the target rollover plan has a surcharge that has already been associated with this account, when the plan rollover occurs at the completion of this contract, the surcharge for this plan may be ignored (depending on the client parameter determining whether duplicate surcharges are permitted). The surcharge at the account level will remain in effect.\n",
          "type" : "string"
        },
        "rollover_rate_sched_no" : {
          "description" : "Pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "rollover_client_rate_sched_id" : {
          "description" : "Client-defined ID of the pre-defined rate schedule to be used as the rollover rate schedule at the completion of the contract.\n",
          "type" : "string"
        }
      }
    },
    "ReplaceRegUssConfigParamsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "replace_reg_uss_config_params_m" ],
          "default" : "replace_reg_uss_config_params_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "set_name" : {
          "description" : "Client-defined identifier for this set of global application configuration parameters.\n",
          "type" : "string"
        },
        "in_reg_uss_config_params" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InRegUssConfigParam"
          }
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "set_name", "in_reg_uss_config_params" ]
    },
    "GetStatementForInvoiceMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_statement_for_invoice_m" ],
          "default" : "get_statement_for_invoice_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "do_encoding" : {
          "description" : "True indicates to acquire the message size after doing MIME encoding, False acquires message size without MIME encoding.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "invoice_no" ]
    },
    "ReinstateTransactionMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "reinstate_transaction_m" ],
          "default" : "reinstate_transaction_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction\n",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "account_no", "transaction_id" ]
    },
    "ApplyCouponToAcctMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "apply_coupon_to_acct_m" ],
          "default" : "apply_coupon_to_acct_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "coupon_code" : {
          "description" : "The code of the coupon to which to apply the discount.  If code is not valid for any reason, an appropriate error code is returned and the entire transaction (including the supp plan assignment and any possible invoice creation) is rolled back.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "coupon_code" ]
    },
    "FraudControlField" : {
      "type" : "object",
      "description" : "List of key-value pair parameters to control Fraud Control.",
      "properties" : {
        "fraud_control_field_name" : {
          "description" : "List of Fraud Control field names.",
          "type" : "string"
        },
        "fraud_control_field_value" : {
          "description" : "List of Fraud Control field values.",
          "type" : "string"
        }
      }
    },
    "GetCatalogHierarchyMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_catalog_hierarchy_m" ],
          "default" : "get_catalog_hierarchy_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "promo_code" : {
          "description" : "Filter the results based on an Aria promo code.  Return all master plans for a specified promo_code (promo_code).  If no promo code is specified it will return all master plans.\n",
          "type" : "string"
        },
        "include_plan_hierarchy" : {
          "description" : "If the include_plan_hierarchy parameter is set to true, then all of the child plans down to the bottom level of the plan hierarchy will be returned.  If no value specified return the entire hierarchy.\n",
          "type" : "string"
        },
        "parent_plan_no" : {
          "description" : "Aria-assigned unique plan identifier for the parent plan. If provided this returns all the plans one level below the parent_plan_no.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_parent_plan_id" : {
          "description" : "Client-defined Plan ID to query for available child plans",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "include_parent_plan_list" : {
          "description" : "Indicates whether to include the list of parent plans in the all_plans_basic_details array.If no value specified,the list of parent plans is returned.\n",
          "type" : "string"
        },
        "include_child_plans_list" : {
          "description" : "Indicates whether to include the list of child plans in the all_plans_basic_details array.If no value is specified, the list of child plans is returned.\n",
          "type" : "string"
        },
        "include_total_count" : {
          "description" : "Indicates whether to include the total count of plans.If set to true it will return the total count of plan\n",
          "type" : "string"
        },
        "limit" : {
          "description" : "Limits the number of records returned in the all_plan_basic_details array. Min of 1 and Max 999. If no value specified, the default is 100.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "offset" : {
          "description" : "The number of records to skip in the all_plan_basic_details array. Min of 0 and Max 998. If no value specified the default is 0.\n",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "PromotionalPlanSet" : {
      "type" : "object",
      "description" : "A grouping of plans based on promo code",
      "properties" : {
        "promo_set_no" : {
          "description" : "The ID of this promotional plan set",
          "type" : "integer",
          "format" : "int64"
        },
        "promo_set_name" : {
          "description" : "The name of this promotional plan set",
          "type" : "string"
        },
        "promo_set_desc" : {
          "description" : "The long description of this promotional plan set",
          "type" : "string"
        },
        "promotions_for_set" : {
          "description" : "The promo codes associated with this group of plans",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PromotionsForSet"
          }
        },
        "client_promo_set_id" : {
          "description" : "Client-defined ID of this promotional plan set",
          "type" : "string"
        }
      }
    },
    "UpdateOrderMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_order_m" ],
          "default" : "update_order_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "order_no" : {
          "description" : "The unique identifier for an order in the context of an client_no and account_no.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_immediately" : {
          "description" : "Indicates whether to bill the account holder immediately or, if not set bill on next billing anniversary date.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_pay_method" : {
          "description" : "If you want to use the account's current form of payment, leave this field empty. If you want to use an alternate credit card, enter '1' in this field.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_number" : {
          "description" : "Credit card number.",
          "type" : "string"
        },
        "cc_expire_mm" : {
          "description" : "Expiration month for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_expire_yyyy" : {
          "description" : "Expiration year for the credit card payment instrument.",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_routing_num" : {
          "description" : "The American Banking Association (ABA) routing number for the financial institution.\n",
          "type" : "string"
        },
        "bank_acct_num" : {
          "description" : "The bank account number.\n",
          "type" : "string"
        },
        "bill_company_name" : {
          "description" : "Company name of the billing contact.",
          "type" : "string"
        },
        "bill_first_name" : {
          "description" : "First name of the billing contact.",
          "type" : "string"
        },
        "bill_middle_initial" : {
          "description" : "Middle initial of the billing contact.",
          "type" : "string"
        },
        "bill_last_name" : {
          "description" : "Last name of the billing contact.",
          "type" : "string"
        },
        "bill_address1" : {
          "description" : "First address line of the billing contact.",
          "type" : "string"
        },
        "bill_address2" : {
          "description" : "Second address line of the billing contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "bill_city" : {
          "description" : "City of the billing contact.",
          "type" : "string"
        },
        "bill_locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "bill_state_prov" : {
          "description" : "State or Province of the billing contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "bill_zip" : {
          "description" : "Zip Code of the billing contact",
          "type" : "string"
        },
        "bill_country" : {
          "description" : "Country of the billing contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "bill_phone" : {
          "description" : "Phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone" : {
          "description" : "Work phone number of the billing contact.",
          "type" : "string"
        },
        "bill_work_phone_extension" : {
          "description" : "Work phone extenstion of the billing contact",
          "type" : "string"
        },
        "cvv" : {
          "description" : "Card Verification Value, used to help verify a transaction is being requested by the card holder since this value is physically printed on the credit card.\n",
          "type" : "string"
        },
        "bill_address3" : {
          "description" : "The third line of the billing address.",
          "type" : "string"
        },
        "do_write" : {
          "description" : "Boolean indicator that specifies whether to actually perform the requested operation. If 'false' is passed in this field, Aria calculates, if applicable, any potential effects from this call such as proration, plan assignments, etc. and return all relevant data\n without actually performing the\nrequested operation or making any changes to the account. This is useful to interfaces that want to present the user with a 'confirmation page' informing them of the potential effects of the requested operation prior to actually performing it.  Do_write defaults to 'true'\n",
          "type" : "string"
        },
        "alt_client_acct_group_id" : {
          "description" : "One-time collections account group  to use for this specific call.  Default collections group on the account is not changed.",
          "type" : "string"
        },
        "track_data1" : {
          "description" : "Raw \"track 1\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "track_data2" : {
          "description" : "Raw \"track 2\" data from a swiped credit card used in a card-present transaction to initiate this request",
          "type" : "string"
        },
        "alt_inv_template_no" : {
          "description" : "The statement template to use when generating a statement for this order",
          "type" : "integer",
          "format" : "int64"
        },
        "iban" : {
          "description" : "International Bank Account Number(IBAN). Used for the Direct Debit payment method. It consists of 16 to 34 alphanumeric characters. Only hyphen and space are allowed to format the IBAN.\n",
          "type" : "string"
        },
        "bank_check_digit" : {
          "description" : "Bank check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Used for the Direct Debit payment method.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bank_swift_cd" : {
          "description" : "SWIFT code is a standard format of Bank Identifier Codes (BIC). It is used for the Direct Debit payment method. It consists of 8 or 11 alphanumeric characters. Only hyphen and space are allowed to format the SWIFT code. It is required for IBAN.\n",
          "type" : "string"
        },
        "bank_country_cd" : {
          "description" : "Country of the bank. The ISO-compliant 2-character country code abbreviation in uppercase. Used for the Direct Debit payment method. It is required for IBAN and BBAN.\n",
          "type" : "string"
        },
        "mandate_id" : {
          "description" : "Used for the Direct Debit payment method. A mandate is signed by the debtor to authorize the creditor to collect a payment and to instruct the bank of the debtor to pay those collections.\n",
          "type" : "string"
        },
        "bank_id_cd" : {
          "description" : "Up to 10 digit numeric bank identifier code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank ID code. It is required for BBAN.\n",
          "type" : "string"
        },
        "bank_branch_cd" : {
          "description" : "Up to 10 digit numeric bank branch code. Used for the Direct Debit payment method. Used in Europe.  Only hyphen and space are allowed to format the bank branch code.\n",
          "type" : "string"
        },
        "fulfilled_date" : {
          "description" : "Date on which order is fulfilled.",
          "type" : "string"
        },
        "fraud_filter" : {
          "description" : "Enable Fraud Filtering.  This is supported if your payment processor supports this feature and has been certified with Aria.  If no values are provided, the system will default to 2.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "fraud_control_fields" : {
          "description" : "List of key-value pair parameters to control Fraud Control.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FraudControlField"
          }
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "order_no" ]
    },
    "PlansUpdated" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_no" : {
          "description" : "Unique plan instance number for each assigned plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Client-defined plan instance ID for each assigned master plan.\n",
          "type" : "string"
        },
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_id" : {
          "description" : "Client-defined Plan ID for the plan.\n",
          "type" : "string"
        },
        "plan_name" : {
          "description" : "Name of the plan.\n",
          "type" : "string"
        },
        "plan_operation" : {
          "description" : "Indicates what operation was performed on each plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_unit_instance_details" : {
          "description" : "Array of plan unit instances.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstanceDetail"
          }
        },
        "plan_service_proration_results" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanServiceProrationResult"
          }
        }
      }
    },
    "ApplyCashCreditMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "apply_cash_credit_m" ],
          "default" : "apply_cash_credit_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_reason_cd" : {
          "description" : "The reason for providing the cash credit.",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.",
          "type" : "string"
        },
        "credit_amount" : {
          "description" : "The amount of cash credit applied against FIFO charges.",
          "type" : "number"
        },
        "specific_invoices" : {
          "description" : "Array of transaction details.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SpecificInvoice"
          }
        },
        "specific_transactions" : {
          "description" : "Array of transaction details.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SpecificTransaction"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no", "credit_reason_cd" ]
    },
    "InitPaypalBillAgreementMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "init_paypal_bill_agreement_m" ],
          "default" : "init_paypal_bill_agreement_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "req_billing_address" : {
          "description" : "Specifies whether a billing address request should be sent to PayPal. Default Value is -1 (a NULL value will also set to -1).This value will also override any client level configuration setting in the Payment Gateways or Collection Groups section of the UI.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "update_avs_return_address" : {
          "description" : "Specifies how to handle an AVS return address if req_billing_address is set to 1  – send an address verification request.Default Value is -1(a NULL value will also set to -1). This value will also override any client level  configuration setting in the Payment Gateways or Collection Groups section of the UI.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "paypal_credit" : {
          "description" : "PayPal Credit is a financing solution offered by PayPal. To buyers, the option  to use PayPal Credit appears when checking out. Buyers fill out a short application  and receive approval within seconds.To merchants (Aria clients), however,  the payment appears no differently than any other Express Checkout transaction. The merchant still receives their money at the time of sale. PayPal handles  remittance of payment from the buyers, and assumes the risk of non-payment.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "in_context_checkout" : {
          "description" : "PayPal Express Checkout has a new checkout flow called In-Context checkout. The  enhanced checkout flow provides a simplified checkout experience that replaces the  classic Express Checkout redirection flow. On desktops, the PayPal payment flow takes place in a secure window that opens in front of the merchant website, while on  small-screen devices (tablets and smartphones) the PayPal payment screens are  optimized for full-page mode. In-context checkout offers a streamlined checkout flow that keeps customers local to your website throughout the payment authorization process. With this flow, customers are not redirected away from your website.  Instead, the redesigned checkout experience presents PayPal screens in a secure  window that sits atop your website page. This leads to a more natural and  user-friendly checkout experience.  However, if you detect that a user has a  non-compatible browser, does not have JavaScript enabled, etc., you may want to use  classic view.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "GetAcctGroupsByClientMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_groups_by_client_m" ],
          "default" : "get_acct_groups_by_client_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "ClientReceipt" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "client_receipt_id" : {
          "description" : "Client receipt identifier",
          "type" : "string",
          "maxLength" : 50
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "receipt_date" : {
          "description" : "Date of receipt",
          "type" : "string"
        }
      }
    },
    "IssueRefundToAcctMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "applied_total_refund_amount" : {
          "description" : "The total amount that has been refunded.  If inAuto is TRUE, this amount will equal to the total reversal amount.",
          "type" : "number"
        },
        "applied_total_reversal_amount" : {
          "description" : "The total amount that has been reversed on this invoice line. This amount is calculated for relevant tax lines.",
          "type" : "number"
        },
        "out_transaction_id" : {
          "description" : "Event number that was recorded in the account transaction table for this refund.",
          "type" : "integer",
          "format" : "int64"
        },
        "reversed_invoice_transactions" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReversedInvoiceTransaction"
          }
        }
      }
    },
    "SettleAccountBalanceMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor\n",
          "type" : "string"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "collection_errors" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CollectionError"
          }
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        }
      }
    },
       "AppliedCashCredit" : {
      "type" : "object",
      "description" : "Array that contains cash credit application details.\\n",
      "properties" : {
        "service_no" : {
          "description" : "The service number for the cash credit application.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "service_name" : {
          "description" : "The service name for the cash credit application.\n",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "The Client-defined service number for the cash credit application.\n",
          "type" : "string"
        },
        "transaction_type" : {
          "description" : "Transaction type to search account history for.",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_name" : {
          "description" : "The transaction type for account level application of the cash credit.\n",
          "type" : "string"
        },
        "applied_transaction_id" : {
          "description" : "The transaction number for account level application of the cash credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "applied_amount" : {
          "description" : "The amount of the cash credit applied to the above.\n",
          "type" : "number"
        }
      }
    },
    "AllAcctContractsM" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "contract_no" : {
          "description" : "Aria-assigned unique contract identifier.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_contract_id" : {
          "description" : "Client assigned unique contract identifier",
          "type" : "string"
        },
        "contract_scope" : {
          "description" : "Specifies the scope of plan subscription coverage enforced by the contract.\n",
          "type" : "string"
        },
        "type_no" : {
          "description" : "The type of contract end action to be enforced by this contract.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "length_months" : {
          "description" : "The number of months, starting from start_date, that the given contract will be in effect.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "cancel_fee" : {
          "description" : "Fee to be charged if the plan instance is cancelled by the account holder.  For a multi-plan contract, this will be applicable only when the last remaining plan instance is cancelled prior to the contract's end date.\n",
          "type" : "number"
        },
        "create_comments" : {
          "description" : "CSR or API-provided comments provided at time of contract creation.\n",
          "type" : "string"
        },
        "update_comments" : {
          "description" : "Comments provided at time of last contract update.",
          "type" : "string"
        },
        "create_date" : {
          "description" : "The date the contract was created.",
          "type" : "string"
        },
        "update_date" : {
          "description" : "The date the contract was last modified.",
          "type" : "string"
        },
        "start_date" : {
          "description" : "Specifies contract start date. The date is in the format yyyy-mm-dd.\n",
          "type" : "string"
        },
        "end_date" : {
          "description" : "Contract end date.",
          "type" : "string"
        },
        "status_code" : {
          "description" : "Status code of this contract.",
          "type" : "integer",
          "format" : "int64"
        },
        "contract_plan_instance_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractPlanInstanceInfo"
          }
        }
      }
    },
    "VoidTransactionMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "new_transaction_id" : {
          "description" : "This is the resulting transaction ID from the void action.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "RecordExternalPaymentMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "record_external_payment_m" ],
          "default" : "record_external_payment_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "reference_code" : {
          "description" : "This code provides a reference correlation to the external payment. This field must be unique for every payment submitted by the client.\n",
          "type" : "string"
        },
        "payment_amount" : {
          "description" : "The amount of the payment being/to-be made against the outstanding account balance\n",
          "type" : "number"
        },
        "comments" : {
          "description" : "Additional explanatory text relating to this API call.\n",
          "type" : "string"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "external_destination_id" : {
          "description" : "The external system from which this payment originated",
          "type" : "integer",
          "format" : "int64"
        },
        "external_id" : {
          "description" : "The ID of the corresponding record to this payment in the external system",
          "type" : "string"
        },
        "payment_received_date" : {
          "description" : "Date that the payment was received in yyyy-mm-dd format. This is specified for backdated external payments.\n",
          "type" : "string"
        },
        "specific_charge_transaction_id" : {
          "description" : "A list of specific charges, see below",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SpecificChargeTransactionId"
          }
        },
        "invoice_no" : {
          "description" : "The Invoice numbers applied to this payment",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceNo"
          }
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "reference_code", "payment_amount" ]
    },
    "SuppPlanNsoList" : {
      "type" : "object",
      "description" : "Non-Subscription offerings that are purchased with the plan",
      "properties" : {
        "client_sku" : {
          "description" : "Client SKU of the NSO/Inventory item. Entering a value in this field includes the item in the order being created.\n",
          "type" : "string"
        },
        "item_units" : {
          "description" : "NSO quantity that is purchased along with plan",
          "type" : "integer",
          "format" : "int64"
        },
        "item_svc_location_no" : {
          "description" : "Aria-assigned unique identifier for the origin location for the item (NSO) being purchased. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no takes precedence.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_svc_location_id" : {
          "description" : "Client-defined unique identifier for the origin location for the item (NSO) being purchased",
          "type" : "string"
        },
        "item_dest_contact_idx" : {
          "description" : "Aria-assigned address sequence number",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAvailPlansForAcctMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_avail_plans_for_acct_m" ],
          "default" : "get_avail_plans_for_acct_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "The unique identifier of the plan instance (can be either a master or supplemental plan) under which a new plan can be assigned. If blank, results will also include master plans available for assignment for the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the plan instance (can be either a master or supplemental plan) under which a new plan can be assigned. If blank, results will also include master plans available for assignment for the account.",
          "type" : "string"
        },
        "promo_cd" : {
          "description" : "Limits the list of master plans available for assignment based on the associated promo code.\n",
          "type" : "string"
        },
        "include_full_plan_hierarchy_plans" : {
          "description" : "You can use this input parameter to specify whether to retrieve full hierarchy of child plans associated with the returned plans or with the plan_instance_no or client_plan_instance_id that you specified. If you set the include_full_plan_hierarchy_plans parameter to true , then full hierarchy of child plans down to the bottom level of your plan hierarchy will be returned.\n",
          "type" : "string"
        },
        "include_rs_summary" : {
          "description" : "If set to \"true\", will retrieve summary level rate schedule information for all the rate schedules that are associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "UpdatePaymentMethodMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "seq_no" : {
          "description" : "The sequence number of this payment, as it appears on the account",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_info" : {
          "description" : "A multidimensional array of collection information of master plan instance.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CollectionInfo"
          }
        },
        "bill_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the contact on this account to be used as the billing contact for the payment method. If bill_contact_no is included in the API request, all other billing contact parameters are ignored.",
          "type" : "string"
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        }
      }
    },
    "AccountInfo" : {
      "type" : "object",
      "description" : "Array that allows for multiple account submissions for account balance settlement.\\n",
      "properties" : {
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts. Accounts must be assigned to a collection group before running this API, or the collection does not take place.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method. Either payment method or MPI information must be provided. If both are provided the payment method will be used to collect the amount due for the MPI specified.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "Client-defined identifier for this payment method. Either payment method or MPI information must be provided. If both are provided the payment method will be used to collect the amount due for the MPI specified.\n",
          "type" : "string"
        },
        "master_plan_instance_no" : {
          "description" : "Aria-generated unique identifier for the master plan instance. Either payment method or MPI information must be provided. If both are provided the payment method will be used to collect the amount due for the MPI specified.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance. Either payment method or MPI information must be provided. If both are provided the payment method will be used to collect the amount due for the MPI specified.\n",
          "type" : "string"
        }
      }
    },
    "GetAcctPlanUnitInstanceAllMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "all_plan_instances" : {
          "description" : "This return value is a multidimensional array describing the detail of all available plans.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllPlanInstance"
          }
        }
      }
    },
    "SettleAccountBalanceBulkMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "settle_account_balance_bulk_m" ],
          "default" : "settle_account_balance_bulk_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_info" : {
          "description" : "Array that allows for multiple account submissions for account balance settlement.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountInfo"
          }
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "CancelUnappliedServiceCreditsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetPendingInvoiceNoMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "pending_invoice" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PendingInvoice"
          }
        }
      }
    },
    "ParentPlanList" : {
      "type" : "object",
      "description" : "Array of plans which are mapped as parents of this plan",
      "properties" : {
        "parent_plan_no" : {
          "description" : "ID of the parent plan",
          "type" : "integer",
          "format" : "int64"
        },
        "parent_plan_name" : {
          "description" : "Name of the parent plan",
          "type" : "string"
        },
        "client_parent_plan_id" : {
          "description" : "Client-defined unique parent Plan ID",
          "type" : "string"
        }
      }
    },
    "PlanInstanceService" : {
      "type" : "object",
      "description" : "A multidimensional array of Services for this plan\\n",
      "properties" : {
        "service_no" : {
          "description" : "The services for this plan\n",
          "type" : "integer",
          "format" : "int64"
        },
        "service_desc" : {
          "description" : "Description of this service",
          "type" : "string"
        },
        "is_recurring_ind" : {
          "description" : "Indicates whether or not this service is a recurring service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_usage_based_ind" : {
          "description" : "Indicates whether or not this service is a usage based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type" : {
          "description" : "The usage type supported by this usage based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "taxable_ind" : {
          "description" : "Indicates whether or not this service is taxable\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_tax_ind" : {
          "description" : "Indicates whether or not this service is a tax based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_arrears_ind" : {
          "description" : "Indicates whether or not this service is an arrears based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_setup_ind" : {
          "description" : "Indicates whether or not this service is a setup bases service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_misc_ind" : {
          "description" : "Indicates whether or not this service is a miscellaneous service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_donation_ind" : {
          "description" : "Indicates whether or not this service is a donation based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_order_based_ind" : {
          "description" : "Indicates whether or not this service is an order based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "is_cancellation_ind" : {
          "description" : "Indicates whether or not this service is a cancellation based service\n",
          "type" : "integer",
          "format" : "int64"
        },
        "coa_id" : {
          "description" : "Chart of accounts ID",
          "type" : "string"
        },
        "ledger_code" : {
          "description" : "This field is deprecated in favor of coa_id",
          "type" : "string"
        },
        "client_coa_code" : {
          "description" : "The client-defined override for coa_id",
          "type" : "string"
        },
        "display_ind" : {
          "description" : "Indicates if this service is displayable or not",
          "type" : "integer",
          "format" : "int64"
        },
        "tiered_pricing_rule" : {
          "description" : "The Tiered Pricing Rule",
          "type" : "integer",
          "format" : "int64"
        },
        "is_min_fee_ind" : {
          "description" : "Indicates whether or not this service is a minimum fee.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "The client-defined Service ID for this plan.\n",
          "type" : "string"
        },
        "usage_type_cd" : {
          "description" : "Denotes which usage type to record.",
          "type" : "string"
        },
        "all_service_supp_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllServiceSuppField"
          }
        },
        "fulfillment_based_ind" : {
          "description" : "Indicates if the service is Fulfillment Based or not.",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_service_rates" : {
          "description" : "Represents the rates for the default rate schedule for the default currency for the plan",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanServiceRate"
          }
        },
        "usage_type_name" : {
          "description" : "The human-readable name of this usage type\n",
          "type" : "string"
        },
        "usage_type_desc" : {
          "description" : "The long description of this usage type\n",
          "type" : "string"
        },
        "usage_type_code" : {
          "description" : "Client-assigned identifier for the type of usage being recorded.\n",
          "type" : "string"
        },
        "usage_unit_label" : {
          "description" : "The display-level description of the units this usage represents.\n",
          "type" : "string"
        },
        "apply_usage_rates_daily" : {
          "description" : "Indicates whether or not this usage-based service is rated on a daily basis.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_svc_location_id" : {
          "description" : "The client-defined unique identifier for the origin location for the service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.\n",
          "type" : "string"
        },
        "svc_location_name" : {
          "description" : "The name of the origin location for the service.",
          "type" : "string"
        },
        "svc_location_company_name" : {
          "description" : "Company name of the service location.",
          "type" : "string"
        },
        "svc_location_address1" : {
          "description" : "First address line of the service location.",
          "type" : "string"
        },
        "svc_location_address2" : {
          "description" : "Second address line of the service location. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "svc_location_address3" : {
          "description" : "Third address line of the service location.",
          "type" : "string"
        },
        "svc_location_city" : {
          "description" : "City of the service location.",
          "type" : "string"
        },
        "svc_location_locality" : {
          "description" : "Locality of the service location.",
          "type" : "string"
        },
        "svc_location_state_prov" : {
          "description" : "State or Province of the service location. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "svc_location_country" : {
          "description" : "Country of the location contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "svc_location_postal_cd" : {
          "description" : "Postal/Zip code for the service location address.",
          "type" : "string"
        },
        "dest_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the destination contact for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "PlanUnitInstFieldList" : {
      "type" : "object",
      "description" : "Array of client-defined plan unit instance fields.\\n",
      "properties" : {
        "field_name" : {
          "description" : "Field name of plan unit instance field.\n",
          "type" : "string"
        },
        "plan_unit_inst_field_values" : {
          "description" : "Array of client-defined plan unit instance fields.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanUnitInstFieldValue"
          }
        }
      }
    },
    "SuppPlanProductField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "field_name" : {
          "description" : "The machine-readable name of this field",
          "type" : "string"
        },
        "field_value" : {
          "description" : "The value stored in this field",
          "type" : "string"
        }
      }
    },
    "ContractRolloverCustomRate" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "custom_rate_plan_instance_no" : {
          "description" : "Plan instance for the new custom rate schedule to be used as rollover custom rate at the completion of the contract.",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_client_plan_instance_id" : {
          "description" : "Unique client-defined identifier for the master plan instance.",
          "type" : "string"
        },
        "custom_rate_service_no" : {
          "description" : "Service number for the new custom rate",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_client_service_id" : {
          "description" : "The client-defined service ID for the new custom rate.",
          "type" : "string"
        },
        "custom_rate_seq_no" : {
          "description" : "Sequence number for this line of the rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_from_unit" : {
          "description" : "Tiered pricing, \"FROM\" unit",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_to_unit" : {
          "description" : "Tiered pricing, \"TO\" unit",
          "type" : "integer",
          "format" : "int64"
        },
        "custom_rate_per_unit" : {
          "description" : "Rate to charge per unit on this tier",
          "type" : "number"
        }
      }
    },
    "GetAcctMessageMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_message_m" ],
          "default" : "get_acct_message_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "message_id" : {
          "description" : "Unique identifier of the message sent during provisioning to the account\n",
          "type" : "integer",
          "format" : "int64"
        },
        "do_encoding" : {
          "description" : "True indicates to acquire the message size after doing MIME encoding, False acquires message size without MIME encoding.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no", "message_id" ]
    },
    "GetQueuedAcctPlansMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "queued_plan_instance_details" : {
          "description" : "An array of plans queued for the specified account number\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueuedPlanInstanceDetail"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "GetAcctSurchargesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "all_surcharges" : {
          "description" : "An array containing surcharges.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllSurcharge"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "string"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        }
      }
    },
    "PaymentMethodMap" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "source_pmt_method_no" : {
          "description" : "Aria-assigned identifier of the payment method copied from the source account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_source_pmt_method_id" : {
          "description" : "Client-defined identifier of the payment method copied from the source account.\n",
          "type" : "string"
        },
        "target_pmt_method_no" : {
          "description" : "Aria-assigned identifier of the payment method copied to the target account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_target_pmt_method_id" : {
          "description" : "Client-defined identifier of the payment method copied to the target account.\n",
          "type" : "string"
        }
      }
    },
    "VoidInvoiceMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "void_transactions" : {
          "description" : "Array of voided transactions.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VoidTransaction"
          }
        }
      }
    },
    "SuppPlanService" : {
      "type" : "object",
      "description" : "List of services associated with the master plan being assigned on the account",
      "properties" : {
        "service_no" : {
          "description" : "A multidimensional array of Services for this plan\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "Multidimensional array of client-defined service ID for this plan\n",
          "type" : "string"
        },
        "svc_location_no" : {
          "description" : "Aria-assigned unique location identifier.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_svc_location_id" : {
          "description" : "Client-defined unique identifier for the origin location for the service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no takes precedence.",
          "type" : "string"
        },
        "dest_contact_idx" : {
          "description" : "Aria-assigned address sequence number",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Event" : {
      "type" : "object",
      "description" : "An array of events returned from the successful completion of this API call\\n",
      "properties" : {
        "event_id" : {
          "description" : "The unique ID for the individual event",
          "type" : "integer",
          "format" : "int64"
        },
        "event_name" : {
          "description" : "The name of this event",
          "type" : "string"
        },
        "event_description" : {
          "description" : "The long description of this event",
          "type" : "string"
        },
        "event_state" : {
          "description" : "The current state of this event for this client",
          "type" : "string"
        }
      }
    },
    "AcctHierarchyDtl" : {
      "type" : "object",
      "description" : "An Array of account hierarchy details.",
      "properties" : {
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "userid" : {
          "description" : "The users unique identifier.",
          "type" : "string"
        },
        "first_name" : {
          "description" : "Contact First name",
          "type" : "string"
        },
        "middle_initial" : {
          "description" : "Middle initial of the contact",
          "type" : "string"
        },
        "last_name" : {
          "description" : "Contact last name",
          "type" : "string"
        },
        "company_name" : {
          "description" : "Company name of the contact",
          "type" : "string"
        },
        "address1" : {
          "description" : "First address line of the contact.",
          "type" : "string"
        },
        "address2" : {
          "description" : "Second address line of the contact. If you want to delete existing data in this field, leaving it blank, you must enter a '~' in this field.\n",
          "type" : "string"
        },
        "address3" : {
          "description" : "The third line of the address",
          "type" : "string"
        },
        "city" : {
          "description" : "City of the contact",
          "type" : "string"
        },
        "locality" : {
          "description" : "Use this field instead of the state_prov field to designate the state, province or other local designation as appropriate for addresses in all countries other than the United States, Australia, and Canada. This field is ignored for all United States, Australia and Canada addresses.\n",
          "type" : "string"
        },
        "state_prov" : {
          "description" : "State or Province of the contact. The official postal-service codes for all United States, Australia and Canada states, provinces, and territories. This field does not support states, provinces or territories from other countries. Use the locality field for other countries.\n",
          "type" : "string"
        },
        "country_cd" : {
          "description" : "Country of the contact. The ISO-compliant 2-character country code abbreviation in uppercase.\n",
          "type" : "string"
        },
        "postal_cd" : {
          "description" : "Postal/Zip code for the contact address.",
          "type" : "string"
        },
        "phone" : {
          "description" : "The phone number of the contact",
          "type" : "string"
        },
        "phone_ext" : {
          "description" : "The extension for the contact phone",
          "type" : "string"
        },
        "cell_phone" : {
          "description" : "The contact cell phone.",
          "type" : "string"
        },
        "work_phone" : {
          "description" : "The full work phone number",
          "type" : "string"
        },
        "work_phone_ext" : {
          "description" : "The office/desk extension of the contact's work phone, if any.\n",
          "type" : "string"
        },
        "fax" : {
          "description" : "The FAX phone number for the contact.",
          "type" : "string"
        },
        "email" : {
          "description" : "Alternate email address for contact.",
          "type" : "string"
        },
        "birthdate" : {
          "description" : "Birthdate of the contact in yyyy-mm-dd format.",
          "type" : "string"
        },
        "status_cd" : {
          "description" : "This is the status of the object in question for the current API call.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "notify_method" : {
          "description" : "How the client communicates with the account holder. If a notification method is not provided, this value defaults to \"1\" (HTML email).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "senior_acct_no" : {
          "description" : "The senior_acct_no is the unique account number for the parent account and is used in establishing parent-child billing relationships.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "senior_acct_user_id" : {
          "description" : "The senior account user ID of the account.",
          "type" : "string"
        },
        "senior_client_acct_id" : {
          "description" : "The client senior account ID of the account.",
          "type" : "string"
        },
        "test_acct_ind" : {
          "description" : "This argument indicates the account is a test account and is treated as such in the system.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "taxpayer_id" : {
          "description" : "Taxpayer Identification number.",
          "type" : "string"
        },
        "acct_start_date" : {
          "description" : "Date, in yyyy-mm-dd format, on which the account was first created outside of Aria",
          "type" : "string"
        },
        "alt_msg_template_no" : {
          "description" : "Email template number assigned to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "seq_func_group_no" : {
          "description" : "Functional account group number specifically designated for statement sequence number assignment.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "tax_exemption_level" : {
          "description" : "To provide Tax Exemption Level for the account",
          "type" : "integer",
          "format" : "int64"
        },
        "client_alt_msg_template_id" : {
          "description" : "Client-defined email template ID assigned to this account.",
          "type" : "string"
        },
        "list_start_master_file" : {
          "description" : "Indicates whether the account is listed at the start of a master file.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_cn_alt_msg_template_id" : {
          "description" : "The client-defined alternate email template ID to use for this account",
          "type" : "string"
        },
        "functional_acct_group" : {
          "description" : "Array of functional account groups.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FunctionalAcctGroup"
          }
        },
        "collection_acct_group" : {
          "description" : "Array of collections account groups.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CollectionAcctGroup"
          }
        },
        "supp_field" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuppField"
          }
        },
        "acct_surcharges_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctSurchargesInfo"
          }
        },
        "acct_currency" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used for this account\n",
          "type" : "string"
        },
        "acct_balance" : {
          "description" : "Specifies the balance for this account.",
          "type" : "number"
        },
        "address_verification_code" : {
          "description" : "The address verification code for account contact address\n",
          "type" : "string"
        },
        "address_match_score" : {
          "description" : "The score of match for account contact address verification code\n",
          "type" : "number"
        },
        "acct_create_client_receipt_id" : {
          "description" : "The client-specified receipt ID, assigned during this account creation. Useful for auditing and tracking.",
          "type" : "string"
        },
        "status_client_receipt_id" : {
          "description" : "The client-specified receipt ID, assigned for account status change. Useful for auditing and tracking.",
          "type" : "string"
        },
        "po_num" : {
          "description" : "Purchase order number assigned to the account.",
          "type" : "string"
        },
        "billing_groups_info" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BillingGroupsInfo"
          }
        },
        "payment_methods_info" : {
          "description" : "List of primary and secondary payment methods of billing groups on this account.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentMethodsInfo"
          }
        },
        "master_plans_info" : {
          "description" : "If billing groups are not excluded, then this array returns all the associated master plan instances for each billing group (provided this is a self-pay account). If billing groups are excluded (or if this is a parent-pay account), then this array returns all the master plan instances on this account.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlansInfo"
          }
        },
        "child_acct_no" : {
          "description" : "An Array of account number of immediate child of the given account number.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChildAcctNo"
          }
        },
        "acct_locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_locale_name" : {
          "description" : "Name of the account level locale.",
          "type" : "string"
        },
        "legal_entity_no" : {
          "description" : "Aria-assigned legal entity identification number.",
          "type" : "integer",
          "format" : "int64"
        },
        "legal_entity_name" : {
          "description" : "Client-assigned descriptor of the legal entity.",
          "type" : "string"
        },
        "client_legal_entity_id" : {
          "description" : "Client-assigned unique identifier for the legal entity.",
          "type" : "string"
        }
      }
    },
    "RbLineItem" : {
      "type" : "object",
      "description" : "Array of rebill invoice line items.",
      "properties" : {
        "line_no" : {
          "description" : "Invoice line number reference.",
          "type" : "integer",
          "format" : "int64"
        },
        "service_no" : {
          "description" : "Aria-assigned service number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "Client-defined unique ID for the service.",
          "type" : "string"
        },
        "rb_rate_per_unit" : {
          "description" : "Rate per unit. Leave this field blank if the rate per unit on the referenced invoice line should be used to calculate the line amount.\n",
          "type" : "number"
        },
        "rb_units" : {
          "description" : "Units for the line item.",
          "type" : "number"
        },
        "rb_amount" : {
          "description" : "Amount of the line item.",
          "type" : "number"
        },
        "rb_line_comments" : {
          "description" : "Explanatory text for the line item.",
          "type" : "string"
        },
        "po_num" : {
          "description" : "PO number for the invoice line item.",
          "type" : "string"
        },
        "bill_from_location_no" : {
          "description" : "Address sent as the bill-from address to the tax engine for tax calculations. This is the Aria-assigned unique identifier of the service location for the invoice line.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_from_location_no" : {
          "description" : "Address sent as the ship-from address to the tax engine for tax calculations. This is the Aria-assigned unique identifier of the service location for the invoice line.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "bill_to_address_seq" : {
          "description" : "Address sent as the bill-to address to the tax engine for tax calculations. This is the Aria-assigned unique identifier of the contact on the account used as the bill-to address for the invoice line item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "ship_to_address_seq" : {
          "description" : "Address sent as the bill-to address to the tax engine for tax calculations. This is the Aria-assigned unique identifier of the contact on the account used as the ship-to address for the invoice line item.\n",
          "type" : "integer",
          "format" : "int64"
        }
      },
      "required" : [ "line_no" ]
    },
    "AcctComment" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "comment_author" : {
          "description" : "User/Author of the comment.",
          "type" : "string"
        },
        "comment_date_time" : {
          "description" : "Time/date stamp the comment was created",
          "type" : "string"
        },
        "comment" : {
          "description" : "The body of the comment.",
          "type" : "string"
        },
        "application_id" : {
          "description" : "The application identifier in which the API/UI is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, when the application is called from UI/API.",
          "type" : "string"
        }
      }
    },
    "CancelOrderMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetClientItemSuppFieldsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_client_item_supp_fields_m" ],
          "default" : "get_client_item_supp_fields_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "filter_item_no" : {
          "description" : "Aria-assigned unique identifier indicating Client Inventory Item.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "filter_client_item_id" : {
          "description" : "Client assigned unique identifier indicating client Inventory Item.\n",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "CalcCreditReferenceLineMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "calc_credit_reference_line_m" ],
          "default" : "calc_credit_reference_line_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "This is the client-assigned identifier for the account.\n",
          "type" : "string",
          "maxLength" : 50
        },
        "plan_instance_no" : {
          "description" : "Unique plan instance number for each assigned master or supplemental plan.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Client-defined plan instance ID for each assigned master or supplemental plan.\n",
          "type" : "string"
        },
        "service_no" : {
          "description" : "Service number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "Client defined service id.",
          "type" : "string"
        },
        "credit_ref_type" : {
          "description" : "Credit reference type.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_reference_start_date" : {
          "description" : "The start date, in yyyy-mm-dd format, from which the credit reference calculation begins.\n",
          "type" : "string"
        },
        "monthly_price" : {
          "description" : "Monthly price for specified plan instance / service. \t\t\t\n",
          "type" : "number"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "credit_ref_type", "credit_reference_start_date" ]
    },
    "OutContract" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "contract_no" : {
          "description" : "Unique ID of the contract assigned to this account",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_instance_no" : {
          "description" : "Unique plan-instance number for each assigned master plan",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined ID for each assigned master plan",
          "type" : "string"
        }
      }
    },
    "AcctPaymentHistory" : {
      "type" : "object",
      "description" : "An Array of payment details.",
      "properties" : {
        "transaction_id" : {
          "description" : "Aria-assigned identifier for this transaction.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_source" : {
          "description" : "Specifies the source of the payment.",
          "type" : "string"
        },
        "payment_status" : {
          "description" : "Specifies the status of the payment.",
          "type" : "string"
        },
        "payment_date" : {
          "description" : "Specifies the date the payment was done in yyyy-mm-dd format.",
          "type" : "string"
        },
        "payment_trans_type" : {
          "description" : "Specifies the payment transaction type number.",
          "type" : "integer",
          "format" : "int64"
        },
        "payment_currency" : {
          "description" : "Specifies the ISO Currency code for this payment.",
          "type" : "string"
        },
        "payment_amount" : {
          "description" : "Specifies the payment amount.",
          "type" : "number"
        },
        "payment_amount_left_to_apply" : {
          "description" : "Specifies the amount left to apply of this payment.",
          "type" : "number"
        },
        "voiding_event_no" : {
          "description" : "Specifies the voided payment event_no if the payment was voided.",
          "type" : "integer",
          "format" : "int64"
        },
        "voidable_flag" : {
          "description" : "Specifies if this payment transaction can be voided or not.",
          "type" : "integer",
          "format" : "int64"
        },
        "cc_suffix" : {
          "description" : "Last four numbers of CC or bank account number for ACH.  Null for external payment.\n",
          "type" : "string"
        },
        "cc_string" : {
          "description" : "Either number or string that represents the credit card type - visa, amex, discover, etc.\n",
          "type" : "string"
        },
        "pay_method_type" : {
          "description" : "Number of payment description type, as already stored in DB. (ex. 1= credit card, 5=net terms 10, etc)\n",
          "type" : "integer",
          "format" : "int64"
        },
        "proc_status_code" : {
          "description" : "Response code from payment processor.",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code if payment is approved, null if not approved or not applicable\n",
          "type" : "string"
        },
        "payment_timestamp" : {
          "description" : "Date and time of payment instead of just date as is currently returned.\n",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "Payment processor status text is returned.\n",
          "type" : "string"
        },
        "payment_method_no" : {
          "description" : "Aria-assigned sequence number for this payment method.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_payment_method_id" : {
          "description" : "The client-defined identifier of the payment method used for payment.\n",
          "type" : "string"
        },
        "payment_received_date" : {
          "description" : "The date the payment was received.\n",
          "type" : "string"
        },
        "bill_email" : {
          "description" : "Email of the billing contact.",
          "type" : "string"
        },
        "payment_application_details" : {
          "description" : "An Array of account payment application details.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentApplicationDetail"
          }
        }
      }
    },
    "UpdateAcctSuppFieldsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "CancelInstanceContractMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "cancel_instance_contract_m" ],
          "default" : "cancel_instance_contract_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "contract_no" : {
          "description" : "Aria-assigned unique contract identifier.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_contract_id" : {
          "description" : "Client assigned unique contract identifier..",
          "type" : "string"
        },
        "update_comments" : {
          "description" : "Comments provided at time of last contract update.",
          "type" : "string"
        },
        "close_status" : {
          "description" : "Contract Closure Status (per the allowable values legend)\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "GetAcctNsoInclusionListMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_nso_inclusion_list_m" ],
          "default" : "get_acct_nso_inclusion_list_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The unique identifier for the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance.",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "GetAcctPlanHistoryMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_plan_history_m" ],
          "default" : "get_acct_plan_history_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "filter_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "filter_client_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no" ]
    },
    "CreateAdvancedServiceCreditMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "create_advanced_service_credit_m" ],
          "default" : "create_advanced_service_credit_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "amount" : {
          "description" : "The amount of service credit to create on the account.",
          "type" : "number"
        },
        "reason_code" : {
          "description" : "The reason a given credt was/is to be applied to the account.",
          "type" : "integer",
          "format" : "int64"
        },
        "comments" : {
          "description" : "Free form optional text up to 300 characters. For display within AdminTools when viewing all credit records on an account.\n",
          "type" : "string"
        },
        "eligible_plan_no" : {
          "description" : "Eligible plan no or client eligible plan ID if the master plan instance number is passed. If the master plan instance no / client master plan instance ID parameter is not passed, this field is ignored. If the master plan instance no/client master plan instance ID is ignored, this field will be ignored. This parameter will be deprecated in the future.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "eligible_service_no" : {
          "description" : "Eligible service no or client eligible service ID if eligible plan no or client eligible plan ID is passed. If the eligible plan no/client eligible plan ID is not passed, or is passed but is ignored, then this field will also be ignored.  This parameter will be deprecated in the future.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_service_no_to_apply" : {
          "description" : "Under default conditions, when a service credit on an account is consumed (resulting in negative line items attached to account invoices) the service_no value used by Aria on those invoice line items is the \"universal\" Aria service_no for service credits, specifically \"0\". This results in financial reports which group charges by service_no putting all consumed service credits into the same service_no 0 \"bucket\". If the client wishes for this credit, once consumed, to go into any other service_no \"bucket\", that service_no must be supplied in this field. Any Aria-standard or custom-to-client service number may be used. A common (but not required) use of this field is in conjunction with the eligible_plan_no/eligible_service_no fields described above, e.g.: Client offers plan_no XXXX with a recurring fee of service_no YYYY. A credit is attached to an account (which has plan XXXX) specifying these two values in the \"eligible_\" fields described above, which means that the credit will be consumed as an offset against and plan XXXX/service YYYY charges incurred by the account holder. Additionally, the client provides value YYYY in this field, which means that when the service credit is consumed the negative line item it creates on the account holder's invoice will use the same service no as the charge it offsets. If the amount of the recurring fee for plan XXXX/service YYYY is $10 (resulting in a positive line item of $10 with service YYYY on their invoice), and if the amount of the credit line item is $5 (resulting in a negative line item of -$2 with service YYYY on their invoice) the net result in any financial report that groups by service_no will be $8 (as opposed to $10 in service YYYY and -$2 in service 0).\n",
          "type" : "integer",
          "format" : "int64"
        },
        "frequency_no" : {
          "description" : "Number of times the service credit should be applied to the account",
          "type" : "integer",
          "format" : "int64"
        },
        "initial_credit_date" : {
          "description" : "Date on which the recurring service credit should start to be applied",
          "type" : "string"
        },
        "percent_amount" : {
          "description" : "The percent amount of the credit to be created for the account. For example if the account is to receive a 10% discount.\n",
          "type" : "number"
        },
        "percent_eval_service_no" : {
          "description" : "The service to which the percent discount is to be applied.",
          "type" : "integer",
          "format" : "int64"
        },
        "eligible_service_types" : {
          "description" : "A list of eligible service types",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EligibleServiceType"
          }
        },
        "client_eligible_plan_id" : {
          "description" : "Eligible plan no or client eligible plan ID if the master plan instance number is passed. If the master plan instance no / client master plan instance ID parameter is not passed, this field is ignored. If the master plan instance no/client master plan instance ID is ignored, this field will be ignored. This parameter will be deprecated in the future.\n",
          "type" : "string"
        },
        "client_eligible_service_id" : {
          "description" : "Eligible service no or client eligible service ID if eligible plan no or client eligible plan ID is passed. If the eligible plan no/client eligible plan ID is not passed, or is passed but is ignored, then this field will also be ignored.  This parameter will be deprecated in the future.\n",
          "type" : "string"
        },
        "client_alt_service_id_to_apply" : {
          "description" : "Client-defined unique alternate service ID that is to be applied",
          "type" : "string"
        },
        "client_percent_eval_service_id" : {
          "description" : "The service to which the percent discount is to be applied.",
          "type" : "string"
        },
        "credit_expiry_type_ind" : {
          "description" : "Indicator which determines the expiry is based on months or till Specific Date.",
          "type" : "string"
        },
        "credit_expiry_months" : {
          "description" : "Total Months after which service credit expires.",
          "type" : "integer",
          "format" : "int64"
        },
        "credit_expiry_date" : {
          "description" : "The date on which credit expires. The date is in the format yyyy-mm-dd.",
          "type" : "string"
        },
        "eligible_service_plans" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EligibleServicePlan"
          }
        },
        "client_eligible_service_plan_ids" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClientEligibleServicePlanId"
          }
        },
        "frequency_interval_type" : {
          "description" : "The unit of time associated with the frequency.  1= monthly, 2 = bi-monthly, 3 = quarterly, 4 semi-annually, 5 = annually.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "eligible_plan_instances" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EligiblePlanInstance"
          }
        },
        "client_eligible_plan_instances" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClientEligiblePlanInstance"
          }
        },
        "percent_eval_plan_instance_no" : {
          "description" : "The plan under this plan instance will be used to calculate the service credit.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_percent_eval_plan_instance_id" : {
          "description" : "The plan under this client-defined unique plan instance ID will be used to calculate the service credit.\n",
          "type" : "string"
        },
        "service_code_option" : {
          "description" : "The value of this field will define which service will be used as a template for  taxation on the service credit that is created.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "ReinstateTransactionMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "new_transaction_id" : {
          "description" : "This is the new transaction ID returned after successfully reinstating the transaction.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetClientCurrenciesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "client_currency" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ClientCurrency"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "PlanUpdateService" : {
      "type" : "object",
      "description" : "List of services associated with the plan being assigned or updated on the account.\\n",
      "properties" : {
        "service_no" : {
          "description" : "The Aria-assigned unique identifier for the service associated with the plan instance. Either this field or client_service_id is required to map plan services to the plan instance.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_service_id" : {
          "description" : "The client-defined identifier for the service associated with the plan instance.\n",
          "type" : "string"
        },
        "svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no will take precedence.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_svc_location_id" : {
          "description" : "The client-defined unique identifier for the origin location for the service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations. If both svc_location_no and client_svc_location_id are provided, svc_location_no will take precedence.\n",
          "type" : "string"
        },
        "dest_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the destination contact for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetCashCreditsDetailsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_cash_credits_details_m" ],
          "default" : "get_cash_credits_details_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "transaction_id" : {
          "description" : "Unique transaction identifier for the cash credit.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "acct_no" ]
    },
    "ContractPlanDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_instance_no" : {
          "description" : "List of plan instance(s) to be associated with the contract",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "List of client-defined plan instance(s) to associated with the contract",
          "type" : "string"
        }
      }
    },
    "GetInvNoFromBalXferMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_inv_no_from_bal_xfer_m" ],
          "default" : "get_inv_no_from_bal_xfer_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "transaction_id" : {
          "description" : "The unique identifier for a given transaction",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "transaction_id" ]
    },
    "SubscribeEventClassMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "events" : {
          "description" : "An array of events returned from the successful completion of this API call\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Event"
          }
        }
      }
    },
    "OrderItemsList" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "line_no" : {
          "description" : "",
          "type" : "integer",
          "format" : "int64"
        },
        "client_sku" : {
          "description" : "",
          "type" : "string"
        },
        "label" : {
          "description" : "",
          "type" : "string"
        },
        "alt_label" : {
          "description" : "",
          "type" : "string"
        },
        "long_desc" : {
          "description" : "",
          "type" : "string"
        },
        "units" : {
          "description" : "",
          "type" : "number"
        },
        "unit_amount" : {
          "description" : "",
          "type" : "number"
        },
        "line_amount" : {
          "description" : "",
          "type" : "number"
        },
        "line_comments" : {
          "description" : "Any client-defined comments, from a CSR or automated system, for this particular line item",
          "type" : "string"
        },
        "schedule_no" : {
          "description" : "The ID of this rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "tier_no" : {
          "description" : "Tier number of this rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "item_svc_location_no" : {
          "description" : "The Aria-assigned unique identifier for the origin location for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_item_svc_location_id" : {
          "description" : "The client-defined unique identifier for the origin location for the service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.\n",
          "type" : "string"
        },
        "item_dest_contact_no" : {
          "description" : "The Aria-assigned unique identifier for the destination contact for the specified service associated with the plan. Depending on taxation configuration, this address may be used for tax calculations.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "InvoiceInfo" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "invoice_no" : {
          "description" : "The unique identifier of the invoice, if any, created automatically by Aria in conjunction with this call\n",
          "type" : "integer",
          "format" : "int64"
        },
        "billing_group_no" : {
          "description" : "The billing group number mapped against each master plan",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "Unique client-defined ID for each assigned master plan",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "Processor return code from CVV validation",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "Processor return code for security validation\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "Processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "Processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "Processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor",
          "type" : "string"
        },
        "invoice_charges_before_tax" : {
          "description" : "Charges before tax on the initial invoice for this account",
          "type" : "number"
        },
        "invoice_tax_charges" : {
          "description" : "Tax charges on the initial invoice for this account",
          "type" : "number"
        },
        "invoice_charges_after_tax" : {
          "description" : "The sum of invoice_charges_before_tax and invoice_tax_charges",
          "type" : "number"
        },
        "invoice_credit_amount" : {
          "description" : "The amount of credit on the initial invoice for this account",
          "type" : "number"
        },
        "invoice_total_amount" : {
          "description" : "The total owed on the initial invoice for this account",
          "type" : "number"
        },
        "total_credit" : {
          "description" : "Total amount of the credit to be applied to the account",
          "type" : "number"
        },
        "total_tax_credit" : {
          "description" : "The tax amount of the credit to be applied",
          "type" : "number"
        },
        "total_credit_before_tax" : {
          "description" : "The credit to be applied before tax is taken into account",
          "type" : "number"
        },
        "total" : {
          "description" : "Grand total of this invoice",
          "type" : "number"
        },
        "proration_result_amount" : {
          "description" : "The currency amount of any resulting proration action performed as a result of the fulfillment based service unit assignment. When proration is performed the value returned in this field is a positive currency value (indicating a resulting charge to the account). If the value passed in field do_write is false then any positive value returned in this field is notational only, demonstrating what proration effect would be applied to the account if the requested fulfillment based plan unit instance were to be actually assigned.\n",
          "type" : "number"
        },
        "expected_monthly_rec_cost" : {
          "description" : "Predicted monthly recurring cost of the items and plans on this invoice",
          "type" : "number"
        },
        "expected_annual_rec_cost" : {
          "description" : "Predicted annual recurring cost of the items and plans on this invoice",
          "type" : "number"
        },
        "proc_fraud_filtering_info" : {
          "description" : "Fraud Filtering Response returned from Payment processor.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcFraudFilteringInfo"
          }
        },
        "invoice_items" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceItem"
          }
        },
        "tax_details" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TaxDetail"
          }
        }
      }
    },
    "OptionalTransactionQualifier" : {
      "type" : "object",
      "description" : "Array of additional values you can associate with this API call.",
      "properties" : {
        "qualifier_name" : {
          "description" : "Name of the field you want to associate with this API call.",
          "type" : "string"
        },
        "qualifier_value" : {
          "description" : "Corresponding value of the field you want to associate with this API call.",
          "type" : "string"
        }
      }
    },
    "GetClientPlanServicesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_services_list" : {
          "description" : "A multidimensional array of Services for this plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanServicesList"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetAcctSurchargesMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_surcharges_m" ],
          "default" : "get_acct_surcharges_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The unique identifier for the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined unique identifier for the master plan instance.",
          "type" : "string"
        },
        "include_detail_ind" : {
          "description" : "Whether or not this is to retrieve the surcharge rate details",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no" ]
    },
    "CreateAcctCompleteMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "out_acct" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OutAcct"
          }
        }
      },
      "required" : [ "out_acct" ]
    },
    "GetAcctCreditsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_credits_m" ],
          "default" : "get_acct_credits_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "master_plan_instance_no" : {
          "description" : "The Master Subscription plan instance number.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_master_plan_instance_id" : {
          "description" : "Client-defined Master plan Subscription plan instance ID.",
          "type" : "string"
        },
        "limit_records" : {
          "description" : "An input to limit the number of records returning back.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "UpdateAcctNotifyMethodMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetSuppPlansByPromoCodeAllMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_supp_plans_by_promo_code_all_m" ],
          "default" : "get_supp_plans_by_promo_code_all_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "promo_code" : {
          "description" : "This is the code provided the client  and used by the account holder during registration or when executing a transaction.A promotion generally provides access to a custom set of reduced-rate plans.\n",
          "type" : "string"
        },
        "include_rs_summary" : {
          "description" : "If set to \"true\", will retrieve summary level rate schedule information for all the rate schedules that are associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "retrieve_bundled_nso" : {
          "description" : "If set to \"true\", will retrieve all of the bundled inventory items associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "retrieve_included_nso" : {
          "description" : "If set to \"true\", will retrieve all of the inventory items associated with a particular plan. If left blank, will default to \"false\".\n",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "include_translations" : {
          "description" : "Setting this flag as True will fetch the translated fields in all the locales defined. If not passed it defaults to False.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "promo_code" ]
    },
    "PlanTranslationDtl" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "plan_no" : {
          "description" : "Aria-assigned unique plan identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "plan_name" : {
          "description" : "The short name of this plan.",
          "type" : "string"
        },
        "plan_desc" : {
          "description" : "The long description of this plan.",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.      \n",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_service_t" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlanServiceT"
          }
        }
      }
    },
    "ItemsBySuppField" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "item_no" : {
          "description" : "The inventory item number returned from the API query.",
          "type" : "integer",
          "format" : "int64"
        },
        "item_label" : {
          "description" : "The label for the inventory item specified by item_no.",
          "type" : "string"
        },
        "service_no" : {
          "description" : "Aria-assigned unique service identifier",
          "type" : "integer",
          "format" : "int64"
        },
        "service_desc" : {
          "description" : "The description of the service specified by service_no",
          "type" : "string"
        },
        "client_sku" : {
          "description" : "",
          "type" : "string"
        },
        "price" : {
          "description" : "The price of the inventory item.",
          "type" : "number"
        },
        "item_plan" : {
          "description" : "The plan number associated with the inventory item specified by item_no.",
          "type" : "integer",
          "format" : "int64"
        },
        "item_months" : {
          "description" : "The months to stack for this item",
          "type" : "integer",
          "format" : "int64"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "class_no" : {
          "description" : "Inventory item class number",
          "type" : "integer",
          "format" : "int64"
        },
        "class_label" : {
          "description" : "The inventory item class label describing the class specified by class_no.",
          "type" : "string"
        },
        "stock_level" : {
          "description" : "The current stock-level of the item specified by item_no",
          "type" : "number"
        },
        "avg_ratings" : {
          "description" : "An arbitrary value provided by the client to indicate user/buyer ratings for the specified item_no.\n",
          "type" : "number"
        },
        "num_ratings" : {
          "description" : "The number of ratings that have been tendeder regarding this item_no.",
          "type" : "integer",
          "format" : "int64"
        },
        "num_reviews" : {
          "description" : "The number of user/buyer reviews for this item_no.",
          "type" : "integer",
          "format" : "int64"
        },
        "image_url" : {
          "description" : "The URL to the inventory item image for this item_no.",
          "type" : "string"
        },
        "image_text" : {
          "description" : "Alternative text to display for the inventory item image if that image cannot be displayed or is not found.\n",
          "type" : "string"
        },
        "client_item_id" : {
          "description" : "The client-defined item ID to search for images",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "A multidimensional array of client-defined Service ID for this plan.\n",
          "type" : "string"
        },
        "client_item_plan_id" : {
          "description" : "client-defined item plan ID the item appears on",
          "type" : "string"
        }
      }
    },
    "GetAcctStatusHistoryMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "stat_hist" : {
          "description" : "An array of status history records for the account.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StatHist"
          }
        }
      }
    },
    "UnapplyCmMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "unapplied_cm_details" : {
          "description" : "Array of credit memo line unapplication.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UnappliedCmDetail"
          }
        }
      },
      "required" : [ "unapplied_cm_details" ]
    },
    "InvoiceTransToReverse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "invoice_no" : {
          "description" : "Invoice number of the invoice being reversed. Required if Invoice_line_no is used.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_line_no" : {
          "description" : "Sequence number of the invoice transaction. Valid only if invoice_no is provided.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_transaction_id" : {
          "description" : "Id of the specific invoice transaction to reverse.",
          "type" : "integer",
          "format" : "int64"
        },
        "invoice_line_reversing_amount" : {
          "description" : "The amount to be refunded from this specific line item.",
          "type" : "number"
        },
        "invoice_line_reversing_date" : {
          "description" : "The date when this line item is reversed. The date is in the format yyyy-mm-dd.\n",
          "type" : "string"
        }
      }
    },
    "UpdateAcctSuppFieldsMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "update_acct_supp_fields_m" ],
          "default" : "update_acct_supp_fields_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "field_name" : {
          "description" : "Supplemental field name.",
          "type" : "string"
        },
        "value_text" : {
          "description" : "String value of the named supplemental field.\n",
          "type" : "string"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "account_no" ]
    },
    "ModifyAcctPlanUnitInstancesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Textual description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "proration_result_amount" : {
          "description" : "The currency amount of any resulting proration action performed as a result of the requested plan change. For plan assignments with an assignment directive of '1' (perform on anniversary date), or '2' (honor client default proration action) when the default configuration is to not do proration, or '3' (force no proration), the value returned in this field will always be '0'. When proration is performed the value returned in this field will either be a positive currency value (indicating a resulting charge to the account) or a negative currency value (indicating a credit to the account). If the value passed in field do_write is false then any positive or negative value returned in this field is notational only, demonstrating what proration effect would be applied to the account if the requested plan assignment/de-assignment were to be actually performed.\n",
          "type" : "number"
        },
        "collection_error_code" : {
          "description" : "If a collection is attempted, returns the error code associated with the collection.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "collection_error_msg" : {
          "description" : "The error message associated with collection_error_code.\n",
          "type" : "string"
        },
        "statement_error_code" : {
          "description" : "The error code if statement generation fails.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "statement_error_msg" : {
          "description" : "The text message associated with 'statement_error_code'\n",
          "type" : "string"
        },
        "proc_cvv_response" : {
          "description" : "The processor return code from CVV validation.\n",
          "type" : "string"
        },
        "proc_avs_response" : {
          "description" : "Processor return code from address validation\n",
          "type" : "string"
        },
        "proc_cavv_response" : {
          "description" : "The processors return code for security validation.\n",
          "type" : "string"
        },
        "proc_status_code" : {
          "description" : "The processor status code",
          "type" : "string"
        },
        "proc_status_text" : {
          "description" : "The processors status description",
          "type" : "string"
        },
        "proc_payment_id" : {
          "description" : "The processor payment ID",
          "type" : "string"
        },
        "proc_auth_code" : {
          "description" : "Authorization code provided by the issuing bank\n",
          "type" : "string"
        },
        "proc_merch_comments" : {
          "description" : "Additional information passed to payment processor\n",
          "type" : "string"
        },
        "cancelled_supp_plans" : {
          "description" : "An array containing the supplemental plans cancelled.\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CancelledSuppPlan"
          }
        },
        "invoice_no" : {
          "description" : "The Aria-assigned unique identifier of a given invoice.",
          "type" : "integer",
          "format" : "int64"
        },
        "expectd_activation_fee" : {
          "description" : "The activation fee the account holder can expect based on the activation fees of the plans on this invoice",
          "type" : "number"
        },
        "expectd_mthly_recurring_cost" : {
          "description" : "Regardless of the billing interval on the account, the monthly recurring cost of this change\n",
          "type" : "number"
        },
        "expectd_annu_recurring_cost" : {
          "description" : "",
          "type" : "number"
        },
        "invoice_line_item" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvoiceLineItem"
          }
        },
        "total_charges_before_tax" : {
          "description" : "Total amount to be charged to the account before taxes have been calculated.",
          "type" : "number"
        },
        "total_tax_charges" : {
          "description" : "Total taxes as calculated for the amount of the transaction.",
          "type" : "number"
        },
        "total_charges_after_tax" : {
          "description" : "Total amount to be charged to the account after taxes have been calculated.",
          "type" : "number"
        },
        "total_credit" : {
          "description" : "The total amount of the credit to be applied to the account",
          "type" : "number"
        },
        "total_tax_credit" : {
          "description" : "The tax amount of the credit to be applies",
          "type" : "number"
        },
        "total_credit_before_tax" : {
          "description" : "The credit to be applied before tax is taken into account",
          "type" : "number"
        },
        "total" : {
          "description" : "The grand total of this invoice",
          "type" : "number"
        },
        "proration_credit_result_amount" : {
          "description" : "The total pro-rated credit amount",
          "type" : "number"
        },
        "proration_credit_amount" : {
          "description" : "The non-tax pro-rated credit amount",
          "type" : "number"
        },
        "proration_tax_amount" : {
          "description" : "The pro-rated tax credit amount",
          "type" : "number"
        }
      }
    },
    "SetAcctNotifyOverrideMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "set_acct_notify_override_m" ],
          "default" : "set_acct_notify_override_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "acct_user_id" : {
          "description" : "Client (or user)-assigned unique account identifier. If either acct_no or client_acct_id is valued, this field must be blank.\n",
          "type" : "string"
        },
        "client_acct_id" : {
          "description" : "Client-assigned identifier for the account. If either acct_no or acct_user_id is valued, this field must be blank.\n",
          "type" : "string",
          "maxLength" : 50
        },
        "template_class" : {
          "description" : "Aria-assigned unique identification code for message template class.\n",
          "type" : "string"
        },
        "override_template_no" : {
          "description" : "Aria-assigned unique template identifier for the message template.",
          "type" : "integer",
          "format" : "int64"
        },
        "behavioral_option" : {
          "description" : "Specifies the distillation behavioral option that is to be used for this template class.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "override_template_option" : {
          "description" : "Template override options.",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key", "template_class" ]
    },
    "AllSurcharge" : {
      "type" : "object",
      "description" : "An array containing surcharges.\\n",
      "properties" : {
        "surcharge_no" : {
          "description" : "The surcharge number for a specific account",
          "type" : "integer",
          "format" : "int64"
        },
        "surcharge_name" : {
          "description" : "The Aria-assigned surcharge name for that account",
          "type" : "string"
        },
        "client_surcharge_id" : {
          "description" : "Client-defined surcharge id.",
          "type" : "string"
        },
        "description" : {
          "description" : "Description for the surcharge number\n",
          "type" : "string"
        },
        "ext_description" : {
          "description" : "Ext_description for the surcharge number\n",
          "type" : "string"
        },
        "surcharge_type" : {
          "description" : "It specifies the surcharge type",
          "type" : "string"
        },
        "currency" : {
          "description" : "The currency to which this surcharge applies",
          "type" : "string"
        },
        "tax_group" : {
          "description" : "If taxable, the tax group this item belongs to",
          "type" : "string"
        },
        "invoice_app_method" : {
          "description" : "Invoice applied method\n",
          "type" : "string"
        },
        "rev_gl_code" : {
          "description" : "rev gl code for this surcharge\n",
          "type" : "string"
        },
        "ar_gl_code" : {
          "description" : "Aria-defined general ledger code\n",
          "type" : "string"
        },
        "surcharge_plan" : {
          "description" : "Represents all the plans of the surcharge",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SurchargePlan"
          }
        },
        "surcharge_rate" : {
          "description" : "Represents the rates for the default rate schedule for the default currency for the plan\n",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SurchargeRate"
          }
        }
      }
    },
    "GetClientItemImagesMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "item_images" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ItemImage"
          }
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "AllClientItemDetail" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "item_no" : {
          "description" : "The unique ID of the item being retrieved",
          "type" : "integer",
          "format" : "int64"
        },
        "item_label" : {
          "description" : "The name or label for this item",
          "type" : "string"
        },
        "service_no" : {
          "description" : "The service number associated with this item, which will be used during invoicing",
          "type" : "integer",
          "format" : "int64"
        },
        "service_desc" : {
          "description" : "The long description of the service associated with this item",
          "type" : "string"
        },
        "client_item_id" : {
          "description" : "The client-defined item ID to search for images",
          "type" : "string"
        },
        "client_service_id" : {
          "description" : "A multidimensional array of client-defined Service ID for this plan.\n",
          "type" : "string"
        },
        "client_item_plan_id" : {
          "description" : "client-defined item plan ID the item appears on",
          "type" : "string"
        },
        "usage_type_cd" : {
          "description" : "An array containing usage_type_cd(s) to denote which usage type(s) to record.",
          "type" : "string"
        },
        "all_service_supp_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllServiceSuppField"
          }
        },
        "client_sku" : {
          "description" : "",
          "type" : "string"
        },
        "item_plan" : {
          "description" : "The plan associated with this item to assign when the item is purchased",
          "type" : "integer",
          "format" : "int64"
        },
        "item_months" : {
          "description" : "The months to stack for this item",
          "type" : "integer",
          "format" : "int64"
        },
        "stock_level" : {
          "description" : "The current number of this item left in stock",
          "type" : "number"
        },
        "avg_ratings" : {
          "description" : "(DEPRECATED) The average user rating of this item",
          "type" : "integer",
          "format" : "int64"
        },
        "num_ratings" : {
          "description" : "(DEPRECATED) The number of total ratings for this item",
          "type" : "integer",
          "format" : "int64"
        },
        "num_reviews" : {
          "description" : "(DEPRECATED) The number of user reviews for this item",
          "type" : "integer",
          "format" : "int64"
        },
        "item_type" : {
          "description" : "The type of item, see allowable values legend",
          "type" : "integer",
          "format" : "int64"
        },
        "item_desc" : {
          "description" : "The long description of the item",
          "type" : "string"
        },
        "active_ind" : {
          "description" : "Whether or not this item is considered an active, in-stock item",
          "type" : "integer",
          "format" : "int64"
        },
        "modify_price_ind" : {
          "description" : "Whether or not the item price can be modified at sale time",
          "type" : "string"
        },
        "subunit_qty" : {
          "description" : "Allows the client to associate a quantity of an arbitrary virtual item which is associated with a single unit of this item (e.g. 500 gold pieces)",
          "type" : "number"
        },
        "subunit_label" : {
          "description" : "The item name of the subunit represented by a single quantity of this item",
          "type" : "string"
        },
        "service_type" : {
          "description" : "(DEPRECATED) This field is no longer used",
          "type" : "string"
        },
        "coa_id" : {
          "description" : "The system internal Chart-of-Accounts ID for this item",
          "type" : "string"
        },
        "client_coa_code" : {
          "description" : "The client-specified Chart-of-Accounts ID for this item",
          "type" : "string"
        },
        "taxable_ind" : {
          "description" : "Whether or not taxes apply to this item",
          "type" : "integer",
          "format" : "int64"
        },
        "tax_group" : {
          "description" : "If taxable, the tax group this item belongs to",
          "type" : "integer",
          "format" : "int64"
        },
        "usage_type" : {
          "description" : "Purchase scope for inventory item, default is null (both 0 and 1)",
          "type" : "integer",
          "format" : "int64"
        },
        "purchase_scope" : {
          "description" : "Purchase scope for inventory item, default is null (both 0 and 1)",
          "type" : "integer",
          "format" : "int64"
        },
        "all_item_prices" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllItemPrice"
          }
        },
        "all_item_images" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllItemImage"
          }
        },
        "all_item_supp_fields" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllItemSuppField"
          }
        },
        "all_item_classes" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AllItemClasse"
          }
        }
      }
    },
    "PlanInstanceList" : {
      "type" : "object",
      "description" : "Array of Master Plan Instances or Client Plan Instance Id",
      "properties" : {
        "plan_instance_no" : {
          "description" : "The unique identifier of the master plan instance.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_instance_id" : {
          "description" : "The client-defined identifier of the master plan instance.",
          "type" : "string"
        }
      }
    },
    "GetOrderMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_order_m" ],
          "default" : "get_order_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Client No",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Auth Key",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "order_no" : {
          "description" : "If this value is not null, then information about this specific order number will be retrieved. If null, then all orders for the given acct_no will be retrieved.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "client_order_id" : {
          "description" : "Client specified order ID.",
          "type" : "string"
        },
        "limit_records" : {
          "description" : "Limits the number of records which are returned.",
          "type" : "integer",
          "format" : "int64"
        },
        "details_flag" : {
          "description" : "If 1, also returns the order line items",
          "type" : "integer",
          "format" : "int64"
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format" ]
    },
    "GetAllAcctReceiptIdsMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "acct_receipt" : {
          "description" : "An array of account receipt records.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcctReceipt"
          }
        }
      }
    },
    "RateSchedTranslation" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "locale_name" : {
          "description" : "Name of the locale.",
          "type" : "string"
        },
        "schedule_no" : {
          "description" : "The ID of this rate schedule",
          "type" : "integer",
          "format" : "int64"
        },
        "schedule_name" : {
          "description" : "The name of this rate schedule",
          "type" : "string"
        },
        "locale_no" : {
          "description" : "Aria-assigned unique identifier of the locale used for translations. This value must be unique across all Aria clients.\n",
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "PlanGroup" : {
      "type" : "object",
      "description" : "A grouping of plans which can be used for plan assignment",
      "properties" : {
        "plan_group_no" : {
          "description" : "The ID of this plan group",
          "type" : "integer",
          "format" : "int64"
        },
        "plan_group_name" : {
          "description" : "The name of this plan group",
          "type" : "string"
        },
        "plan_group_desc" : {
          "description" : "The long description of this plan group",
          "type" : "string"
        },
        "plan_group_usage" : {
          "description" : "Determines where the plan groups are made available",
          "type" : "string"
        },
        "selectable_ind" : {
          "description" : "Whether or not this plan group is selectable",
          "type" : "integer",
          "format" : "int64"
        },
        "client_plan_group_id" : {
          "description" : "Client-defined ID for this plan group",
          "type" : "string"
        }
      }
    },
    "ValidateSessionMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "user_id" : {
          "description" : "Account's user ID.",
          "type" : "string"
        },
        "account_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts..\n",
          "type" : "integer",
          "format" : "int64"
        },
        "alt_caller_id" : {
          "description" : "User ID given by user when creating the session.",
          "type" : "string"
        },
        "application_id" : {
          "description" : "The application identifier in which the API is being used.(Example: Sales Force).",
          "type" : "string"
        },
        "application_date" : {
          "description" : "The application date/timestamp, ie. 01/01/2014 10:00:00 to track when the application called the API",
          "type" : "string"
        },
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        }
      }
    },
    "GetAllActionsByReceiptIdMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_all_actions_by_receipt_id_m" ],
          "default" : "get_all_actions_by_receipt_id_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_receipt_id" : {
          "description" : "Client-defined unique identifier used to track related system actions\n",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "acct_no", "client_receipt_id" ]
    },
    "GetAcctUniversalContractMRequest" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "rest_call" : {
          "type" : "string",
          "enum" : [ "get_acct_universal_contract_m" ],
          "default" : "get_acct_universal_contract_m"
        },
        "output_format" : {
          "type" : "string",
          "enum" : [ "json" ],
          "default" : "json"
        },
        "client_no" : {
          "description" : "Aria-assigned unique identifier indicating the Aria client providing service to this account.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "auth_key" : {
          "description" : "Aria-assigned unique key for authenticating the validity of the requestor. This key is passed with each method call.\n",
          "type" : "string"
        },
        "acct_no" : {
          "description" : "Aria-assigned account identifier. This value is unique across all Aria-managed accounts.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_acct_id" : {
          "description" : "Client-defined account identifier.",
          "type" : "string",
          "maxLength" : 50
        },
        "optional_transaction_qualifiers" : {
          "description" : "Array of additional values you can associate with this API call.",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptionalTransactionQualifier"
          }
        },
        "alt_caller_id" : {
          "description" : "",
          "type" : "string"
        }
      },
      "required" : [ "rest_call", "output_format", "client_no", "auth_key" ]
    },
    "GetAcctBalanceMResponse" : {
      "type" : "object",
      "description" : "",
      "properties" : {
        "error_code" : {
          "description" : "Aria-assigned error identifier. 0 indicates no error.\n",
          "type" : "integer",
          "format" : "int64"
        },
        "error_msg" : {
          "description" : "Description of any error that occurred.  \"OK\" if there was no error.\n",
          "type" : "string"
        },
        "currency_cd" : {
          "description" : "The 3-character ISO-compliant currency code in lowercase for monetary values used in the context of this API method.\n",
          "type" : "string"
        },
        "acct_balance" : {
          "description" : "The outstanding balance on the account.",
          "type" : "string"
        },
        "master_plan_instances" : {
          "description" : "",
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MasterPlanInstance"
          }
        }
      }
    },
    "FunctionalAcctGroupsUpdate" : {
      "type" : "object",
      "description" : "Array of functional groups to update.",
      "properties" : {
        "functional_acct_group_no" : {
          "description" : "Array of functional account groups.",
          "type" : "integer",
          "format" : "int64"
        },
        "client_functional_acct_group_id" : {
          "description" : "Array of functional account group IDs to which this account should be assigned",
          "type" : "string"
        },
        "functional_acct_grp_directive" : {
          "description" : "For each functional group, this specifies what action to take",
          "type" : "integer",
          "format" : "int64"
        }
      }
    }
  }
}